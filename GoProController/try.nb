(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    912945,      23063]
NotebookOptionsPosition[    873295,      21852]
NotebookOutlinePosition[    873637,      21867]
CellTagsIndexPosition[    873594,      21864]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750076739925*^9, 3.696750092889632*^9}, {
   3.696750795508745*^9, 3.696750795941852*^9}, {3.697004982280596*^9, 
   3.697004984103878*^9}, {3.697005032328155*^9, 3.697005064070107*^9}, 
   3.697005137851479*^9, 3.697005180719895*^9, 3.6970052219541187`*^9, {
   3.697005335483245*^9, 3.697005343217822*^9}, 3.697005750929583*^9, 
   3.697355226861183*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.700313396710945*^9}]
}, Open  ]],

Cell[BoxData["\"\</home/cukr/workspace/goProController/goProController/Kernel/\
init.m\>\""], "Input",
 CellChangeTimes->{{3.6973552268657722`*^9, 3.697355226868949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6970057578190107`*^9, 3.6970057662348022`*^9}, 
   3.697355226883486*^9}],

Cell[BoxData[
 TemplateBox[{
  "Get","noopen",
   "\"Cannot open \\!\\(\\*RowBox[{\\\"\\\\\\\"goProController`\\\\\\\"\\\"}]\
\\).\"",2,4,3,31780471094963043630,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7003134004558897`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.700313400459832*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6968442811713*^9, 3.696844294752799*^9}, {
   3.6968444281477127`*^9, 3.6968444299308977`*^9}, 3.697005442218766*^9, 
   3.697005855011231*^9, 3.697355226885248*^9}],

Cell[CellGroupData[{

Cell["Funkce pro slo\[ZHacek]en\[IAcute] p\[RHacek]\[IAcute]kazu", \
"Subsubsection",
 CellChangeTimes->{{3.696572942638645*^9, 3.696572947646805*^9}}],

Cell["\<\
funkce goProMakeCommand [command_,param_] nastav\[IAcute] v url p\[RHacek]\
\[IAcute]kaz pro goPro a jeho parametr, vyu\[ZHacek]\[IAcute]v\[AAcute] samoz\
\[RHacek]ejm\[EHacek] prom\[EHacek]nn\[YAcute]ch pot\[RHacek]ebn\[YAcute]ch \
pro ovl\[AAcute]d\[AAcute]n\[IAcute] gopro\
\>", "Text",
 CellChangeTimes->{{3.696572550546661*^9, 3.696572627980801*^9}, {
  3.697355226973854*^9, 3.697355227191309*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPassword", "=", "\"\<12345678\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goProUrl", "=", "\"\<http://10.5.5.9/\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6965727875766773`*^9, 3.696572866685979*^9}, {
  3.696574570792346*^9, 3.696574571099667*^9}, {3.697355227205649*^9, 
  3.697355227206719*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Funkce", " ", "pro", " ", "slozeni", " ", "url", " ", "pro", " ", 
     "ovladani", " ", "kamery"}], ",", 
    RowBox[{"unit", " ", 
     RowBox[{"(", 
      RowBox[{"bacpac", "||", "camera"}], ")"}]}], ",", 
    RowBox[{"command", " ", 
     RowBox[{"(", "prikat", ")"}]}], ",", 
    RowBox[{"parram", " ", 
     RowBox[{"(", 
      RowBox[{"parametr", " ", "prikazu"}], ")"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"goProMakeCommand", "[", 
     RowBox[{"unit_String", ",", "command_String", ",", "parram_String"}], 
     "]"}], ":=", 
    RowBox[{
    "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
     "\"\<?t=\>\"", "<>", "goProPassword", "<>", "\"\<&p=%\>\"", "<>", 
     "parram"}]}], "\n", 
   RowBox[{
    RowBox[{"goProGetStatus", "[", 
     RowBox[{"unit_String", ",", "command_String"}], "]"}], ":=", 
    RowBox[{
    "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
     "\"\<?t=\>\"", "<>", "goProPassword"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "spusteni", " ", "prikazu", " ", "exec", " ", "pomoci", " ", 
     "HTTPRequest", " ", "a", " ", "URLRead"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"execute", "[", "exec_String", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"request", "=", 
       RowBox[{"HTTPRequest", "[", "exec", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"URLRead", "[", "request", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696844696477223*^9, 3.696844770396954*^9}, {
  3.696844917870075*^9, 3.696844934930842*^9}, {3.697355227214542*^9, 
  3.6973552272193193`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stazen\[IAcute] nastaveni kamery", "Subsection",
 CellChangeTimes->{{3.69684437407681*^9, 3.696844377705361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{"HTTPRequest", "[", "\"\<http://10.5.5.9/bacpac/sd\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.696574883207204*^9, 3.6965749210347233`*^9}, {
  3.6965751968841667`*^9, 3.6965751973457727`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "8", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", 
   "54", ",", "55", ",", "56"}], "}"}]], "Output",
 CellChangeTimes->{3.6968444359999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeSettings", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"execute", "[", 
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"\"\<camera\>\"", ",", "x", ",", "y"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6968444870710993`*^9, 3.696844546623432*^9}, {
   3.696844757223896*^9, 3.696844761154315*^9}, 3.697355227227249*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeSettings", "[", 
   RowBox[{"\"\<VV\>\"", ",", "\"\<06\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.696844589131288*^9, 3.696844624732513*^9}, {
  3.6968448014152527`*^9, 3.696844810534724*^9}, {3.696844869343486*^9, 
  3.6968448750998*^9}, {3.696844951184965*^9, 3.6968450692260437`*^9}, {
  3.696845238475271*^9, 3.696845239323852*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 8}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 8}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 8}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696844625649702*^9, 3.696844668693445*^9}, 
   3.6968447044402742`*^9, {3.696844764636897*^9, 3.696844811155263*^9}, {
   3.6968448704932756`*^9, 3.696844875635837*^9}, {3.696844957422426*^9, 
   3.69684500831962*^9}, {3.6968450500749073`*^9, 3.696845066467105*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"HTTPRequest", "[", 
  RowBox[{
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6973552272427464`*^9, 3.697355227245572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HTTPResponse", "[", 
  RowBox[{"goProGetStatus", "[", 
   RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.696845071957049*^9, 3.696845110060686*^9}, 
   3.697355227270851*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]], 36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46,
                  53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63,
                  116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                Association["ContentType" -> "text/html;charset=utf-8"], 
                CharacterEncoding -> "UTF-8"], "BodyBytes"]]; 
            Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"text/html;charset=utf-8\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]], 36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                
                ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46,
                  53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63,
                  116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                Association["ContentType" -> "text/html;charset=utf-8"], 
                CharacterEncoding -> "UTF-8"], "BodyBytes"]]; 
            Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"text/html;charset=utf-8\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46, 53, 46, 57, 
    47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63, 116, 61, 49, 50, 51, 52, 
    53, 54, 55, 56}], 
   Association["ContentType" -> "text/html;charset=utf-8"], CharacterEncoding -> 
   "UTF-8"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696845073654273*^9, 3.6968451105515137`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"req", "=", 
  RowBox[{"HTTPRequest", "[", 
   RowBox[{"goProGetStatus", "[", 
    RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"URLRead", "[", "req", "]"}], "\[IndentingNewLine]", 
 RowBox[{"resp", "=", 
  RowBox[{"URLExecute", "[", "req", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6895714681817007`*^9, 3.689571468798458*^9}, {
   3.6895715680917606`*^9, 3.6895716673545628`*^9}, {3.689571697682626*^9, 
   3.6895717618563995`*^9}, {3.696845168981282*^9, 3.696845220570067*^9}, {
   3.6968452963347473`*^9, 3.696845300987903*^9}, 3.697355227275853*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPRequest",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          GraphicsBox[
           {RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
            InsetBox[
             StyleBox["\<\"GET\"\>",
              StripOnInput->False,
              LineColor->GrayLevel[1],
              FrontFaceColor->GrayLevel[1],
              BackFaceColor->GrayLevel[1],
              GraphicsColor->GrayLevel[1],
              FontSize->10,
              FontWeight->Bold,
              FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
           Background->None,
           
           ImageSize->
            Dynamic[{
             Automatic, (3 CurrentValue["FontCapHeight"])/
              AbsoluteCurrentValue[Magnification]}]],
          Active->False,
          Appearance->"Frameless",
          ButtonFunction:>Null,
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"URL: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TagBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                  Short], True->
                 StyleBox[
                  TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                   Short], "HyperlinkActive"]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{"Hyperlink"},
                 FrameMargins->0,
                 ImageSize->Automatic],
                BaseStyle->"Hyperlink",
                ButtonData->{
                  URL["http://10.5.5.9/camera/vv?t=12345678"], None},
                ButtonNote->"http://10.5.5.9/camera/vv?t=12345678"],
               
               Annotation[#, "http://10.5.5.9/camera/vv?t=12345678", 
                "Hyperlink"]& ],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"ContentType: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          GraphicsBox[
           {RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
            InsetBox[
             StyleBox["\<\"GET\"\>",
              StripOnInput->False,
              LineColor->GrayLevel[1],
              FrontFaceColor->GrayLevel[1],
              BackFaceColor->GrayLevel[1],
              GraphicsColor->GrayLevel[1],
              FontSize->10,
              FontWeight->Bold,
              FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
           Background->None,
           
           ImageSize->
            Dynamic[{
             Automatic, (3 CurrentValue["FontCapHeight"])/
              AbsoluteCurrentValue[Magnification]}]],
          Active->False,
          Appearance->"Frameless",
          ButtonFunction:>Null,
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"URL: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TagBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                  Short], True->
                 StyleBox[
                  TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                   Short], "HyperlinkActive"]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{"Hyperlink"},
                 FrameMargins->0,
                 ImageSize->Automatic],
                BaseStyle->"Hyperlink",
                ButtonData->{
                  URL["http://10.5.5.9/camera/vv?t=12345678"], None},
                ButtonNote->"http://10.5.5.9/camera/vv?t=12345678"],
               
               Annotation[#, "http://10.5.5.9/camera/vv?t=12345678", 
                "Hyperlink"]& ],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"ContentType: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPRequest["http://10.5.5.9/camera/vv?t=12345678", 
   Association[]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.6968453013686237`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.6968453091289682`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.696845310712674*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.696845315582663*^9, 3.696845348753879*^9}, {
   3.696845445543771*^9, 3.69684545135005*^9}, {3.6970058938183203`*^9, 
   3.697005904258731*^9}, 3.697355227280508*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696845244024126*^9, 3.696845317032251*^9, {3.696845440518878*^9, 
   3.696845451781955*^9}, {3.697005876695902*^9, 3.697005904706955*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TEst", "Title",
 CellChangeTimes->{{3.6970059391630793`*^9, 3.697005940126431*^9}}],

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750076739925*^9, 3.696750092889632*^9}, {
   3.696750795508745*^9, 3.696750795941852*^9}, {3.697005376998857*^9, 
   3.697005378446042*^9}, {3.6970055450520573`*^9, 3.697005571834888*^9}, 
   3.697355227281714*^9}],

Cell[BoxData["\"\</home/cukr/workspace/goProController/goProController/Kernel/\
init.m\>\""], "Input",
 CellChangeTimes->{{3.697355227282426*^9, 3.69735522728439*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697007033818371*^9, 3.6970070421314363`*^9}, 
   3.697355227310413*^9}],

Cell["Inicializace hesla ke goPro kamere", "Text",
 CellChangeTimes->{{3.696750687357234*^9, 3.696750693421286*^9}, 
   3.6973552273243093`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750566327804*^9, 3.696750579817667*^9}, 
   3.69735522734936*^9}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.6967505813620567`*^9, 3.6967508046179457`*^9, 
  3.696752234513191*^9, 3.6967526970930967`*^9, 3.6968457928807373`*^9, 
  3.6970059482711363`*^9}]
}, Open  ]],

Cell["Zapnut\[IAcute] kamery", "Text",
 CellChangeTimes->{{3.696750697936737*^9, 3.6967507047957983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6967507073742723`*^9, 3.696750710129911*^9}, 
   3.6973552273534517`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6967508082288017`*^9, {3.696752226710471*^9, 3.696752238209855*^9}, 
   3.696752698904038*^9, 3.696845806523322*^9, 3.69700595114977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zahajeni a vypnuti nataceni", "Subsubsection",
 CellChangeTimes->{{3.6967527115551043`*^9, 3.696752719378209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProShutter", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.696752723687476*^9, 3.696752736966157*^9}, 
   3.697355227356941*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProStop", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.696752732622096*^9, 3.696752738801538*^9}, 
   3.6973552273611307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani modu camery", "Subsubsection",
 CellChangeTimes->{{3.6967530051369553`*^9, 3.696753010594634*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6967530137064323`*^9, 3.6967530407451153`*^9}, {
  3.69735522736522*^9, 3.697355227365963*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696753030510977*^9, 3.696753042973267*^9}, 
   3.697005958210102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProBurstMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.696753050442895*^9, 3.696753073214384*^9}, {
  3.697355227370203*^9, 3.6973552273709106`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696753056252553*^9, 3.697005963164551*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProTimeLapseMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6967530771212254`*^9, 3.696753085435246*^9}, {
  3.697355227375128*^9, 3.697355227375955*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProStop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6967530952549753`*^9, 3.696753098553781*^9}, 
   3.697355227380096*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 3}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.69675308960707*^9, 3.6967530990634727`*^9}}]
}, Open  ]],

Cell["Vypnut\[IAcute] kamery", "Text",
 CellChangeTimes->{{3.6967507145952578`*^9, 3.696750719975833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOff", "[", "]"}]], "Input",
 CellChangeTimes->{{3.696750723462222*^9, 3.696750732621108*^9}, 
   3.697355227384009*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVGtIk2EU/uacog51kTSS5bSkHGUYQoQZ9KdCMsEKBJVYQ9Mfopn/oh8m
QUFkQdSPiEgSZDd1SKGChbe84BLU0NI007K8T2VeWk/nfb9va45F9MF7+Z73
4Zz3nPecJ11fVpBXpC8rNOi1p0v1JQWFhmvaU8WlBMllgiCo2dAKbA/aSpMa
g/1dghDClyD02VvR2GvFnbZyFLcU8tXUXSUeC8F8keNp50MkNyRBaQoTFBCM
AmEKk4Jj1V1PyA6nKyQ6M3qhMYMTQyV6dtNFdioxOD1Q+iF/2G1Vc6JSosfU
ajjOGAEiXe5lXVsXw4nhEn1/XTzHGUO2nc4cE4kTI9gsg745h5Mkpmg/kEcp
GJVInpjCFiAHfeRhbekq4ixKHO6rQsfKHBzOITQNZ0BjJqMm/zglZZvxKByy
6ci4DKo31Zj+5cLSwl0Uducgh0ZWmw7Rr6sw5XKgf7QY+YM2fKN977s4RPnF
Y3GsIckdqbCLZ5bFrzQrxWBNKqQOtWDWtYiukUzEsLsaQ5H4YQzrm604Vy+D
YNHhlsMJx3weznz0h2cj3qL0eOEJ5Y/CUhnA5x00B2NPRyV6Np34Ol2ERGsE
UqZ/YNNpxFEru4kGlxdW4HRUwjDjDy/HAQs5oSr0OKlovS49LJtVPHFhjSVo
31zH5Hga0mfmseVlyMANPUD+rD/8JnNAHu633/Yky9CcK1VFCBKGOvFpuQbH
a+nfHIuixVV69BvIHBvHBiXlLE9KAip4Uq4gbdQfnotoE/NCXeTxIsVBIwBR
7TZ8dy2gfSQfWfbHGNzawJeJE9C0PMOkawk9w5dw3v4Cn3+uwN6/Dzv94nsR
ZPSNRXoScZjVSH/fgAHnMtY2xtE9UYqUOsqjKRxH+p6jc3UOy84BvKJCjeYF
/Bece7H11LgrWGx4dyOpxEZSWSK3lbmcK4IP6eTLVB+S2GgiKVIkkXEZHnXc
+3fzEuTdvG7mW3uzR0TcqsBExEcV/lNzvBVNugtJ5x8BZCpHZ5JZj15S++Ng
vY4TffWSgnfrpbcIU6rZo/LCZGVD/5IIC7LfEwhdXQ==\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696750742098474*^9, 3.696750813311102*^9, 
  3.696752245910186*^9, 3.6967532402585583`*^9, 3.696845803711279*^9, 
  3.696846494477065*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveni foto modu", "Subsubsection",
 CellChangeTimes->{{3.6968458110351133`*^9, 3.696845818701964*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProPhotoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.696845825258896*^9, 3.696845828308042*^9}, 
   3.697355227385132*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVGtIk2EU/uacog51kTSS5bSkHGUYQoQZ9KdCMsEKBJVYQ9Mfopn/oh8m
QUFkQdSPiEgSZDd1SKGChbe84BLU0NI007K8T2VeWk/nfb9va45F9MF7+Z73
4Zz3nPecJ11fVpBXpC8rNOi1p0v1JQWFhmvaU8WlBMllgiCo2dAKbA/aSpMa
g/1dghDClyD02VvR2GvFnbZyFLcU8tXUXSUeC8F8keNp50MkNyRBaQoTFBCM
AmEKk4Jj1V1PyA6nKyQ6M3qhMYMTQyV6dtNFdioxOD1Q+iF/2G1Vc6JSosfU
ajjOGAEiXe5lXVsXw4nhEn1/XTzHGUO2nc4cE4kTI9gsg745h5Mkpmg/kEcp
GJVInpjCFiAHfeRhbekq4ixKHO6rQsfKHBzOITQNZ0BjJqMm/zglZZvxKByy
6ci4DKo31Zj+5cLSwl0Uducgh0ZWmw7Rr6sw5XKgf7QY+YM2fKN977s4RPnF
Y3GsIckdqbCLZ5bFrzQrxWBNKqQOtWDWtYiukUzEsLsaQ5H4YQzrm604Vy+D
YNHhlsMJx3weznz0h2cj3qL0eOEJ5Y/CUhnA5x00B2NPRyV6Np34Ol2ERGsE
UqZ/YNNpxFEru4kGlxdW4HRUwjDjDy/HAQs5oSr0OKlovS49LJtVPHFhjSVo
31zH5Hga0mfmseVlyMANPUD+rD/8JnNAHu633/Yky9CcK1VFCBKGOvFpuQbH
a+nfHIuixVV69BvIHBvHBiXlLE9KAip4Uq4gbdQfnotoE/NCXeTxIsVBIwBR
7TZ8dy2gfSQfWfbHGNzawJeJE9C0PMOkawk9w5dw3v4Cn3+uwN6/Dzv94nsR
ZPSNRXoScZjVSH/fgAHnMtY2xtE9UYqUOsqjKRxH+p6jc3UOy84BvKJCjeYF
/Bece7H11LgrWGx4dyOpxEZSWSK3lbmcK4IP6eTLVB+S2GgiKVIkkXEZHnXc
+3fzEuTdvG7mW3uzR0TcqsBExEcV/lNzvBVNugtJ5x8BZCpHZ5JZj15S++Ng
vY4TffWSgnfrpbcIU6rZo/LCZGVD/5IIC7LfEwhdXQ==\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696845828913883*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes12W", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.696845831021105*^9, 3.696845843764935*^9}, {
  3.6968462665695457`*^9, 3.6968462830444183`*^9}, {3.696846315214375*^9, 
  3.69684631630405*^9}, {3.697355227386139*^9, 3.697355227386694*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.696846283576539*^9, 3.696846316856024*^9, 
  3.697006064538666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes7W", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6968458484662437`*^9, 3.696845855098371*^9}, {
  3.696846298042192*^9, 3.696846298323709*^9}, {3.697355227387436*^9, 
  3.6973552273879633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.696846309988453*^9, 3.697006066807157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes7M", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.696845878364602*^9, 3.696845891156708*^9}, {
  3.696846299965189*^9, 3.696846300182949*^9}, {3.69735522738874*^9, 
  3.697355227389288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.69684630636043*^9, {3.697006081170841*^9, 3.697006089892351*^9}, 
   3.697006871873383*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes5M", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6968458920494843`*^9, 3.6968459015468607`*^9}, {
  3.696846301680973*^9, 3.696846301891829*^9}, {3.6973552273900013`*^9, 
  3.69735522739052*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6968463029197073`*^9, 3.697006083829154*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveeni VideoModu", "Section",
 CellChangeTimes->{{3.6968463283293953`*^9, 3.69684633980094*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697006235953516*^9, 3.697006243442038*^9}, 
   3.69700811228898*^9, 3.697355227391314*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69700625157483*^9, 3.697006255138254*^9}, {
   3.697006875525577*^9, 3.697006882332864*^9}, 3.697355227392124*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6970068836682653`*^9, 3.6970072224532146`*^9, 
  3.69700811624647*^9, 3.697008840454916*^9, 3.6970148145083237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6970068852679977`*^9, 3.697006888563645*^9}, 
   3.69700884387817*^9, 3.697355227392928*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007094594494*^9, 3.697007101329356*^9}, 
   3.6970088465950203`*^9, 3.697355227393661*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007047113288*^9, 3.697007051465156*^9}, {
   3.6970081349512663`*^9, 3.697008138182952*^9}, 3.6970088479797153`*^9, 
   3.6973552273943443`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007076507882*^9, 3.697007080526546*^9}, {
   3.697008146326054*^9, 3.6970081481927233`*^9}, 3.697008849268691*^9, 
   3.697355227395022*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1440", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697006929261551*^9, 3.6970069360944357`*^9}, {
   3.697008983169221*^9, 3.697009045562709*^9}, 3.697355227395677*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396303*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396935*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes960", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273975573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398222*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoResWVGA", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273995047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FPS", "Section",
 CellChangeTimes->{{3.6970124467080317`*^9, 3.697012446950409*^9}}],

Cell["\<\
FPS vy\[RHacek]e\[SHacek]\[IAcute]me pomoc\[IAcute] asociativn\[IAcute]ch pol\
\[IAcute]. na lev\[EAcute] stran\[EHacek] bude index (hodnota s jakou \
nastavujeme rozliseni videa, viz dalsi tabulka) a na prave strane bude list \
moznych fps pro tento index.\
\>", "Text",
 CellChangeTimes->{{3.6970124511441727`*^9, 3.697012518205467*^9}}],

Cell["\<\
4K - \[OpenCurlyDoubleQuote]06\[CloseCurlyDoubleQuote]
4K 17:9 - \[OpenCurlyDoubleQuote]08\[CloseCurlyDoubleQuote]
2,7K 17:9 - \[OpenCurlyDoubleQuote]07\[CloseCurlyDoubleQuote]
2,7K - \[OpenCurlyDoubleQuote]05\[CloseCurlyDoubleQuote]
1440 - \[OpenCurlyDoubleQuote]04\[CloseCurlyDoubleQuote]
1080 - \[OpenCurlyDoubleQuote]03\[CloseCurlyDoubleQuote]
1080SV - \[OpenCurlyDoubleQuote]09\[CloseCurlyDoubleQuote]
960 - \[OpenCurlyDoubleQuote]02\[CloseCurlyDoubleQuote]
720 - \[OpenCurlyDoubleQuote]01\[CloseCurlyDoubleQuote]
720SV - \[OpenCurlyDoubleQuote]0a\[CloseCurlyDoubleQuote]
WVGA - \[OpenCurlyDoubleQuote]00\[CloseCurlyDoubleQuote]

a tabulka FPS -> k\[OAcute]d
12 - 00
15 - 01
12p5 - 0b
24 - 02
25 - 03
30 - 04
48 - 05
50 - 06
60 - 07
100 - 08

00 - 12
01 - 15
0b - 12p5
02 - 24
03 - 25
04 - 30
05 - 48
06 - 50
07 - 60
08 - 100
09- 120
0a - 240
\
\>", "Text",
 CellChangeTimes->{{3.6970125262215014`*^9, 3.697012543205099*^9}, {
  3.697012724471985*^9, 3.6970127278501873`*^9}, {3.697013931575755*^9, 
  3.697013971781623*^9}, {3.69701404057907*^9, 3.6970140507158537`*^9}, {
  3.6970141262833023`*^9, 3.697014127452765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PossibleFPS", "[", "]"}], ":=", 
  RowBox[{"fpsPossible", "\[LeftDoubleBracket]", 
   RowBox[{"\"\<0\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"BaseForm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"goProGetStatus", "[", 
           RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}],
         "]"}], "]"}], ",", "1"}], "]"}]}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.697013646914556*^9, 3.6970137060800457`*^9}, {
   3.697014682889743*^9, 3.697014683665407*^9}, 3.6973552267619143`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeFPS", "[", "f_String", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.697014426610972*^9, 3.697014444639955*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fpsToCode", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<00\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<01\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<12p5\>\"", "\[Rule]", "\"\<0b\>\""}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<24\>\"", "\[Rule]", "\"\<02\>\""}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<25\>\"", "\[Rule]", "\"\<03\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<30\>\"", "\[Rule]", "\"\<04\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<48\>\"", "\[Rule]", "\"\<05\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<50\>\"", "\[Rule]", "\"\<06\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<60\>\"", "\[Rule]", "\"\<07\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<100\>\"", "\[Rule]", "\"\<08\>\""}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{3.697014324655643*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fpsPossible", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<00\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<240\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<01\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<60\>\"", ",", "\"\<120\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<0a\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<100\>\"", ",", "\"\<60\>\"", ",", "\"\<48\>\""}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<02\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<100\>\"", ",", "\"\<60\>\"", ",", "\"\<48\>\""}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<03\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<60\>\"", ",", "\"\<48\>\"", ",", "\"\<30\>\"", ",", 
        "\"\<24\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<09\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<60\>\"", ",", "\"\<48\>\"", ",", "\"\<30\>\"", ",", 
        "\"\<24\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<04\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<48\>\"", ",", "\"\<30\>\"", ",", "\"\<24\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<05\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<30\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<07\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<24\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<06\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<15\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<08\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<12\>\"", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697012738423359*^9, 3.6970127639517717`*^9}, {
  3.6970129386375427`*^9, 3.697013242321691*^9}, {3.697014200584042*^9, 
  3.697014326855414*^9}, {3.697014676540429*^9, 3.6970146774388943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{"\"\<0\>\"", "<>", 
   RowBox[{"StringTake", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"BaseForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"goProGetStatus", "[", 
          RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}], 
       "]"}], "]"}], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697013304859975*^9, 3.697013316442327*^9}, {
   3.697013396253469*^9, 3.6970135025087748`*^9}, {3.6970135929696836`*^9, 
   3.697013597433796*^9}, 3.697355226784049*^9}],

Cell[BoxData["\<\"0a\"\>"], "Output",
 CellChangeTimes->{{3.69701332071004*^9, 3.697013352688059*^9}, {
  3.697013405014707*^9, 3.697013459833313*^9}, {3.697013503034297*^9, 
  3.6970135187730427`*^9}, {3.697013598601871*^9, 3.697013630142242*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.697013530190452*^9, 3.697355226792193*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.697013530746654*^9, 3.697013752665345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleFPS", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697013710258058*^9, 3.69701371260804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"48\"\>", ",", "\<\"30\"\>", 
   ",", "\<\"24\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697013713131855*^9, {3.6970137546507587`*^9, 3.697013841921598*^9}, 
   3.697014689176331*^9, 3.697014826258122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226796034*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697014828679599*^9, 3.6970148337929773`*^9}, {
   3.6970149876822557`*^9, 3.697014990609029*^9}, 3.6973552267979307`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"48\"\>", ",", "\<\"30\"\>", 
   ",", "\<\"24\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.697014991342669*^9, 3.6970156377507563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleFPS", "[", "]"}], "\[LeftDoubleBracket]", "4", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697014993029011*^9, 3.697015020168758*^9}, {
  3.697355226800765*^9, 3.697355226801764*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970150098193617`*^9, 3.69701502102811*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<60\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697015029776887*^9, 3.69701505701112*^9}, 
   3.69735522681104*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 7}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 7}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 7}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970150339346523`*^9, 3.697015057457737*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orientation", "Subsection",
 CellChangeTimes->{{3.6970156972163897`*^9, 3.69701569876427*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226819454*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetOrientationUp", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6970157078041697`*^9, 3.697015718360355*^9}, 
   3.6973552268208513`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697015711129616*^9, 3.697015719374107*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FieldOfView", "Subsection",
 CellChangeTimes->{{3.6970158199445143`*^9, 3.697015823126854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fovToCode", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<wide\>\"", "\[Rule]", "\"\<00\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<medium\>\"", "\[Rule]", "\"\<01\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<narrow\>\"", "\[Rule]", "\"\<02\>\""}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697015828455617*^9, 3.697015912705552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fovPossible", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<00\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<01\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<narrow\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<0a\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<02\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<03\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\"", ",", "\"\<narrow\>\""}],
        "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<09\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<04\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<05\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<07\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<06\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<08\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6970159153758383`*^9, 3.6970159561993427`*^9}, {
  3.697016016453101*^9, 3.697016138854274*^9}, {3.697016172423712*^9, 
  3.697016193376082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFovPossible", "[", "]"}], ":=", 
  RowBox[{"fovPossible", "\[LeftDoubleBracket]", 
   RowBox[{"\"\<0\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"BaseForm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"goProGetStatus", "[", 
           RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}],
         "]"}], "]"}], ",", "1"}], "]"}]}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.697016237379881*^9, 3.697016260243245*^9}, 
   3.69735522683214*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getFovPossible", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697016262490415*^9, 3.697016264247119*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wide\"\>", ",", "\<\"medium\"\>", ",", "\<\"narrow\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697016264684701*^9, 3.6970162767779922`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226834444*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFOV", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6970167101284847`*^9, 3.697016715752756*^9}, 
   3.6973552268360653`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wide\"\>", ",", "\<\"medium\"\>", ",", "\<\"narrow\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697016716381311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFOV", "[", "\"\<medium\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697016717962492*^9, 3.697016764147241*^9}, {
   3.6970168283282547`*^9, 3.6970168342894373`*^9}, 3.697355226838171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697016733930933*^9, 3.697016770457183*^9}, {
  3.6970168259322243`*^9, 3.697016835102421*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["TIME LAPSE time", "Subsubsection",
 CellChangeTimes->{{3.6970169264278917`*^9, 3.697016930264762*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697016933758521*^9, 3.697016967909162*^9}, {
   3.697017031461629*^9, 3.697017041237356*^9}, {3.6970175593809967`*^9, 
   3.697017566476952*^9}, 3.697355226847085*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetTimeLapse", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleTimeLapse", "[", "]"}], "\[LeftDoubleBracket]", 
   "5", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6970175713822527`*^9, 3.697017638865718*^9}, {
  3.6970176885809317`*^9, 3.697017711935458*^9}, {3.697355226848948*^9, 
  3.697355226849825*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 30}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 30}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 30}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970175783951674`*^9, 3.697017604742661*^9}, {
  3.6970176847952337`*^9, 3.6970177124914722`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PN", "Subsubsection",
 CellChangeTimes->{{3.697017735022575*^9, 3.697017735290822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pn\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.697017740952365*^9, 3.6970177490868607`*^9}, {
  3.697355226858515*^9, 3.697355226859538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.697017749551409*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video resolution", "Title",
 CellChangeTimes->{{3.697356075411812*^9, 3.697356078782961*^9}}],

Cell[CellGroupData[{

Cell["Nastaveni pomoci funkce goProSetVideoRes[_String]", "Section",
 CellChangeTimes->{{3.697356735792468*^9, 3.697356751021182*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697356186955942*^9, 3.6973561960233173`*^9}, {
  3.697356261223359*^9, 3.697356261514947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossibleVideoRes", "[", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.69735620035425*^9, 3.697356207613982*^9}, {
  3.697356271754592*^9, 3.697356272909443*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\<\"WVGA\"\>"},
      {"\<\"720p\"\>"},
      {"\<\"960p\"\>"},
      {"\<\"1080p\"\>"},
      {"\<\"1440p\"\>"},
      {"\<\"2.7K\"\>"},
      {"\<\"4K\"\>"},
      {"\<\"2.7K-17:9\"\>"},
      {"\<\"4K-17:9\"\>"},
      {"\<\"1080p-SV\"\>"},
      {"\<\"720p-SV\"\>"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6973562081527767`*^9, 3.6973562739597387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoRes", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleVideoRes", "[", "]"}], "\[LeftDoubleBracket]", 
   "11", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697356220297722*^9, 3.697356238320368*^9}, {
  3.697356277884575*^9, 3.697356331522161*^9}, {3.697356569514999*^9, 
  3.697356635475658*^9}, {3.6973566753016853`*^9, 3.697356694454258*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6973562389391317`*^9, 3.6973563321246967`*^9}, {
  3.697356573211578*^9, 3.697356636365148*^9}, {3.6973566764078293`*^9, 
  3.697356695041009*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveni VideoModu", "Section",
 CellChangeTimes->{{3.6968463283293953`*^9, 3.69684633980094*^9}, 
   3.6973567551411324`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697006235953516*^9, 3.697006243442038*^9}, 
   3.69700811228898*^9, 3.697355227391314*^9, {3.697356760160336*^9, 
   3.6973567604562817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69700625157483*^9, 3.697006255138254*^9}, {
   3.697006875525577*^9, 3.697006882332864*^9}, 3.697355227392124*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6970068836682653`*^9, 3.6970072224532146`*^9, 
  3.69700811624647*^9, 3.697008840454916*^9, 3.6970148145083237`*^9, 
  3.697356763528138*^9, 3.6973570458960533`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6970068852679977`*^9, 3.697006888563645*^9}, 
   3.69700884387817*^9, 3.697355227392928*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007094594494*^9, 3.697007101329356*^9}, 
   3.6970088465950203`*^9, 3.697355227393661*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007047113288*^9, 3.697007051465156*^9}, {
   3.6970081349512663`*^9, 3.697008138182952*^9}, 3.6970088479797153`*^9, 
   3.6973552273943443`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007076507882*^9, 3.697007080526546*^9}, {
   3.697008146326054*^9, 3.6970081481927233`*^9}, 3.697008849268691*^9, 
   3.697355227395022*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1440", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697006929261551*^9, 3.6970069360944357`*^9}, {
   3.697008983169221*^9, 3.697009045562709*^9}, 3.697355227395677*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396303*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396935*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes960", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273975573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398222*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoResWVGA", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273995047`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PhotoResolution", "Title",
 CellChangeTimes->{{3.6973576721183643`*^9, 3.6973576759065847`*^9}}],

Cell[CellGroupData[{

Cell["Nastaveni pomoci funkce goProSetPhotoRes[_String]", "Section",
 CellChangeTimes->{{3.697356735792468*^9, 3.697356751021182*^9}, {
  3.6973576878224287`*^9, 3.697357688426689*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697356186955942*^9, 3.6973561960233173`*^9}, {
  3.697356261223359*^9, 3.697356261514947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.69735620035425*^9, 3.697356207613982*^9}, {
  3.697356271754592*^9, 3.697356272909443*^9}, {3.697357700076807*^9, 
  3.6973577025415287`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\<\"5M\"\>"},
      {"\<\"7W\"\>"},
      {"\<\"12W\"\>"},
      {"\<\"7M\"\>"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.697357703072138*^9, 3.697357727230448*^9}, 
   3.697357801042569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetPhotoRes", "[", 
  RowBox[{
   RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697356220297722*^9, 3.697356238320368*^9}, {
  3.697356277884575*^9, 3.697356331522161*^9}, {3.697356569514999*^9, 
  3.697356635475658*^9}, {3.6973566753016853`*^9, 3.697356694454258*^9}, {
  3.697357747591146*^9, 3.697357809299756*^9}, {3.697357877043523*^9, 
  3.697357896635682*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 3}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6973562389391317`*^9, 3.6973563321246967`*^9}, {
  3.697356573211578*^9, 3.697356636365148*^9}, {3.6973566764078293`*^9, 
  3.697356695041009*^9}, {3.697357753079299*^9, 3.697357809766149*^9}, {
  3.6973578796917667`*^9, 3.697357897420589*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Burst Rate", "Title",
 CellChangeTimes->{{3.697469320622485*^9, 3.697469323376687*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697469329098851*^9, 3.697469330339617*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleBurstRate", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6974693326344757`*^9, 3.697469340117882*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"3/1\"\>", ",", "\<\"10/1\"\>", ",", "\<\"10/2\"\>", 
   ",", "\<\"30/1\"\>", ",", "\<\"30/2\"\>", ",", "\<\"30/3\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697469340651951*^9, 3.697469443504343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetPhotoRes", "[", "\"\<12W\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetBurstRate", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleBurstRate", "[", "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697469349916401*^9, 3.69746942566118*^9}, {
  3.6974694929235773`*^9, 3.6974695146456327`*^9}, {3.697469587351048*^9, 
  3.69746958767795*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 5}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 5}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 5}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6974693700935383`*^9, 3.6974694453174667`*^9}, {
   3.6974695029500227`*^9, 3.6974695152781277`*^9}, 3.697469588736002*^9, 
   3.697469620837718*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6974693700935383`*^9, 3.6974694453174667`*^9}, {
   3.6974695029500227`*^9, 3.6974695152781277`*^9}, 3.697469588736002*^9, 
   3.697469620940666*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video Loop", "Title",
 CellChangeTimes->{{3.697470353809037*^9, 3.697470355766893*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoLoop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69747036426371*^9, 3.6974703734509993`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"5\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"60\"\>", ",", "\<\"120\"\>", ",", "\<\"max\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697470374803762*^9, 3.697470422859261*^9, 
  3.697470619698443*^9, 3.697474935052743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";", 
    RowBox[{"goProSetVideoLoop", "[", 
     RowBox[{
      RowBox[{"goProGetPossibleVideoLoop", "[", "]"}], "\[LeftDoubleBracket]",
       "1", "\[RightDoubleBracket]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6974704247687902`*^9, 3.6974704546049557`*^9}, {
  3.6974706141236677`*^9, 3.697470656591551*^9}, {3.697471211395296*^9, 
  3.697471245010453*^9}, {3.697471280249206*^9, 3.697471292438448*^9}, {
  3.6974749559679537`*^9, 3.697474971433509*^9}, {3.6974756935457172`*^9, 
  3.697475701446986*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697470455172998*^9, 3.6974704721441917`*^9}, {
  3.697470621878211*^9, 3.697470657072391*^9}, {3.697471193827248*^9, 
  3.697471245943144*^9}, {3.697471278509449*^9, 3.697471325157961*^9}, {
  3.697474936479786*^9, 3.697474972020163*^9}, {3.697475573246646*^9, 
  3.6974755862387247`*^9}, {3.697475690105216*^9, 3.697475702062602*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Settings report", "Title",
 CellChangeTimes->{{3.697359127936228*^9, 3.697359130179969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6973593140739803`*^9, 3.69735931425281*^9}, 
   3.6973615049154043`*^9, 3.697614418922736*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Photo mode\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639757907*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639838032*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639864401*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639889619*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 5s\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639916353*^9}}],

Cell[BoxData["\<\"Burst Rate: 3/1s\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639942897*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614640017276*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save settings", "Section",
 CellChangeTimes->{{3.697467698980185*^9, 3.697467700964119*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}]], "Input",\

 CellChangeTimes->{{3.697468037042981*^9, 3.697468046003235*^9}, {
  3.697468155493465*^9, 3.697468163830462*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6974681522253933`*^9, 3.697468164265057*^9}, 
   3.697614712951634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", "\"\<pom.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6974677028704653`*^9, 3.697467703690281*^9}, {
  3.6974677362906733`*^9, 3.697467742402629*^9}, {3.697468034918632*^9, 
  3.697468056239099*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6974677124869204`*^9, 3.6974677461212597`*^9}, {
   3.697467860159663*^9, 3.697467867722865*^9}, 3.697467930435005*^9, {
   3.697468057620851*^9, 3.697468078217133*^9}, 3.6974681720240803`*^9, 
   3.697468257860017*^9, {3.697614715454877*^9, 3.6976147707985487`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download files", "Title",
 CellChangeTimes->{{3.697614909562097*^9, 3.697614911890254*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"StringTrim", "[", 
     RowBox[{"StringDrop", "[", 
      RowBox[{"str", ",", "13"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"odstranim", " ", "hlavicku"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", "s", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
    " ", "mohl", " ", "dobre", " ", "cist"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lst", "=", 
    RowBox[{"ReadList", "[", "imp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"it", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"it", "\[LessEqual]", 
    RowBox[{"Length", "[", "lst", "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{"mam", " ", "v", " ", "listu", " ", "nazvy"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pom", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
          "lst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{
              "lst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
              "]"}], ",", "\"\< \>\""}], "]"}], "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"(*", 
     RowBox[{
     "odstranim", " ", "bile", " ", "znaky", " ", "z", " ", "2.", " ", "heho",
       " ", "vyskytu", " ", "\"\< \>\"", " ", 
      RowBox[{"(", 
       RowBox[{"vezmu", " ", "zacatek", " ", "toho", " ", "vyskytu"}], 
       ")"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "pom"}], ",", 
      RowBox[{"path", "<>", "pom"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"it", "++"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "imp", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.689580013004821*^9, 3.6895800960878315`*^9}, {
   3.6895801719544992`*^9, 3.6895802208367743`*^9}, {3.6895802617597275`*^9, 
   3.689580375795598*^9}, {3.6895804644217186`*^9, 3.6895804926191845`*^9}, {
   3.6895805351999836`*^9, 3.6895805637613535`*^9}, {3.6895806212125854`*^9, 
   3.689580648019986*^9}, {3.6895806972023396`*^9, 3.6895807471679473`*^9}, {
   3.6895808010457454`*^9, 3.6895808209858556`*^9}, {3.689581212154587*^9, 
   3.6895812136545825`*^9}, {3.6895813052456093`*^9, 3.689581349602466*^9}, {
   3.689581478084359*^9, 3.689581546167142*^9}, {3.6895815764414167`*^9, 
   3.689581671583809*^9}, 3.6895817073885098`*^9, {3.689581758256917*^9, 
   3.68958187256473*^9}, {3.689581908534979*^9, 3.6895819177712827`*^9}, {
   3.6895819665801044`*^9, 3.6895821041472735`*^9}, {3.6895821425495577`*^9, 
   3.6895821488523183`*^9}, {3.68958222211823*^9, 3.6895825259961257`*^9}, {
   3.689582570838338*^9, 3.6895825982455883`*^9}, {3.697614967981986*^9, 
   3.6976149987094183`*^9}, {3.697616514985742*^9, 3.697616515175865*^9}}],

Cell[CellGroupData[{

Cell["Funkce Download", "Subsubsection",
 CellChangeTimes->{{3.697616519320354*^9, 3.697616521943203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "x", "]"}], ",", 
       RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ProgressIndicator", "[", "\[IndentingNewLine]", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"URLDownload", "[", 
       RowBox[{
        RowBox[{"urlBase", "<>", "k"}], ",", 
        RowBox[{"path", "<>", "k"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6976165277085648`*^9, 3.697616537956153*^9}, {
  3.6976166249018173`*^9, 3.6976166631187468`*^9}, {3.697616755015414*^9, 
  3.6976167586444597`*^9}, {3.6976171822077723`*^9, 3.69761718575725*^9}, {
  3.697617218335531*^9, 3.6976172263251677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", 
     RowBox[{"StringTrim", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{"str", ",", "13"}], "]"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"odstranim", " ", "hlavicku"}], ",", " ", 
    RowBox[{
    "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
     " ", "mohl", " ", "dobre", " ", "cist"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"ReadList", "[", "imp", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"lst", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"it", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString", "[", 
   RowBox[{"lst", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "#", "]"}], "&"}], "/@", 
  "lst"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697615078863326*^9, 3.6976151071092157`*^9}, {
  3.697615201766756*^9, 3.697615214235031*^9}, {3.697615384978532*^9, 
  3.697615389319456*^9}, {3.697616163026911*^9, 3.6976161735270443`*^9}, {
  3.697616411305354*^9, 3.697616456667406*^9}, {3.6976165492137413`*^9, 
  3.697616555901857*^9}, {3.697616692523089*^9, 3.6976167095007763`*^9}, {
  3.697617231667749*^9, 3.697617235968601*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.5`", " ", "M", " ", 
    RowBox[{"GOPR1458", ".", "JPG"}]}], ",", 
   RowBox[{"0.8999999999999999`", " ", "M", " ", 
    RowBox[{"GOPR1459", ".", "JPG"}]}], ",", 
   RowBox[{"587", " ", "K", " ", 
    RowBox[{"GOPR1460", ".", "LRV"}]}], ",", 
   RowBox[{"1.`", " ", "M", " ", 
    RowBox[{"GOPR1460", ".", "MP4"}]}], ",", 
   RowBox[{"2.4`", " ", "K", " ", 
    RowBox[{"GOPR1460", ".", "THM"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.697955342889431*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]]}], "}"}]], "Output",
 CellChangeTimes->{3.697955343756564*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", "=", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"lst", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"d", "=", 
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "l"}], ",", 
      RowBox[{"path", "<>", "l"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.697617372710688*^9, 3.697617407820684*^9}}],

Cell[BoxData["\<\"GOPR1458.JPG\"\>"], "Output",
 CellChangeTimes->{3.697617408402891*^9}],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"/home/cukr/workspace/GoProController/GoProController/download/GOPR1458.\
JPG\""},
   "FileArgument"], "]"}]], "Output",
 CellChangeTimes->{3.6976174117722893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", 
     RowBox[{"StringTrim", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{"str", ",", "13"}], "]"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"odstranim", " ", "hlavicku"}], ",", " ", 
    RowBox[{
    "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
     " ", "mohl", " ", "dobre", " ", "cist"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lst", "=", 
    RowBox[{"ReadList", "[", "imp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"lst", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "list", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"list", ",", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", "lst"}], ",", 
     RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"list", "=", 
  RowBox[{
  "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "Input",\

 CellChangeTimes->{{3.697617816412204*^9, 3.697617975619792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"GOPR1458.JPG\"\>", ",", "\<\"GOPR1459.JPG\"\>", 
    ",", "\<\"GOPR1460.LRV\"\>", ",", "\<\"GOPR1460.MP4\"\>", 
    ",", "\<\"GOPR1460.THM\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.697617888151312*^9, 3.697617977432745*^9}, 
   3.6976189801691217`*^9, 3.6976204046193666`*^9, 3.697621096278702*^9, 
   3.69795536918902*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR1458.JPG\"\>", ",", "\<\"GOPR1459.JPG\"\>", 
   ",", "\<\"GOPR1460.LRV\"\>", ",", "\<\"GOPR1460.MP4\"\>", 
   ",", "\<\"GOPR1460.THM\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.697617888151312*^9, 3.697617977432745*^9}, 
   3.6976189801691217`*^9, 3.6976204046193666`*^9, 3.697621096278702*^9, 
   3.697955369191803*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"progress", "=", " ", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"progFunction", "[", 
   RowBox[{"_", ",", " ", "\"\<progress\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dlnow_", ",", " ", "dltotal_", ",", " ", "_", ",", " ", "_"}], 
     "}"}]}], "]"}], ":=", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{"progress", " ", "=", " ", 
    RowBox[{"dlnow", "/", "dltotal"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downloadFileAsynchronous", "[", "file_String", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"URLSaveAsynchronous", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "file"}], ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\"", "<>",
        "file"}], ",", "progFunction", ",", 
      RowBox[{"\"\<Progress\>\"", "\[Rule]", "True"}]}], "]"}], ";"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downloadAsynchronous", "[", "files_List", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Dynamic", "[", 
     RowBox[{"ProgressIndicator", "[", "progress", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"progress", "=", "0"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"ProgressIndicator", "[", "progress", "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"downloadFileAsynchronous", "[", "#", "]"}], "&"}], "/@", 
     "files"}], ";"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.697618469826847*^9, 3.697618470012429*^9}, {
   3.697618874256036*^9, 3.6976189261723623`*^9}, 3.69761899722955*^9, {
   3.697619293432864*^9, 3.6976192972539253`*^9}, {3.6976193373399553`*^9, 
   3.697619339929977*^9}, {3.6976196391524563`*^9, 3.6976196612501574`*^9}, {
   3.6976196930252934`*^9, 3.697619707349059*^9}, {3.697619739846047*^9, 
   3.697619753828759*^9}, {3.697622513998811*^9, 3.697622601204815*^9}, {
   3.697622945100017*^9, 3.697622947871951*^9}, {3.697623006664158*^9, 
   3.697623016520385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"downloadAsynchronous", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.697621351018344*^9, 3.6976213593730173`*^9}, {
  3.697621389395306*^9, 3.6976213930083237`*^9}, {3.697621533468597*^9, 
  3.697621561453581*^9}, {3.6976216070572968`*^9, 3.697621642726994*^9}, {
  3.697621777856341*^9, 3.6976217835006027`*^9}, {3.69762182046286*^9, 
  3.697621843173169*^9}, {3.6976219880643377`*^9, 3.697622005565456*^9}, {
  3.697622144273675*^9, 3.6976221853456287`*^9}, {3.697622380474576*^9, 
  3.6976224101491327`*^9}, {3.6976224674222717`*^9, 3.6976224860518837`*^9}, {
  3.6976225208410463`*^9, 3.697622525240375*^9}, {3.697622596858107*^9, 
  3.69762259742378*^9}, {3.697622951100071*^9, 3.6976229517801447`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ProgressIndicator[$CellContext`progress], StandardForm],
  ImageSizeCache->{217., {3., 10.}}]], "Print",
 CellChangeTimes->{{3.6976213598625917`*^9, 3.6976214004523087`*^9}, {
   3.6976215441596813`*^9, 3.697621562018483*^9}, {3.6976216177877893`*^9, 
   3.6976216898970823`*^9}, {3.697621795531124*^9, 3.697621852556899*^9}, {
   3.6976219158162746`*^9, 3.6976219327584877`*^9}, 3.69762202693576*^9, 
   3.6976221485452213`*^9, 3.697622185867968*^9, {3.697622392508161*^9, 
   3.69762241089602*^9}, 3.697622477094968*^9, {3.697622580478759*^9, 
   3.697622605047454*^9}, 3.697622952289036*^9, 3.6976230216148777`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synchronous", "Subsubsection",
 CellChangeTimes->{{3.6976229597314568`*^9, 3.697622961504677*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"downloadSynchronous", "[", "files_List", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "#"}], ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\"", "<>",
        "#"}]}], "]"}], "&"}], "/@", "files"}]}]], "Input",
 CellChangeTimes->{{3.6976229653908978`*^9, 3.6976229869709682`*^9}, {
  3.6976230303983088`*^9, 3.697623120050366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"downloadSynchronous", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.697623061135906*^9, 3.697623066707377*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.697623071345845*^9, 3.69762309257238*^9}, 
   3.6976231857149477`*^9, 3.697955396285831*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options[]", "Section",
 CellChangeTimes->{{3.69788569561119*^9, 3.697885701288989*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"goProSetPhotoRes", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697885722742153*^9, 3.69788574447011*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.697885745206327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "f", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697885886626219*^9, 3.697885901121087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6978859017303257`*^9, 3.6991680822174797`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"OptionValue", "[", "a", "]"}], ",", 
    RowBox[{"OptionValue", "[", "b", "]"}], ",", 
    RowBox[{"OptionValue", "[", "c", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697885913509769*^9, 3.697885917069759*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697885926177229*^9, 3.697885931140686*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Input",
 CellChangeTimes->{{3.6979544159698877`*^9, 3.69795441597536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Options", "[", "setRes", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"res", "->", "\"\<12W\>\""}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setRes", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"OptionValue", "[", "res", "]"}]}]}], "Input",
 CellChangeTimes->{{3.697886070908401*^9, 3.697886070928966*^9}, {
  3.697886109861753*^9, 3.6978862803057623`*^9}, {3.697886311694378*^9, 
  3.6978863177901373`*^9}, {3.697886420770733*^9, 3.697886428868058*^9}, {
  3.697886587758205*^9, 3.697886588582749*^9}, {3.6978867604237833`*^9, 
  3.69788677952631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"res", "\[Rule]", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697886188506*^9, 3.697886318502578*^9, {3.69788641581968*^9, 
   3.697886430226973*^9}, {3.6978867631440973`*^9, 3.697886779990518*^9}, 
   3.6991680903128967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setRes", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"setRes", "[", "\"\<2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"setRes", "[", 
  RowBox[{"res", "->", "\"\<3\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6978863261656313`*^9, 3.697886327992311*^9}, {
  3.697886818532737*^9, 3.697886832303996*^9}}],

Cell[BoxData["\<\"12W\"\>"], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.6991680917533484`*^9}],

Cell[BoxData[
 RowBox[{"setRes", "[", "\<\"2\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.699168091756619*^9}],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.699168091758668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setRes", "[", 
  RowBox[{"res", "->", "\"\<1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.69788634573029*^9, 3.697886350647217*^9}, {
  3.6978865812111197`*^9, 3.697886582366343*^9}}],

Cell[BoxData["\<\"1\"\>"], "Output",
 CellChangeTimes->{{3.697886348264846*^9, 3.6978863511066113`*^9}, 
   3.69788643713246*^9, 3.6978865834605837`*^9, 3.699168093725239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Mus\[IAcute]m tedy po pou\[ZHacek]it\[IAcute] Options[] \
pou\[ZHacek]\[IAcute]vat p\[RHacek]i vol\[AAcute]n\[IAcute] funkce \
p\[RHacek]episovac\[IAcute] pravidla ? pokud ano, hodila by se pot\[EAcute] \
funkce jako prost\[RHacek]edn\[IAcute]k, kde pouze z parametru ud\[EHacek]l\
\[AAcute]m p\[RHacek]episovac\[IAcute] pravidlo\
\>", "Subsubsection",
 CellChangeTimes->{{3.697886794804193*^9, 3.6978868169062243`*^9}, {
  3.6978868539853477`*^9, 3.697886882703723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "setGoPro", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
     RowBox[{"photoResolution", "\[Rule]", "\"\<12W\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setGoPro", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"OptionValue", "[", 
   RowBox[{"{", 
    RowBox[{
    "videoResolution", ",", "fps", ",", "fov", ",", "photoResolution"}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6991681933110943`*^9, 3.6991682125028677`*^9}, {
  3.699168251856655*^9, 3.699168310222288*^9}, {3.699168356180513*^9, 
  3.699168376540915*^9}, {3.6991696102447157`*^9, 3.699169643015291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setGoPro", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991683172509527`*^9, 3.6991683295573483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1080p\"\>", ",", "\<\"30\"\>", ",", "\<\"wide\"\>", 
   ",", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991683259405537`*^9, 3.699168330093893*^9}, 
   3.6991683809651403`*^9, 3.6991696460895023`*^9, 3.6991734697437153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setGoPro", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"videoResolution", "\[Rule]", "\"\<720p\>\""}], ",", 
    RowBox[{"fov", "\[Rule]", "\"\<medium\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.699168383697752*^9, 3.6991684001870813`*^9}, {
  3.699168462267645*^9, 3.699168470736784*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"720p\"\>", ",", "\<\"30\"\>", ",", "\<\"medium\"\>", 
   ",", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991683942696247`*^9, 3.69916840059866*^9}, 
   3.699168471145378*^9, 3.699173470836327*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "setVideo", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], ",", 
     RowBox[{"fov", "->", "\"\<wide\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setVideo", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProSetVideoRes", "[", 
     RowBox[{
      RowBox[{"OptionValue", "[", 
       RowBox[{"{", "videoResolution", "}"}], "]"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"goProGetPossibleFPS", "[", 
         RowBox[{"OptionValue", "[", "videoResolution", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"goProSetFPS", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"\"\<The FPS value (\>\"", " ", "<>", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "<>", 
         "\"\<) is not possible for this video resolution (\>\"", "  ", "<>", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"{", "videoResolution", "}"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<>", 
         "\"\<), FPS was set to the highest value possible (\>\"", "<>", 
         RowBox[{
          RowBox[{"goProGetPossibleFPS", "[", 
           RowBox[{"OptionValue", "[", "videoResolution", "]"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", "<>", 
         "\"\<). If you wish to see which FPS can be used for certain video \
resolution call goProGetPossibleFPS[ \\\"\>\"", "<>", 
         RowBox[{"OptionValue", "[", "videoResolution", "]"}], "<>", " ", 
         "\"\<\\\" ]\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MessageDialog", "[", "s", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetFOV", "[", 
     RowBox[{
      RowBox[{"OptionValue", "[", 
       RowBox[{"{", "fov", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQLalzUm92/2vHVRKTTUB0XeJLVxCdt3i5O4g2NvXz
AdEnlP75g+hvmz9dAtF3Huy6CaK1npvcA9GzhJTvg+iGC1nfQXQyz7pfIDqG
9RvDHCB9umkrB4j+EpQkAKJvrP8tBKL5zr5QAdFXF8uogug3ono6IFrVJ0gX
RDMdMTcH0RLKHNYg2k11bTSIbr4XXgCiz+03KQXRE4SmzAfRdU9/rgbRs8Rc
14HoZz85d4NoO85FF0H0utNZN0C0yvtFt0D0P7OKdyBabKPQH7C5SwKY5wJp
kbMb2EE0y4PX0iBaLc9dDkRXMCgrg+gnYutNQPTdu9vcQfSfHoEgEL1m979Q
EN0kHxkG5rvZ14HojjMHwTQAJdvF8w==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setVideo", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fov", "->", "\"\<medium\>\""}], ",", 
    RowBox[{"videoResolution", "\[Rule]", "\"\<WVGA\>\""}], ",", 
    RowBox[{"fps", "->", "\"\<240\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.69916992656848*^9, 3.6991699558738823`*^9}, {
  3.699171030519643*^9, 3.699171047818219*^9}, {3.699171420112438*^9, 
  3.6991714205628023`*^9}, {3.699173015795197*^9, 3.699173033924542*^9}, {
  3.69917381138995*^9, 3.699173837999132*^9}, {3.6991740807356567`*^9, 
  3.69917408269906*^9}, {3.6991743668222237`*^9, 3.69917437762288*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6991699492183237`*^9, 3.6991699571472197`*^9}, {
   3.699171025305373*^9, 3.699171068189456*^9}, 3.699171288241534*^9, 
   3.6991713571326303`*^9, {3.699171392193779*^9, 3.699171421141376*^9}, {
   3.699171466188788*^9, 3.699171483377433*^9}, 3.699171633847855*^9, 
   3.6991716848397408`*^9, {3.699171776997312*^9, 3.699171804622912*^9}, 
   3.699172303228204*^9, {3.699172360957036*^9, 3.699172408693687*^9}, {
   3.69917245910376*^9, 3.699172515819439*^9}, {3.6991725942994547`*^9, 
   3.699172607494535*^9}, 3.6991727284480963`*^9, {3.699173007746808*^9, 
   3.6991730346055803`*^9}, 3.6991733476193457`*^9, {3.6991733866489553`*^9, 
   3.699173441516417*^9}, 3.6991734743284597`*^9, 3.69917362203692*^9, {
   3.699173707660924*^9, 3.699173740947475*^9}, {3.6991738016910133`*^9, 
   3.699173839051668*^9}, 3.69917403740361*^9, {3.69917406961798*^9, 
   3.699174083204892*^9}, {3.699174367655861*^9, 3.699174392002604*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{3.6991702996636257`*^9}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699170305948897*^9, {3.699170565410605*^9, 3.6991705836428423`*^9}, 
   3.699170658864332*^9, 3.699170739136298*^9, 3.699170943188731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoRes", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699169964683823*^9, 3.69916997929976*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"WVGA\"\>", ",", "\<\"720p\"\>", ",", "\<\"960p\"\>", 
   ",", "\<\"1080p\"\>", ",", "\<\"1440p\"\>", ",", "\<\"2.7K\"\>", 
   ",", "\<\"4K\"\>", ",", "\<\"2.7K-17:9\"\>", ",", "\<\"4K-17:9\"\>", 
   ",", "\<\"1080p-SV\"\>", ",", "\<\"720p-SV\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699170311618853*^9, 3.699170567194045*^9, 
  3.699170741017356*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p-SV\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699170199848762*^9, 3.699170199972224*^9}, {
  3.6991703148758383`*^9, 3.699170352249866*^9}, {3.699170483122623*^9, 
  3.699170525633819*^9}, {3.699170589916439*^9, 3.6991706042507057`*^9}, {
  3.6991706958688393`*^9, 3.699170696589375*^9}, {3.6991707820925293`*^9, 
  3.699170906434462*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"100\"\>", ",", "\<\"60\"\>", ",", "\<\"48\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699170345030863*^9, 3.699170352603821*^9}, {
   3.69917048453664*^9, 3.699170526142064*^9}, {3.6991705689823027`*^9, 
   3.699170605210731*^9}, {3.6991706576026278`*^9, 3.699170660306026*^9}, 
   3.699170697105137*^9, 3.699170742894909*^9, {3.6991707855151367`*^9, 
   3.699170906880525*^9}, 3.6991709452519007`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["pokus z GoProController", "Section",
 CellChangeTimes->{{3.699185046180561*^9, 3.699185052434074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.699186594819323*^9, 3.6991865951421013`*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.6991850563689404`*^9, 3.699185104694501*^9, {3.699186531234977*^9, 
   3.699186533269154*^9}, 3.699186586764834*^9, {3.6991866991854153`*^9, 
   3.6991867193675117`*^9}, 3.6991867851312227`*^9, 3.699186876086485*^9, 
   3.699186908139645*^9, 3.6991871037139177`*^9, {3.6991871403365507`*^9, 
   3.6991871503111343`*^9}, 3.699187445390829*^9, 3.699187765269422*^9, {
   3.6991878019771347`*^9, 3.6991878184102097`*^9}, 3.6991886683766212`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideo", "[", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"videoResolution", "\[Rule]", "\"\<1440p\>\""}], ",", 
    RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6991850585206614`*^9, 3.6991851456159477`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699185093903906*^9, 3.6991851460438633`*^9}, {
   3.6991867658495197`*^9, 3.699186786891767*^9}, 3.699187107951548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "goproSet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], ",", 
     RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
     RowBox[{"photoResolution", "\[Rule]", "\"\<12W\>\""}], ",", 
     RowBox[{"loopVideo", "\[Rule]", "\"\<off\>\""}], ",", 
     RowBox[{"burstRate", "\[Rule]", "\"\<30/1\>\""}], ",", 
     RowBox[{"timeLapse", "\[Rule]", "\"\<1\>\""}]}], "}"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goproSet", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"goProSetVideo", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"OptionValue", "[", "videoResolution", "]"}], ",", 
        RowBox[{"OptionValue", "[", "fps", "]"}], ",", 
        RowBox[{"OptionValue", "[", "fov", "]"}]}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetPhotoRes", "[", 
     RowBox[{"OptionValue", "[", "photoResolution", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetVideoLoop", "[", 
     RowBox[{"OptionValue", "[", "loopVideo", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetBurstRate", "[", 
     RowBox[{"OptionValue", "[", "burstRate", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetTimeLapse", "[", 
     RowBox[{"OptionValue", "[", "timeLapse", "]"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.6991865727184772`*^9, 3.699186580465139*^9}, {
  3.699186970110909*^9, 3.699186972786297*^9}, {3.69918718857895*^9, 
  3.6991871914234047`*^9}, {3.699187233241514*^9, 3.699187242185821*^9}, {
  3.699187298486126*^9, 3.699187377539822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"videoResolution", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"fps", "\[Rule]", "\<\"30\"\>"}], ",", 
   RowBox[{"fov", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"photoResolution", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"loopVideo", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"burstRate", "\[Rule]", "\<\"30/1\"\>"}], ",", 
   RowBox[{"timeLapse", "\[Rule]", "\<\"1\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.699187192286847*^9, {3.699187235761916*^9, 3.699187243048287*^9}, {
   3.699187311583599*^9, 3.699187379989695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fps", "\[Rule]", "\"\<48\>\""}], ",", 
    RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
    RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
    RowBox[{"photoResolution", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "\[LeftDoubleBracket]", 
      "3", "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"burstRate", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleBurstRate", "[", "]"}], "\[LeftDoubleBracket]",
       "2", "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"timeLapse", "\[Rule]", "\"\<10\>\""}], ",", 
    RowBox[{"continuousShot", "\[Rule]", "\"\<10\>\""}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699186791618528*^9, 3.699186840667336*^9}, {
   3.699186914638599*^9, 3.699186914917369*^9}, {3.6991869907297573`*^9, 
   3.699187016509549*^9}, {3.699187194319923*^9, 3.69918725321068*^9}, 
   3.6991873464807053`*^9, {3.699187386265781*^9, 3.699187402972789*^9}, {
   3.699187453191566*^9, 3.6991875101407833`*^9}, {3.699187549844254*^9, 
   3.699187647987999*^9}, {3.699187825977099*^9, 3.6991878532767763`*^9}, {
   3.6991878998073807`*^9, 3.699187909844018*^9}, {3.6991886632979918`*^9, 
   3.699188690251481*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699187244801814*^9, 3.699187253902667*^9}, {
   3.699187319378549*^9, 3.699187403841708*^9}, 3.699187448168429*^9, 
   3.699187567996204*^9, {3.699187607967922*^9, 3.699187648629871*^9}, 
   3.699187728270767*^9, 3.699187767211203*^9, {3.699187803785076*^9, 
   3.6991878546249332`*^9}, 3.699187910826499*^9, {3.699188671461973*^9, 
   3.699188692284368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossibleTimeLapse", "[", "]"}], "\[LeftDoubleBracket]", 
  "1", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.699186917507917*^9, 3.699186919309251*^9}, {
  3.699186982148656*^9, 3.6991869831132402`*^9}}],

Cell[BoxData["\<\"0.5\"\>"], "Output",
 CellChangeTimes->{3.6991868490021133`*^9, 3.699186919695945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFOV", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991877138043213`*^9, 3.699187719254065*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"wide\"\>", "}"}]], "Output",
 CellChangeTimes->{3.6991877196985207`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuous Shot", "Section",
 CellChangeTimes->{{3.6991884306321917`*^9, 3.6991884335470657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.699189970514003*^9, 3.699189972741919*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699188435210247*^9, {3.699189971004136*^9, 3.699189973268093*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleContinuousShot", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991884378481617`*^9, 3.6991884443449783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"3\"\>", ",", "\<\"5\"\>", 
   ",", "\<\"10\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699188445095799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetContinuousShot", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleContinuousShot", "[", "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69918845190932*^9, 3.69918847776427*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6991884636387157`*^9, 3.6991884789033737`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetContinuousShot", "[", "\"\<10\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699188487983705*^9, 3.69918850127575*^9}, {
  3.6991902777207003`*^9, 3.699190284017782*^9}, {3.699190470898263*^9, 
  3.699190475308957*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699190475967224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699189968882291*^9, 3.6991899959543257`*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699190055387722*^9, {3.699190098370315*^9, 3.6991901235987577`*^9}, 
   3.6991901801852417`*^9, 3.699190215631446*^9, {3.699190275565763*^9, 
   3.699190286295226*^9}, {3.69919045908768*^9, 3.699190477047826*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477063225*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477106947*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477135271*^9}}],

Cell[BoxData["\<\"FPS: 48\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477163927*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 10s\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.6991904771913843`*^9}}],

Cell[BoxData["\<\"Burst Rate: 10/1s\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477220634*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477250622*^9}}],

Cell[BoxData["\<\"Continuous Shot: 10\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477279551*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6991904128560658`*^9, 3.699190440049466*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699190441182372*^9, 3.699190478785379*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Photo in Video ( PN )", "Section",
 CellChangeTimes->{{3.699344927058742*^9, 3.699344932639488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.69934495439948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossiblePhotoInVideo", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6993449576950274`*^9, 3.6993449855891113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"5\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"30\"\>", ",", "\<\"60\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.69934498648743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetPhotoInVideo", "[", 
  RowBox[{
   RowBox[{"goProGetPossiblePhotoInVideo", "[", "]"}], "\[LeftDoubleBracket]",
    "2", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69934499673533*^9, 3.699345041039637*^9}, {
  3.699345115057406*^9, 3.699345150955565*^9}, {3.699345504873361*^9, 
  3.6993455072103662`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6993450210587063`*^9, 3.6993450424884663`*^9}, {
   3.6993451120921392`*^9, 3.699345151657333*^9}, 3.699345220806085*^9, 
   3.6993455079666243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoLoop", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleVideoLoop", "[", "]"}], "\[LeftDoubleBracket]", 
   "2", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.699345164182592*^9, 3.699345204285198*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699345204911995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699345489902584*^9, 3.699345539415716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6993454920044394`*^9, 3.699345498661031*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600631907*^9}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.6993456006995287`*^9}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600726637*^9}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600760426*^9}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600798613*^9}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.69934560084529*^9}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.6993456008476353`*^9}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600849906*^9}],

Cell[BoxData["\<\"Photo in Video interval : 5\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600884288*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{"photoInVideo", "\[Rule]", "\"\<60\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699345515012656*^9, 3.699345553516135*^9}, {
  3.6993456027107964`*^9, 3.6993456179032593`*^9}, {3.699345662910997*^9, 
  3.6993456795647182`*^9}, {3.6993457574637413`*^9, 3.699345771372744*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 4}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699345521380761*^9, {3.699345567088011*^9, 3.699345610916478*^9}, {
   3.699345648592684*^9, 3.699345664696589*^9}, {3.699345754765263*^9, 
   3.699345772285345*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772343464*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457723771677`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724043837`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724262857`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772451968*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724716988`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772490439*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772509304*^9}}],

Cell[BoxData["\<\"Photo in Video interval : 60\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772528079*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volume", "Section",
 CellChangeTimes->{{3.6993462313942833`*^9, 3.699346232552553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699346246322196*^9, {3.6993463634730473`*^9, 3.699346378300701*^9}, {
   3.699346588763337*^9, 3.699346604944418*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"photoInVideo", "\[Rule]", "\"\<60\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6993462332121067`*^9, 3.699346264961692*^9}, {
  3.699346386142973*^9, 3.699346387030278*^9}, {3.6993464220667963`*^9, 
  3.699346422371827*^9}, {3.699346490295388*^9, 3.699346491550596*^9}, {
  3.6993465278226013`*^9, 3.699346546992317*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699346242900935*^9, 3.699346270356085*^9}, 
   3.699346335736671*^9, {3.6993463734930487`*^9, 3.6993463799601593`*^9}, 
   3.699346421305209*^9, {3.6993464889896393`*^9, 3.699346549986102*^9}, {
   3.6993465854629393`*^9, 3.6993466073745832`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607413958*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.6993466074462137`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607498402*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607523715*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607550845*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607574535*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607614716*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607645445*^9}}],

Cell[BoxData["\<\"Photo in Video interval : 60\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607671245*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607694112*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699346242900935*^9, 3.699346270356085*^9}, 
   3.699346335736671*^9, {3.6993463734930487`*^9, 3.6993463799601593`*^9}, 
   3.699346421305209*^9, {3.6993464889896393`*^9, 3.699346549986102*^9}, {
   3.6993465854629393`*^9, 3.699346607998822*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Protune", "Section",
 CellChangeTimes->{{3.699349211746551*^9, 3.699349212457912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699349217629298*^9, 3.6993493468389797`*^9, 
  3.69934945600074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"protune", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"photoInVideo", "\[Rule]", "\"\<off\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6993492262742643`*^9, 3.699349268717458*^9}, {
  3.6993493768246613`*^9, 3.6993493770119247`*^9}, {3.699349461495742*^9, 
  3.6993494627592363`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFVF1IVEEYvXdXs9zN30RBLNN60MIwDCmtHoIMySKLElJiWzR9EM3Eh9QH
lcCHwHyIHiMpiP3RlC0xSddtNf92E9TQ0jTTsvxfldW17TQz967sbhtduHNn
znfufDPnmzlpiuLc7HxFcZ5SEZlSpCjMzVPeiTxbUEQgKc9xXBh9IznaB+mK
TRiGBrpJQPj4sI8vWvrqUW2oQGbrNSTo4iHXyCHT+rI+xWiMcAQ6580+UpjM
BpTrSyib2wlOxRGM/kkxyhB4nJdIp0lO6BIZUSbSU5rPMFxgMLrUiR5cH8SI
ux2zq2V4Z25lDIlAlzgtxjG7v0inYxJlDN6Z7oWqjjJCkiNhchpbgBTkIWnW
l28jSivHEVMdOlfnYbEO4/XIRURoiH7qv/FaQ5ljIVwoy0WXTUXgVDwC9c8w
89uO5cX7yOvJRCZ5M97GIry9DtN2CwbGCpAz1ITvpN/3PgohHnDTwCHo+3WO
9YtZqgyldI/Cqw7EyeE2zNmX0D2ajn10rSpfxH0cx4bNgAuNPDhtLO5ZrLAs
ZOPcJ0/4dTw0VmxnYUXA1ZZLTEkJa2kpfLC3swa9Niu+zeQjrt4fSTM/YbOq
kFhPVxKBm4ursFpqoJz1hFeg9E2Wa5KDjdFiuWgbyISTtRTCaNvA1EQq0mYX
sOU0kZJNVIucOU94Ja68incSix4LoRxUlF2IGe7C55XnSG4gY81+5C+tkaKX
I318AptElPNMlBhUMVFuIXXME56Fww1BbiXxVnuLWSQIMTbhh30RxtEcZJgf
YWhrE18nTyGi7TGm7MvoHbmBy+an+PJrFeaBA9jjEY9GqDbALQu9kduF14Qh
7YMOg9YVrG9OoGeyCEkviI5qPxw1PUHX2jxWrINoJgc1nB1gzzi5Jv8ofDBt
eShaM13j4vFzxB8Yq13j7f065gpBQpxIw9N7y7te2ZL2AsdeuACBWaovZiTe
1Qucds35iafl9Mtk98vtbB3UKlysgxwCh9NI/m9Mx3XH3I1phzgQLY8RfUQ6
LX5lx11n23P3VmVr1l/eSoRlvxG9RG/l+D8Ynl2M\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699349238755086*^9, 3.699349271563321*^9}, {
  3.699349344443302*^9, 3.699349377659905*^9}, {3.6993494580114202`*^9, 
  3.69934946624116*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466291394*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494663423767`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494663444233`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466393236*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466455741*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466458399*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466460704*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466502625*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466504224*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494665375013`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494665390177`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699349238755086*^9, 3.699349271563321*^9}, {
  3.699349344443302*^9, 3.699349377659905*^9}, {3.6993494580114202`*^9, 
  3.699349466791799*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetProtuneOff", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699349423029768*^9, 3.699349429446686*^9}, {
  3.699349472627623*^9, 3.699349473648736*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699349429960299*^9, 3.699349474249837*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474277195*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474324122*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474355804*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474371656*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474391749*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474410591*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744326477`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744520817`*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474472117*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744916277`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474509872*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WhiteBalance (only if protune is on)", "Section",
 CellChangeTimes->{{3.699350175663041*^9, 3.699350182844026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.6993501970812407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetWhiteBalance", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleWhiteBalance", "[", "]"}], "\[LeftDoubleBracket]",
    "2", "\[RightDoubleBracket]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<wb\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"whiteBalance", "\[Rule]", "\"\<CAMRAW\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699350200001835*^9, 3.699350259772942*^9}, {
  3.699350297072147*^9, 3.699350377942184*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.699350438382064*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.6993504384093733`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.69935043900385*^9}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439077815*^9}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504391119137`*^9}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504391376343`*^9}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439157797*^9}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439177906*^9}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439198604*^9}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439263014*^9}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504392646227`*^9}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439265914*^9}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504392813883`*^9}],

Cell[BoxData["\<\"White Balance : CAMRAW\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439304984*^9}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.699350439596395*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ColorProfile (only if protune is on)", "Section",
 CellChangeTimes->{{3.6995169248710203`*^9, 3.6995169283323812`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699517033768771*^9, 3.699517175979909*^9, 
  3.699517211939665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleColorProfile", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<co\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"colorProfile", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleColorProfile", "[", "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699517037715707*^9, 3.699517065207621*^9}, {
  3.699517111724737*^9, 3.6995171494678717`*^9}, {3.699517193302883*^9, 
  3.699517193610155*^9}, {3.699517229708706*^9, 3.6995172558254137`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GoPro\"\>", ",", "\<\"Flat\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172572378693`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172572397957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257712701*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257765313*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172577950497`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.69951725782366*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172578482027`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257872324*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257899091*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257929523*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257957306*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257985018*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257986947*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517258013191*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172580410967`*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517258069168*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172584279346`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISO (only if protune is on)", "Section",
 CellChangeTimes->{{3.699517800826851*^9, 3.699517804819338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleISO", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<ga\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699517817967478*^9, 3.69951789590238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"6400\"\>", ",", "\<\"1600\"\>", ",", "\<\"400\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.6995178967670927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.699517896769423*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897674025*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897739365*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.69951789777794*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.6995178977996492`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897823287*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.6995178978487473`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897868498*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897888084*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897908723*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897932127*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897933215*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897952737*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897975059*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897995253*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517898014963*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.699517898347657*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sharpness (Only if protune mode is on)", "Section",
 CellChangeTimes->{{3.699518380283152*^9, 3.699518386654086*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleSharpness", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<sp\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"sharpness", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleSharpness", "[", "]"}], "\[LeftDoubleBracket]",
       "1", "\[RightDoubleBracket]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6995183940016336`*^9, 3.699518400116064*^9}, {
  3.699518431781321*^9, 3.699518452614653*^9}, {3.6995185380528183`*^9, 
  3.699518547929109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"high\"\>", ",", "\<\"medium\"\>", ",", "\<\"low\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.699518555279722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.6995185552820597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556151787*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556213073*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185562408857`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556269418*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185562932863`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185563176107`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556346994*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556367632*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855639048*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855641241*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556413558*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855643557*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556457931*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855648099*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556506028*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185565287857`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.699518556887321*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exposure compensation (only if protune is on)", "Section",
 CellChangeTimes->{{3.699519673224903*^9, 3.699519681782826*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleExposure", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"exposure", "\[Rule]", "\"\<0\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.699519688479948*^9, 3.699519705488521*^9}, {
  3.699519912868785*^9, 3.699519947375533*^9}, {3.699520034774268*^9, 
  3.6995201592208347`*^9}, {3.69952020327215*^9, 3.6995202044709463`*^9}, {
  3.699520300746511*^9, 3.6995203155329638`*^9}, {3.6995203659993563`*^9, 
  3.6995204487955914`*^9}, {3.6995205233724747`*^9, 3.6995205917182302`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0\"\>", ",", "\<\"-2.0\"\>", ",", "\<\"-1.5\"\>", 
   ",", "\<\"-1.0\"\>", ",", "\<\"-0.5\"\>", ",", "\<\"+0.5\"\>", 
   ",", "\<\"+1.0\"\>", ",", "\<\"+1.5\"\>", ",", "\<\"+2.0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699520080409873*^9, 3.699520160750444*^9}, {
  3.699520205776079*^9, 3.699520228904605*^9}, {3.699520290275915*^9, 
  3.699520316014216*^9}, {3.699520368498736*^9, 3.699520478664948*^9}, {
  3.699520530805067*^9, 3.6995205923602552`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593467145*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205935401583`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593569132*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593594652*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593622403*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593649057*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205936712523`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593697557*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937211514`*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593743576*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593745063*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937736197`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937945004`*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593832899*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205938934526`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593922247*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593945548*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699520080409873*^9, 3.699520160750444*^9}, {
  3.699520205776079*^9, 3.699520228904605*^9}, {3.699520290275915*^9, 
  3.699520316014216*^9}, {3.699520368498736*^9, 3.699520478664948*^9}, {
  3.699520530805067*^9, 3.699520594433867*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Low Light (only for 60+ fps)", "Section",
 CellChangeTimes->{{3.6995213264492283`*^9, 3.6995213334776793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleLowLight", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"fps", "\[Rule]", "\"\<60\>\""}], ",", 
    RowBox[{"protune", "\[Rule]", "\"\<off\>\""}], ",", 
    RowBox[{"lowLight", "\[Rule]", "\"\<off\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699521340330063*^9, 3.699521343645278*^9}, {
  3.69952149712707*^9, 3.699521533553103*^9}, {3.699521618504146*^9, 
  3.6995216371193047`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.69952151200786*^9, 3.699521539149371*^9}, 
   3.699521587407507*^9, {3.6995216191925907`*^9, 3.6995216377254457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521639913291*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521639984317*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216400208282`*^9}}],

Cell[BoxData["\<\"FPS: 60\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640051984*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640083291*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640114458*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216401162233`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640147266*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640178763*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640210122*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640241354*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640243144*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640244832*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640276476*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640309935*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216403513603`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640382711*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216404143476`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.69952151200786*^9, 3.699521539149371*^9}, 
   3.699521587407507*^9, {3.6995216191925907`*^9, 3.699521640977798*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetLowLightOn", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.69952155235753*^9, 3.69952155650805*^9}, {
  3.699521597204009*^9, 3.6995216099983177`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699521557782969*^9, {3.699521591691165*^9, 3.699521610397429*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610431027*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216104887247`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610514917*^9}}],

Cell[BoxData["\<\"FPS: 60\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610535355*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.69952161056033*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610581348*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216106027*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610624258*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610646789*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610689*^9}}],

Cell[BoxData["\<\"Low Light : on\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610710102*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610711359*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610750904*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610775014*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610801717*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216108244467`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.69952161084648*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610876481*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Led setting", "Section",
 CellChangeTimes->{{3.699524101448728*^9, 3.699524109006528*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.699524119447174*^9, 3.699524123269168*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleLed", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"led", "\[Rule]", 
   RowBox[{
    RowBox[{"goProGetPossibleLed", "[", "]"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699524138042865*^9, 3.699524200375643*^9}, {
  3.6995243095833693`*^9, 3.699524398549811*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"2\"\>", ",", "\<\"4\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524399235004*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524400332327*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400370614*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400421818*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.69952440044858*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244004689703`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400489649*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400510363*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400530032*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244005495768`*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400569656*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400590135*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400613676*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400633772*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400635448*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400666286*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400695928*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400717029*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244007372723`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400780274*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400803975*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524401208995*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SpotMeter", "Section",
 CellChangeTimes->{{3.699524786531625*^9, 3.6995247881956863`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleSpotMeter", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"spotMeter", "\[Rule]", "\"\<off\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699524833350152*^9, 3.699524898388955*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524899055345*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524901252729*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901305729*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901345014*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901371019*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249013975163`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014248457`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014477863`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014693003`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901490912*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901513949*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901535533*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249015575113`*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901578905*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249016007023`*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249016026297`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901623848*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901647381*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901677099*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249017018414`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901724205*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901746821*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524905267201*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AutoPowerOff", "Section",
 CellChangeTimes->{{3.699525448190524*^9, 3.6995254521665583`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"autoPowerOff", "\[Rule]", 
   RowBox[{
    RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}], 
    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6995254626855087`*^9, 3.699525481072968*^9}, {
  3.699525553367457*^9, 3.699525578060307*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"60\"\>", ",", "\<\"120\"\>", 
   ",", "\<\"300\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.6995255789991207`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.699525580668067*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525580695282*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525580732993*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581022769*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.69952558104506*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581064913*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.69952558108486*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581105748*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581126493*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581146834*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581166573*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581186411*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581450753*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255814713163`*^9}}],

Cell[BoxData["\<\"Auto power off : 60\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581491634*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581493128*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255815160723`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581536209*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581668357*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255816993723`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581726205*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255817509604`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.699525583208611*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locate", "Section",
 CellChangeTimes->{{3.69952566891082*^9, 3.699525672659054*^9}, {
  3.69952587941296*^9, 3.699525880682334*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProLocate", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699525892255011*^9, 3.699525894620865*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995259004370537`*^9, 3.6995259122322483`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProLocateStop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699525896755212*^9, 3.699525899271166*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699525906947976*^9, 3.699525919567357*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video Mode", "Section",
 CellChangeTimes->{{3.699526285979*^9, 3.699526289054864*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699526310214404*^9, 3.699526333328328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NTSC\"\>", ",", "\<\"PAL\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.699526317033915*^9, 3.699526333813703*^9}, 
   3.699526387768828*^9, 3.699526948394416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699526514895501*^9, 3.699526518176239*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699526518749206*^9, 3.6995269509572287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoMode", "->", "\"\<NTSC\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699526390671732*^9, 3.6995263992413683`*^9}, {
  3.6995264297315083`*^9, 3.6995264302636547`*^9}, {3.699526528137321*^9, 
  3.699526529936432*^9}, {3.6995269549843388`*^9, 3.69952704475775*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995264035928717`*^9, 3.699526457893244*^9}, {
  3.69952648979996*^9, 3.6995265220775423`*^9}, {3.699526952685831*^9, 
  3.699526956974957*^9}, {3.699526988817062*^9, 3.699527047642124*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69952701407006*^9, 3.699527030692075*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047828307*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047869578*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047898283*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047945712*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270479681387`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.69952704798906*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048009227*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048031825*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048052545*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048073998*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048094757*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048116939*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270481433897`*^9}}],

Cell[BoxData["\<\"Auto power off : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048163789*^9}}],

Cell[BoxData["\<\"Video Mode : ntsc\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048184429*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048185975*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048310514*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048336135*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270483568077`*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048379787*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048401499*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048422468*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["set TIME", "Section",
 CellChangeTimes->{{3.699789615553743*^9, 3.699789621751474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"goProUrl", "=", "\"\<http://10.5.5.9/\>\""}], ";"}], "\n", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Funkce", " ", "pro", " ", "slozeni", " ", "url", " ", "pro", " ", 
     "ovladani", " ", "kamery"}], ",", 
    RowBox[{"unit", " ", 
     RowBox[{"(", 
      RowBox[{"bacpac", "||", "camera"}], ")"}]}], ",", 
    RowBox[{"command", " ", 
     RowBox[{"(", "prikat", ")"}]}], ",", 
    RowBox[{"parram", " ", 
     RowBox[{"(", 
      RowBox[{"parametr", " ", "prikazu"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProPassword", "=", "\"\<12345678\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"unit_String", ",", "command_String", ",", "parram_String"}], 
    "]"}], ":=", 
   RowBox[{
   "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
    "\"\<?t=\>\"", "<>", "goProPassword", "<>", "\"\<&p=%\>\"", "<>", 
    "parram"}]}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "spusteni", " ", "prikazu", " ", "exec", " ", "pomoci", " ", "HTTPRequest",
     " ", "a", " ", "URLRead"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"execute", "[", "exec_String", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"request", "=", 
     RowBox[{"HTTPRequest", "[", "exec", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"URLRead", "[", "request", "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.699789783670024*^9, 3.699789794971622*^9}, 
   3.699789828002248*^9, {3.6997928662755823`*^9, 3.699792876815466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<tm\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6997898414010153`*^9, 3.699789863384021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "3", ",", "29", ",", "17", ",", "45", ",", "36"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699789866177536*^9, {3.699791132671795*^9, 3.699791171690527*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"toHex", "[", "\"\<160511164749\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.699789666468536*^9, 3.6997896751076603`*^9}, {
   3.699790009617301*^9, 3.6997900835106287`*^9}, {3.699790114502701*^9, 
   3.699790122393278*^9}, {3.6997901896368647`*^9, 3.69979026181185*^9}, {
   3.699790320478408*^9, 3.699790355613967*^9}, {3.699790415551519*^9, 
   3.699790415754284*^9}, {3.699790472660969*^9, 3.6997905199315042`*^9}, {
   3.699790573592767*^9, 3.699790614096055*^9}, {3.699790675409359*^9, 
   3.6997907138870983`*^9}, {3.699790854527*^9, 3.6997908672702227`*^9}, {
   3.699790902716908*^9, 3.6997910287725554`*^9}, {3.699791109348186*^9, 
   3.6997911126362877`*^9}, {3.699791618152742*^9, 3.699791653090082*^9}, {
   3.69979170620551*^9, 3.699791708621833*^9}, {3.699791776624072*^9, 
   3.699791828954612*^9}, {3.6997923259232893`*^9, 3.699792437032673*^9}, {
   3.699792895291692*^9, 3.699792905522759*^9}, {3.699793009761939*^9, 
   3.6997930122863398`*^9}, 3.699795381806476*^9}],

Cell[BoxData["\<\"10%05%0b%10%2f%31\"\>"], "Output",
 CellChangeTimes->{
  3.699791708987896*^9, {3.699791803538788*^9, 3.6997918246106653`*^9}, {
   3.6997924138172903`*^9, 3.699792437838681*^9}, 3.69979290684503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"execute", "[", 
  RowBox[{"goProMakeCommand", "[", 
   RowBox[{"\"\<camera\>\"", ",", "\"\<TM\>\"", ",", 
    RowBox[{"toHex", "[", "\"\<170328185400\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699792808032131*^9, 3.699792834322542*^9}, {
   3.699794016669457*^9, 3.69979403685295*^9}, {3.69979407752079*^9, 
   3.699794092827507*^9}, 3.6997942248135853`*^9, {3.699795197764646*^9, 
   3.699795221134842*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "7"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699792837623328*^9, 3.699792847318615*^9}, 
   3.6997928812056293`*^9, 3.6997929117292223`*^9, 3.699794037620941*^9, {
   3.699794093540182*^9, 3.699794101336912*^9}, 3.699794193298046*^9, 
   3.699794225399226*^9, {3.6997951942273417`*^9, 3.699795221608115*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.699794366344791*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "16", ",", "5", ",", "11", ",", "16", ",", "50", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.69979291430558*^9, {3.699794060516569*^9, 3.69979410529524*^9}, 
   3.699794241759344*^9, {3.699794362441916*^9, 3.6997943636351137`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NumberQ", "[", 
    RowBox[{"ToExpression", "[", "\"\<12\>\"", "]"}], "]"}], "||", 
   "False"}]}]], "Input",
 CellChangeTimes->{{3.69979310185215*^9, 3.6997931358146267`*^9}, {
  3.699793167786428*^9, 3.699793181386285*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.699793107913518*^9, 3.699793131291828*^9}, {
  3.69979317098543*^9, 3.699793181848514*^9}}]
}, Open  ]],

Cell[BoxData["List"], "Input",
 CellChangeTimes->{{3.6997933747811737`*^9, 3.699793376667584*^9}}],

Cell[CellGroupData[{

Cell["testovani", "Subsection",
 CellChangeTimes->{{3.6997936057625628`*^9, 3.699793609241968*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetTime", "[", "\"\<170329185700\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<tm\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetTime", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6997945939858437`*^9, 3.699794594197647*^9}, {
  3.699795084646975*^9, 3.699795122230022*^9}, {3.699795411069982*^9, 
  3.699795431480775*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "7"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.699795431984022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "3", ",", "29", ",", "18", ",", "57", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.699795432054008*^9}}],

Cell[BoxData["\<\"2017-3-29 18:57:0\"\>"], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.6997954320565557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6997950548467703`*^9, 3.6997950612741623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Time of camera: 2017-3-29 18:57:1\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954332614107`*^9}}],

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433289074*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433353445*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433394205*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.69979543342925*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954334669437`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433469627*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.69979543350744*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433547805*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433550783*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954335917883`*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433634248*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433636704*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433679933*^9}}],

Cell[BoxData["\<\"Auto power off : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433683049*^9}}],

Cell[BoxData["\<\"Video Mode : ntsc\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337277*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337306757`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337336683`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433777515*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433781548*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954338256702`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954338686943`*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433870603*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera models", "Section",
 CellChangeTimes->{{3.699808135891738*^9, 3.6998081394018593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.699809499343492*^9, 3.699809521365219*^9}, {
  3.699887702260591*^9, 3.699887711927844*^9}}],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699808146397258*^9, 3.699808156529563*^9}, {
  3.699808700960235*^9, 3.699808701321145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetModel", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998111021358423`*^9, 3.6998111044527683`*^9}}],

Cell[BoxData["\<\"HERO3+Black\"\>"], "Output",
 CellChangeTimes->{{3.6998111049383163`*^9, 3.699811135706604*^9}, 
   3.699811307137339*^9, 3.6998115668064613`*^9, 3.699811625353513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProPhotoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998113083112917`*^9, 3.6998113113594713`*^9}, {
  3.699811635793186*^9, 3.6998116382276707`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699811319171228*^9, 3.6998115682865477`*^9, 
  3.699811638947267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699811571233445*^9, 3.699811575193572*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699811575760817*^9, {3.699811631114285*^9, 3.699811645209293*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<trol\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699811649103902*^9, 3.699811656748659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998116601003017`*^9, 3.699811663562777*^9}}],

Cell[BoxData["\<\"Package.m Trol\"\>"], "Output",
 CellChangeTimes->{3.6998116640984917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{"\"\<a\>\"", ",", "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699886753946534*^9, 3.6998867778975058`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6998867786690063`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera Setting", "Section",
 CellChangeTimes->{{3.699887725520308*^9, 3.6998877285153723`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6998906938039417`*^9, 3.699890701121414*^9}, {
  3.69989307199651*^9, 3.699893090346715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699893944178952*^9, 3.6998939547460318`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"120\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699893955046617*^9, 3.6998940058805*^9, 
  3.699894075766137*^9, 3.699894137698369*^9, 3.699894269085413*^9, 
  3.699894440531294*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"fps", "\[Rule]", "\"\<60\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6998935861094847`*^9, 3.699893624955895*^9}, {
  3.69989370492913*^9, 3.699893711273871*^9}, {3.699893916055994*^9, 
  3.699893928365795*^9}, {3.699893961432919*^9, 3.699893962545414*^9}, {
  3.699894144506607*^9, 3.69989416161355*^9}, {3.699894563796588*^9, 
  3.699894581046294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoMode", "[", "\"\<NTSC\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699895372263206*^9, 3.699895404925634*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFVF1IVEEYvXdXs9zN30RBLNN60MIwDCmtHoIMySKLElJiWzR9EM3Eh9QH
lcCHwHyIHiMpiP3RlC0xSddtNf92E9TQ0jTTsvxfldW17TQz967sbhtduHNn
znfufDPnmzlpiuLc7HxFcZ5SEZlSpCjMzVPeiTxbUEQgKc9xXBh9IznaB+mK
TRiGBrpJQPj4sI8vWvrqUW2oQGbrNSTo4iHXyCHT+rI+xWiMcAQ6580+UpjM
BpTrSyib2wlOxRGM/kkxyhB4nJdIp0lO6BIZUSbSU5rPMFxgMLrUiR5cH8SI
ux2zq2V4Z25lDIlAlzgtxjG7v0inYxJlDN6Z7oWqjjJCkiNhchpbgBTkIWnW
l28jSivHEVMdOlfnYbEO4/XIRURoiH7qv/FaQ5ljIVwoy0WXTUXgVDwC9c8w
89uO5cX7yOvJRCZ5M97GIry9DtN2CwbGCpAz1ITvpN/3PgohHnDTwCHo+3WO
9YtZqgyldI/Cqw7EyeE2zNmX0D2ajn10rSpfxH0cx4bNgAuNPDhtLO5ZrLAs
ZOPcJ0/4dTw0VmxnYUXA1ZZLTEkJa2kpfLC3swa9Niu+zeQjrt4fSTM/YbOq
kFhPVxKBm4ursFpqoJz1hFeg9E2Wa5KDjdFiuWgbyISTtRTCaNvA1EQq0mYX
sOU0kZJNVIucOU94Ja68incSix4LoRxUlF2IGe7C55XnSG4gY81+5C+tkaKX
I318AptElPNMlBhUMVFuIXXME56Fww1BbiXxVnuLWSQIMTbhh30RxtEcZJgf
YWhrE18nTyGi7TGm7MvoHbmBy+an+PJrFeaBA9jjEY9GqDbALQu9kduF14Qh
7YMOg9YVrG9OoGeyCEkviI5qPxw1PUHX2jxWrINoJgc1nB1gzzi5Jv8ofDBt
eShaM13j4vFzxB8Yq13j7f065gpBQpxIw9N7y7te2ZL2AsdeuACBWaovZiTe
1Qucds35iafl9Mtk98vtbB3UKlysgxwCh9NI/m9Mx3XH3I1phzgQLY8RfUQ6
LX5lx11n23P3VmVr1l/eSoRlvxG9RG/l+D8Ynl2M\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699895380204845*^9, 3.699895406474205*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699894211032744*^9, 3.699894221567127*^9}, {
  3.6998945485354013`*^9, 3.6998945624116993`*^9}}],

Cell[BoxData["goProSetVideoMode"], "Input",
 CellChangeTimes->{{3.6998949021797123`*^9, 3.699894907387094*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699894167489386*^9, 3.6998941687430964`*^9}}],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699894170159687*^9, 3.69989417164027*^9}, {
  3.699895278337727*^9, 3.6998952949450274`*^9}, {3.699895345659672*^9, 
  3.699895351671404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVolume", "[", "\"\<70\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6998953195298557`*^9, 3.699895326040388*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6998953272768793`*^9, 3.699895363569295*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<30\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699894028755055*^9, 3.699894033863537*^9}, {
  3.6998940855633173`*^9, 3.6998940890607862`*^9}, {3.699894187585019*^9, 
  3.699894193379386*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 4}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699894035267136*^9, 3.69989405354007*^9}, {
  3.699894089712721*^9, 3.699894091801381*^9}, {3.699894193937621*^9, 
  3.699894202224024*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699893968722939*^9, 3.6998939693449497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699893900197876*^9, 3.699893938704487*^9}}],

Cell[BoxData["\<\"SET FPS\"\>"], "Print",
 CellChangeTimes->{{3.699893902011519*^9, 3.699893939803008*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699893442078274*^9, 3.6998934471851797`*^9}, {
  3.699893495369256*^9, 3.69989349776917*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NTSC\"\>", ",", "\<\"PAL\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699893498156619*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"fov", "->", "\"\<medium\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.69988787390313*^9, 3.699887912778419*^9}, 
   3.699887956727477*^9, 3.6998881192777853`*^9, {3.699891218926284*^9, 
   3.699891231288555*^9}, {3.699891495552387*^9, 3.6998917023480253`*^9}, {
   3.699892360499572*^9, 3.6998924859019327`*^9}, {3.699892582843521*^9, 
   3.699892596330669*^9}, {3.6998929709243402`*^9, 3.699892975455976*^9}, {
   3.699893018409686*^9, 3.699893045153337*^9}, {3.699893430057328*^9, 
   3.699893454936108*^9}}],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoMode", "\[Rule]", "\"\<PAL\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699893464102614*^9, 3.699893500598839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["pokusy", "Section",
 CellChangeTimes->{{3.701698570292899*^9, 3.701698577414014*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.701698698706923*^9, 3.701698704539002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.701698717289761*^9, 3.7016987272659903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetFPS", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleFPS", "[", "\"\<WVGA\>\"", "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.701698731146408*^9, 3.7016987582336082`*^9}, {
  3.70169879625215*^9, 3.701698866110104*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"120\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.701698761193748*^9, 3.701698866396761*^9}}],

Cell[BoxData["\<\"http://10.5.5.9/camera/FS?t=12345678&p=%0a\"\>"], "Output",
 CellChangeTimes->{{3.701698761193748*^9, 3.701698866400415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleISO", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7016989655448503`*^9, 3.701698970572242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"6400\"\>", ",", "\<\"1600\"\>", ",", "\<\"400\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.701698970968095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7016989370172787`*^9, 3.7016989385028477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 CellChangeTimes->{3.701698939335479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
   RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701698874854164*^9, 3.7016989086415367`*^9}, {
  3.7016990336796227`*^9, 3.701699068567112*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7016990744523287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetSettingReportAssociation", "[", "]"}], 
  "\[LeftDoubleBracket]", "\"\<videoResolution\>\"", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7016991426191072`*^9, 3.701699195272398*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.701699153449006*^9, 3.701699197269114*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["pom", "Section",
 CellChangeTimes->{{3.7018762694024057`*^9, 3.7018762697879887`*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.701876276266089*^9, 3.7018762765791197`*^9}}],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleCamera", "[", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.701876284245829*^9, 3.701876294093378*^9}, {
  3.701876347902883*^9, 3.701876354896285*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70187630952178*^9, 3.701876345411199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Hero3+\"\>", ",", "\<\"Hero4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.701876342954424*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["goProGet", "Section",
 CellChangeTimes->{{3.702059971826385*^9, 3.702059974297751*^9}, {
  3.70209479692094*^9, 3.7020947975818033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.702059976454977*^9, 3.702059999075589*^9}, {
  3.702060458207762*^9, 3.702060458430916*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.702060459180571*^9, 3.702060510327668*^9, 
  3.70206129305624*^9, 3.7020613567771606`*^9, 3.7020614861682053`*^9, 
  3.702094816683693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "autoPowerOff", "]"}]], "Input",
 CellChangeTimes->{{3.702094923614884*^9, 3.702094935359112*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.702094950837089*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7020949541933193`*^9, 3.702094962579423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<videoResolution\>\"", ",", "\"\<fov\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702060018414548*^9, 3.702060048145303*^9}, {
   3.702061319133294*^9, 3.702061319462006*^9}, {3.702061491475326*^9, 
   3.7020614966188393`*^9}, 3.702094805547279*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7020600430694637`*^9, 3.7020600725379343`*^9}, 
   3.7020601760107927`*^9, 3.702060389113744*^9, 3.7020605449323187`*^9, {
   3.702061299045198*^9, 3.702061320602157*^9}, 3.70206135923488*^9, {
   3.702061488137608*^9, 3.70206149806861*^9}, 3.702094821170229*^9, 
   3.702094976181589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "\"\<fv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702060083758106*^9, 3.702060095108818*^9}, 
   3.702061501951542*^9, 3.7020948078449497`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGet","missing","\"This parameter is not usable, try another.\"",2,29,
   21,31792143324265201741,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70206150259564*^9, 3.702094977918153*^9}],

Cell[BoxData[
 RowBox[{"{", "Null", "}"}]], "Output",
 CellChangeTimes->{
  3.702060096197094*^9, {3.7020613376183043`*^9, 3.702061365821397*^9}, {
   3.70206150065245*^9, 3.702061502598249*^9}, 3.702094977944379*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702060178138558*^9, 3.7020601805867653`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 CellChangeTimes->{3.7020601809713573`*^9, 3.702060466114064*^9, 
  3.702061505436892*^9, 3.702094930425701*^9, 3.702094980468583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{
   "vdf", ",", "fov", ",", "fps", ",", "protune", ",", "whiteBalance"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.702060181899984*^9, 3.702060199558304*^9}, 
   3.7020604101588373`*^9, {3.7020605170997953`*^9, 3.702060522027772*^9}, {
   3.702060555174459*^9, 3.702060588043425*^9}, {3.702060636048518*^9, 
   3.702060722909382*^9}, {3.70206151336724*^9, 3.702061513687711*^9}, 
   3.702094811652647*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGet","missing","\"This parameter is not usable, try another.\"",2,31,
   22,31792143324265201741,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702061514373704*^9, 3.7020949816364603`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"60\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"whiteBalance\"\>", "\[Rule]", "\<\"auto\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702060189693364*^9, 3.702060200167533*^9}, {
   3.702060411654419*^9, 3.7020604310071163`*^9}, 3.702060467764143*^9, {
   3.7020605143382177`*^9, 3.702060523619138*^9}, {3.702060558801354*^9, 
   3.702060589600277*^9}, {3.702060644391006*^9, 3.7020607263964653`*^9}, {
   3.702061509869369*^9, 3.7020615163187943`*^9}, 3.702094984229638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "\"\<fov\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7020605329373083`*^9, 3.702060537688991*^9}, 
   3.702094813959503*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.702060538649474*^9, 3.70206154575801*^9, 
  3.702094993544448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "videoResolution", "]"}]], "Input",
 CellChangeTimes->{{3.7020959809106627`*^9, 3.702095986995368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702095989723988*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702060423018444*^9, 3.702060423519368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["goProTextMode", "Section",
 CellChangeTimes->{{3.7020944448390217`*^9, 3.7020944555267763`*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7020944588399353`*^9, 3.7020944916367693`*^9}}],

Cell[BoxData[
 RowBox[{"goProTextModeOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702094496258169*^9, 3.702094505542471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<60\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7020945075999403`*^9, 3.7020945152547817`*^9}}],

Cell[BoxData["\<\"http://10.5.5.9/camera/FS?t=12345678&p=%07\"\>"], "Output",
 CellChangeTimes->{3.7020945158900747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProReport", "[", "fps", "]"}]], "Input",
 CellChangeTimes->{{3.702094575841316*^9, 3.7020946010440407`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7020946048356953`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download", "Section",
 CellChangeTimes->{{3.702187672955202*^9, 3.70218767423207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7021876767164297`*^9, 3.702187684141111*^9}, {
  3.7021878769242983`*^9, 3.702187877494061*^9}, {3.702188276503941*^9, 
  3.702188281475829*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.7021882867795553`*^9, {3.702188626805009*^9, 3.702188650196639*^9}, 
   3.7021892912310667`*^9, 3.702189854866212*^9, 3.7021900700359697`*^9, 
   3.702190312381152*^9, 3.702190822090846*^9, 3.702199948604931*^9, 
   3.702200072665518*^9, 3.702200122736767*^9, 3.7022003136173153`*^9, 
   3.7022003679382677`*^9, 3.7022004370574007`*^9, {3.702200475184328*^9, 
   3.702200501928433*^9}, 3.7022005942597847`*^9, {3.702202769182472*^9, 
   3.702202793478116*^9}, 3.702203078537695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702188298167759*^9, 3.7021883341943483`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.702188304957356*^9, 3.7021883346164427`*^9}, 
   3.7021884649972486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702187710133909*^9, 3.702187719484558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5060.MP4\"\>", ",", "\<\"GOPR5061.JPG\"\>", 
   ",", "\<\"G0015063.JPG\"\>", ",", "\<\"G0015064.JPG\"\>", 
   ",", "\<\"G0025065.JPG\"\>", ",", "\<\"G0025066.JPG\"\>", 
   ",", "\<\"G0025067.JPG\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70218850186938*^9, 3.70218862999811*^9, 3.702189293747661*^9, 
   3.7021898582712383`*^9, {3.702199961989887*^9, 3.702199981758234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadAllFiles", "[", "\"\</tmp/GOPRO/\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.702189365014895*^9, 3.70218937287922*^9}, {
  3.7022000031308393`*^9, 3.702200004248624*^9}, {3.702200317866868*^9, 
  3.7022003207379313`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5060.MP4\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5061.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015063.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015064.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025065.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025066.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025067.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702199999934997*^9, 3.7022000327101192`*^9, 
  3.7022003442865973`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702189864268277*^9, 3.702189866823455*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{
   RowBox[{"goProGetFileList", "[", "]"}], ",", "\"\</tmp/GOPRO/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702190073669634*^9, 3.702190086042831*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5060.MP4\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5061.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015063.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015064.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025065.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025066.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025067.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702190125266316*^9, 3.702190358589007*^9, 
  3.7021907755533743`*^9, 3.702190864092383*^9, 3.702200038419331*^9, 
  3.7022000772038393`*^9, 3.702200186258896*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70220019938548*^9, 3.7022002017523193`*^9}, {
  3.702200281485881*^9, 3.702200283382032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<GOPR5060.MP4\>\"", ",", "\"\<GOPR5061.JPG\>\"", ",", 
     "\"\<G0015063.JPG\>\"", ",", "\"\<G0015064.JPG\>\"", ",", 
     "\"\<gopros.mp4\>\""}], "}"}], ",", "\"\</tmp/GOPRO/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702200330358409*^9, 3.702200337900517*^9}, {
  3.702200694784429*^9, 3.70220072951799*^9}}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,9,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202823170742*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,10,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.7022028262733097`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,11,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202830734164*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"goProGetFileList\\\", \
\\\"::\\\", \\\"directory\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,36,12,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.7022028308441343`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","file",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"gopros.mp4\\\\\\\"\\\"}]\\) - No such file \
on GoPro camera.\"",2,36,13,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202835155752*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702200772629519*^9, 3.702202835158691*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{"\"\<G0015064.JPG\>\"", ",", "\"\</temp/trol/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702202341489952*^9, 3.702202375088318*^9}, {
  3.70220254094137*^9, 3.7022025471351643`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/temp/trol/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,37,14,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70220255347642*^9, 3.702202627120212*^9, 
  3.7022027365184593`*^9, 3.7022027758813066`*^9, 3.702202839620199*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirectoryQ", "[", "\"\</temp/trol/\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702202403868656*^9, 3.702202416081484*^9}, {
  3.702202564434177*^9, 3.702202569504736*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.702202570321042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileURL", "[", 
  RowBox[{
   RowBox[{"goProGetFileList", "[", "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702202673855762*^9, 3.702202673873869*^9}, {
  3.702203082395385*^9, 3.70220309370891*^9}}],

Cell[BoxData["\<\"http://10.5.5.9:8080/DCIM/100GOPRO/GOPR5060.MP4\"\>"], \
"Output",
 CellChangeTimes->{3.702203148605707*^9}]
}, Open  ]],

Cell[BoxData["goProMak"], "Input",
 CellChangeTimes->{{3.7022064219094553`*^9, 3.702206423123088*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Delete", "Section",
 CellChangeTimes->{{3.702206677186049*^9, 3.702206678494544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.702206680236188*^9, 3.702206757138516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7022066808849373`*^9, 3.702206683999621*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.702206721294002*^9, 3.7022067585851107`*^9}, 
   3.702207214678975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProDeleteLastFile", "[", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.702206686555756*^9, 3.702206720917457*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7022067349272213`*^9, 3.702206777082325*^9, 
  3.702214467057084*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteFile", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702213371697379*^9, 3.702213373971002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{
  "HTTPRequest", "[", "\"\<http://10.5.5.9:8080/gp/gpMediaList\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702214448036602*^9, 3.702214493963449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"513164155069043360\"\>"}], ",", 
   RowBox[{"\<\"media\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"d\"\>", "\[Rule]", "\<\"100GOPRO\"\>"}], ",", 
       RowBox[{"\<\"fs\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"131218969\"\>"}], ",", 
            RowBox[{"\<\"ls\"\>", "\[Rule]", "\<\"-1\"\>"}], ",", 
            RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"GOPR5069.MP4\"\>"}], ",", 
            RowBox[{"\<\"mod\"\>", "\[Rule]", "\<\"1493232060\"\>"}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"2961266\"\>"}], ",", 
            RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"GOPR5070.JPG\"\>"}], ",", 
            RowBox[{"\<\"mod\"\>", "\[Rule]", "\<\"1493232140\"\>"}]}], 
           "}"}]}], "}"}]}]}], "}"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7022144707479553`*^9, 3.7022144952454443`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1598, 847},
WindowMargins->{{Automatic, -1599}, {1, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 466, 7, 32, "Input"],
Cell[1049, 31, 76, 1, 32, "Output"]
}, Open  ]],
Cell[1140, 35, 170, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[1335, 41, 175, 3, 32, "Input"],
Cell[1513, 46, 255, 6, 23, "Message"],
Cell[1771, 54, 76, 1, 32, "Output"]
}, Open  ]],
Cell[1862, 58, 283, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[2170, 67, 151, 2, 35, "Subsubsection"],
Cell[2324, 71, 414, 7, 33, "Text"],
Cell[2741, 80, 343, 7, 57, "Input"],
Cell[3087, 89, 1710, 44, 147, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4834, 138, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[4978, 143, 257, 5, 32, "Input"],
Cell[5238, 150, 208, 5, 34, "Output"]
}, Open  ]],
Cell[5461, 158, 381, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[5867, 170, 407, 8, 56, "Input"],
Cell[6277, 180, 14036, 338, 61, "Output"]
}, Open  ]],
Cell[20328, 521, 300, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[20653, 531, 244, 5, 34, "Input"],
Cell[20900, 538, 11929, 293, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32866, 836, 633, 12, 78, "Input"],
Cell[33502, 850, 6259, 169, 63, "Output"],
Cell[39764, 1021, 151, 2, 32, "Output"],
Cell[39918, 1025, 149, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40104, 1032, 301, 5, 34, "Input"],
Cell[40408, 1039, 236, 5, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40693, 1050, 89, 1, 93, "Title"],
Cell[40785, 1053, 324, 5, 32, "Input"],
Cell[41112, 1060, 167, 2, 32, "Input"],
Cell[41282, 1064, 173, 3, 32, "Input"],
Cell[41458, 1069, 144, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[41627, 1075, 168, 3, 32, "Input"],
Cell[41798, 1080, 211, 3, 32, "Output"]
}, Open  ]],
Cell[42024, 1086, 106, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[42155, 1091, 155, 3, 32, "Input"],
Cell[42313, 1096, 13888, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56238, 1438, 120, 1, 35, "Subsubsection"],
Cell[56361, 1441, 170, 4, 34, "Input"],
Cell[56534, 1447, 169, 4, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56740, 1456, 114, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[56879, 1461, 261, 5, 56, "Input"],
Cell[57143, 1468, 13839, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71019, 1809, 260, 5, 56, "Input"],
Cell[71282, 1816, 13811, 335, 61, "Output"]
}, Open  ]],
Cell[85108, 2154, 264, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[85397, 2163, 151, 3, 32, "Input"],
Cell[85551, 2168, 13814, 335, 61, "Output"]
}, Open  ]],
Cell[99380, 2506, 106, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[99511, 2511, 152, 3, 32, "Input"],
Cell[99666, 2516, 15037, 357, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114752, 2879, 122, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[114899, 2884, 154, 3, 32, "Input"],
Cell[115056, 2889, 14940, 355, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130033, 3249, 410, 7, 57, "Input"],
Cell[130446, 3258, 162, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130645, 3267, 364, 7, 57, "Input"],
Cell[131012, 3276, 137, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131186, 3284, 359, 7, 57, "Input"],
Cell[131548, 3293, 189, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131774, 3303, 365, 7, 57, "Input"],
Cell[132142, 3312, 139, 3, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132330, 3321, 116, 1, 65, "Section"],
Cell[132449, 3324, 192, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[132666, 3331, 199, 3, 32, "Input"],
Cell[132868, 3336, 13885, 336, 61, "Output"]
}, Open  ]],
Cell[146768, 3675, 196, 4, 34, "Input"],
Cell[146967, 3681, 202, 4, 34, "Input"],
Cell[147172, 3687, 257, 5, 34, "Input"],
Cell[147432, 3694, 258, 5, 34, "Input"],
Cell[147693, 3701, 223, 4, 34, "Input"],
Cell[147919, 3707, 125, 3, 34, "Input"],
Cell[148047, 3712, 127, 3, 34, "Input"],
Cell[148177, 3717, 126, 3, 34, "Input"],
Cell[148306, 3722, 124, 3, 34, "Input"],
Cell[148433, 3727, 126, 3, 34, "Input"],
Cell[148562, 3732, 127, 3, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148726, 3740, 90, 1, 65, "Section"],
Cell[148819, 3743, 349, 6, 33, "Text"],
Cell[149171, 3751, 1138, 42, 825, "Text"],
Cell[150312, 3795, 710, 17, 34, "Input"],
Cell[151025, 3814, 154, 3, 34, "Input"],
Cell[151182, 3819, 1050, 25, 263, "Input"],
Cell[152235, 3846, 1977, 44, 308, "Input"],
Cell[CellGroupData[{
Cell[154237, 3894, 634, 15, 34, "Input"],
Cell[154874, 3911, 248, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155159, 3919, 176, 3, 34, "Input"],
Cell[155338, 3924, 137, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155512, 3932, 124, 2, 32, "Input"],
Cell[155639, 3936, 274, 6, 34, "Output"]
}, Open  ]],
Cell[155928, 3945, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[156074, 3951, 211, 3, 32, "Input"],
Cell[156288, 3956, 199, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156524, 3965, 292, 6, 32, "Input"],
Cell[156819, 3973, 13814, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170670, 4313, 163, 3, 32, "Input"],
Cell[170836, 4318, 13815, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184688, 4658, 100, 1, 44, "Subsection"],
Cell[184791, 4661, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[184937, 4667, 165, 3, 32, "Input"],
Cell[185105, 4672, 13813, 335, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198967, 5013, 101, 1, 44, "Subsection"],
Cell[199071, 5016, 471, 11, 124, "Input"],
Cell[199545, 5029, 1747, 38, 308, "Input"],
Cell[201295, 5069, 662, 17, 34, "Input"],
Cell[CellGroupData[{
Cell[201982, 5090, 128, 2, 32, "Input"],
Cell[202113, 5094, 191, 4, 34, "Output"]
}, Open  ]],
Cell[202319, 5101, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[202465, 5107, 163, 3, 32, "Input"],
Cell[202631, 5112, 165, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202833, 5121, 219, 3, 32, "Input"],
Cell[203055, 5126, 13864, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216956, 5467, 108, 1, 35, "Subsubsection"],
Cell[217067, 5470, 269, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[217361, 5478, 357, 7, 32, "Input"],
Cell[217721, 5487, 13875, 336, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231645, 5829, 93, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[231763, 5834, 311, 5, 56, "Input"],
Cell[232077, 5841, 115, 3, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232277, 5853, 99, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[232401, 5858, 134, 1, 65, "Section"],
Cell[232538, 5861, 294, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[232857, 5870, 222, 5, 32, "Input"],
Cell[233082, 5877, 948, 29, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234067, 5911, 400, 7, 32, "Input"],
Cell[234470, 5920, 13924, 337, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248443, 6263, 143, 2, 65, "Section"],
Cell[248589, 6267, 244, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[248858, 6275, 199, 3, 32, "Input"],
Cell[249060, 6280, 13934, 337, 61, "Output"]
}, Open  ]],
Cell[263009, 6620, 196, 4, 34, "Input"],
Cell[263208, 6626, 202, 4, 34, "Input"],
Cell[263413, 6632, 257, 5, 34, "Input"],
Cell[263673, 6639, 258, 5, 34, "Input"],
Cell[263934, 6646, 223, 4, 34, "Input"],
Cell[264160, 6652, 125, 3, 34, "Input"],
Cell[264288, 6657, 127, 3, 34, "Input"],
Cell[264418, 6662, 126, 3, 34, "Input"],
Cell[264547, 6667, 124, 3, 34, "Input"],
Cell[264674, 6672, 126, 3, 34, "Input"],
Cell[264803, 6677, 127, 3, 34, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264979, 6686, 102, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[265106, 6691, 185, 2, 65, "Section"],
Cell[265294, 6695, 294, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[265613, 6704, 273, 6, 32, "Input"],
Cell[265889, 6712, 782, 23, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266708, 6740, 497, 9, 32, "Input"],
Cell[267208, 6751, 14014, 338, 61, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281283, 7096, 93, 1, 93, "Title"],
Cell[281379, 7099, 243, 4, 56, "Input"],
Cell[CellGroupData[{
Cell[281647, 7107, 141, 2, 32, "Input"],
Cell[281791, 7111, 249, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282077, 7121, 437, 8, 55, "Input"],
Cell[282517, 7131, 13919, 337, 61, "Output"],
Cell[296439, 7470, 13919, 337, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310407, 7813, 93, 1, 93, "Title"],
Cell[310503, 7816, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[310705, 7823, 140, 2, 32, "Input"],
Cell[310848, 7827, 287, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311172, 7838, 730, 15, 78, "Input"],
Cell[311905, 7855, 14105, 339, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[326059, 8200, 98, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[326182, 8205, 367, 7, 78, "Input"],
Cell[CellGroupData[{
Cell[326574, 8216, 877, 12, 24, "Print"],
Cell[327454, 8230, 895, 12, 24, "Print"],
Cell[328352, 8244, 888, 12, 24, "Print"],
Cell[329243, 8258, 874, 12, 24, "Print"],
Cell[330120, 8272, 889, 12, 24, "Print"],
Cell[331012, 8286, 883, 12, 24, "Print"],
Cell[331898, 8300, 882, 12, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[332829, 8318, 98, 1, 65, "Section"],
Cell[332930, 8321, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[333132, 8328, 220, 5, 32, "Input"],
Cell[333355, 8335, 191, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333583, 8343, 324, 7, 32, "Input"],
Cell[333910, 8352, 387, 5, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334358, 8364, 97, 1, 93, "Title"],
Cell[334458, 8367, 4460, 111, 375, "Input"],
Cell[CellGroupData[{
Cell[338943, 8482, 106, 1, 35, "Subsubsection"],
Cell[339052, 8485, 906, 21, 123, "Input"],
Cell[CellGroupData[{
Cell[339983, 8510, 2394, 67, 238, "Input"],
Cell[342380, 8579, 513, 13, 34, "Output"],
Cell[342896, 8594, 945, 23, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343878, 8622, 590, 16, 79, "Input"],
Cell[344471, 8640, 89, 1, 32, "Output"],
Cell[344563, 8643, 222, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344822, 8654, 2317, 71, 240, "Input"],
Cell[347142, 8727, 397, 8, 34, "Output"],
Cell[347542, 8737, 372, 7, 34, "Output"]
}, Open  ]],
Cell[347929, 8747, 2045, 47, 149, "Input"],
Cell[CellGroupData[{
Cell[349999, 8798, 738, 10, 32, "Input"],
Cell[350740, 8810, 656, 10, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351445, 8826, 104, 1, 35, "Subsubsection"],
Cell[351552, 8829, 480, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[352057, 8845, 141, 2, 32, "Input"],
Cell[352201, 8849, 150, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352400, 8857, 93, 1, 65, "Section"],
Cell[352496, 8860, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[352698, 8867, 163, 3, 32, "Input"],
Cell[352864, 8872, 87, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352988, 8879, 299, 8, 34, "Input"],
Cell[353290, 8889, 241, 6, 34, "Output"]
}, Open  ]],
Cell[353546, 8898, 363, 9, 34, "Input"],
Cell[353912, 8909, 115, 2, 32, "Input"],
Cell[354030, 8913, 149, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[354204, 8920, 624, 13, 55, "Input"],
Cell[354831, 8935, 280, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355148, 8946, 335, 6, 77, "Input"],
Cell[355486, 8954, 204, 3, 32, "Output"],
Cell[355693, 8959, 232, 4, 32, "Output"],
Cell[355928, 8965, 200, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356165, 8973, 209, 4, 32, "Input"],
Cell[356377, 8979, 175, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356589, 8986, 481, 8, 60, "Subsubsection"],
Cell[357073, 8996, 873, 21, 57, "Input"],
Cell[CellGroupData[{
Cell[357971, 9021, 126, 2, 32, "Input"],
Cell[358100, 9025, 283, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358420, 9035, 327, 7, 34, "Input"],
Cell[358750, 9044, 255, 5, 34, "Output"]
}, Open  ]],
Cell[359020, 9052, 3293, 74, 305, "Input"],
Cell[CellGroupData[{
Cell[362338, 9130, 611, 11, 34, "Input"],
Cell[362952, 9143, 14697, 347, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377686, 9495, 203, 3, 55, "Input"],
Cell[377892, 9500, 206, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378135, 9508, 137, 2, 32, "Input"],
Cell[378275, 9512, 400, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378712, 9524, 402, 6, 32, "Input"],
Cell[379117, 9532, 453, 8, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379631, 9547, 108, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[379764, 9552, 227, 3, 55, "Input"],
Cell[379994, 9557, 510, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380541, 9569, 287, 6, 34, "Input"],
Cell[380831, 9577, 13889, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394757, 9918, 1845, 42, 192, "Input"],
Cell[396605, 9962, 601, 12, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397243, 9979, 1285, 25, 57, "Input"],
Cell[398531, 10006, 14136, 340, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412704, 10351, 260, 5, 32, "Input"],
Cell[412967, 10358, 104, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413108, 10364, 135, 2, 32, "Input"],
Cell[413246, 10368, 105, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413400, 10376, 104, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[413529, 10381, 225, 3, 55, "Input"],
Cell[413757, 10386, 134, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413928, 10393, 148, 2, 32, "Input"],
Cell[414079, 10397, 172, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414288, 10406, 263, 5, 32, "Input"],
Cell[414554, 10413, 13817, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428408, 10753, 249, 4, 32, "Input"],
Cell[428660, 10759, 13796, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442493, 11099, 297, 4, 77, "Input"],
Cell[442793, 11105, 281, 4, 32, "Output"],
Cell[CellGroupData[{
Cell[443099, 11113, 258, 3, 24, "Print"],
Cell[443360, 11118, 276, 3, 24, "Print"],
Cell[443639, 11123, 269, 3, 24, "Print"],
Cell[443911, 11128, 255, 3, 24, "Print"],
Cell[444169, 11133, 273, 3, 24, "Print"],
Cell[444445, 11138, 265, 3, 24, "Print"],
Cell[444713, 11143, 263, 3, 24, "Print"],
Cell[444979, 11148, 267, 3, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445295, 11157, 219, 5, 32, "Input"],
Cell[445517, 11164, 163, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445729, 11172, 106, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[445860, 11177, 159, 2, 55, "Input"],
Cell[446022, 11181, 84, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446143, 11187, 146, 2, 32, "Input"],
Cell[446292, 11191, 193, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446522, 11200, 360, 7, 32, "Input"],
Cell[446885, 11209, 13919, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460841, 11551, 255, 5, 32, "Input"],
Cell[461099, 11558, 13789, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474925, 11898, 159, 2, 55, "Input"],
Cell[475087, 11902, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475231, 11908, 137, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[475393, 11914, 136, 2, 24, "Print"],
Cell[475532, 11918, 156, 2, 24, "Print"],
Cell[475691, 11922, 147, 2, 24, "Print"],
Cell[475841, 11926, 133, 2, 24, "Print"],
Cell[475977, 11930, 148, 2, 24, "Print"],
Cell[476128, 11934, 142, 2, 24, "Print"],
Cell[476273, 11938, 143, 2, 24, "Print"],
Cell[476419, 11942, 144, 2, 24, "Print"],
Cell[476566, 11946, 153, 2, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476768, 11954, 403, 7, 55, "Input"],
Cell[477174, 11963, 13938, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[491137, 12305, 109, 1, 24, "Print"],
Cell[491249, 12308, 129, 1, 24, "Print"],
Cell[491381, 12311, 122, 1, 24, "Print"],
Cell[491506, 12314, 108, 1, 24, "Print"],
Cell[491617, 12317, 121, 1, 24, "Print"],
Cell[491741, 12320, 118, 1, 24, "Print"],
Cell[491862, 12323, 114, 1, 24, "Print"],
Cell[491979, 12326, 117, 1, 24, "Print"],
Cell[492099, 12329, 127, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[492287, 12337, 93, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[492405, 12342, 159, 2, 55, "Input"],
Cell[492567, 12346, 186, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492790, 12354, 671, 14, 78, "Input"],
Cell[493464, 12370, 14017, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[507506, 12712, 159, 2, 24, "Print"],
Cell[507668, 12716, 179, 2, 24, "Print"],
Cell[507850, 12720, 170, 2, 24, "Print"],
Cell[508023, 12724, 156, 2, 24, "Print"],
Cell[508182, 12728, 171, 2, 24, "Print"],
Cell[508356, 12732, 166, 2, 24, "Print"],
Cell[508525, 12736, 164, 2, 24, "Print"],
Cell[508692, 12740, 167, 2, 24, "Print"],
Cell[508862, 12744, 177, 2, 24, "Print"],
Cell[509042, 12748, 161, 2, 24, "Print"]
}, Open  ]],
Cell[509218, 12753, 365, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[509632, 12764, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[509749, 12769, 159, 2, 55, "Input"],
Cell[509911, 12773, 133, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510081, 12780, 580, 13, 78, "Input"],
Cell[510664, 12795, 15059, 357, 61, "Output"],
Cell[CellGroupData[{
Cell[525748, 13156, 209, 3, 24, "Print"],
Cell[525960, 13161, 226, 3, 24, "Print"],
Cell[526189, 13166, 219, 3, 24, "Print"],
Cell[526411, 13171, 203, 3, 24, "Print"],
Cell[526617, 13176, 218, 3, 24, "Print"],
Cell[526838, 13181, 213, 3, 24, "Print"],
Cell[527054, 13186, 211, 3, 24, "Print"],
Cell[527268, 13191, 214, 3, 24, "Print"],
Cell[527485, 13196, 225, 3, 24, "Print"],
Cell[527713, 13201, 210, 3, 24, "Print"],
Cell[527926, 13206, 211, 3, 24, "Print"]
}, Open  ]],
Cell[528152, 13212, 263, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528452, 13221, 253, 4, 55, "Input"],
Cell[528708, 13227, 13813, 335, 61, "Output"],
Cell[CellGroupData[{
Cell[542546, 13566, 138, 2, 24, "Print"],
Cell[542687, 13570, 153, 2, 24, "Print"],
Cell[542843, 13574, 146, 2, 24, "Print"],
Cell[542992, 13578, 132, 2, 24, "Print"],
Cell[543127, 13582, 147, 2, 24, "Print"],
Cell[543277, 13586, 142, 2, 24, "Print"],
Cell[543422, 13590, 142, 2, 24, "Print"],
Cell[543567, 13594, 145, 2, 24, "Print"],
Cell[543715, 13598, 154, 2, 24, "Print"],
Cell[543872, 13602, 139, 2, 24, "Print"],
Cell[544014, 13606, 138, 2, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[544213, 13615, 121, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[544359, 13620, 159, 2, 55, "Input"],
Cell[544521, 13624, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544645, 13630, 855, 19, 123, "Input"],
Cell[545503, 13651, 13887, 336, 61, "Output"],
Cell[559393, 13989, 215, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[559633, 13997, 180, 2, 24, "Print"],
Cell[559816, 14001, 199, 2, 24, "Print"],
Cell[560018, 14005, 194, 2, 24, "Print"],
Cell[560215, 14009, 180, 2, 24, "Print"],
Cell[560398, 14013, 193, 2, 24, "Print"],
Cell[560594, 14017, 188, 2, 24, "Print"],
Cell[560785, 14021, 186, 2, 24, "Print"],
Cell[560974, 14025, 189, 2, 24, "Print"],
Cell[561166, 14029, 202, 2, 24, "Print"],
Cell[561371, 14033, 183, 2, 24, "Print"],
Cell[561557, 14037, 185, 2, 24, "Print"],
Cell[561745, 14041, 193, 2, 24, "Print"]
}, Open  ]],
Cell[561953, 14046, 237, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[562239, 14055, 125, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[562389, 14060, 159, 2, 55, "Input"],
Cell[562551, 14064, 132, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562720, 14071, 953, 20, 123, "Input"],
Cell[563676, 14093, 191, 4, 34, "Output"],
Cell[563870, 14099, 168, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[564063, 14107, 138, 2, 24, "Print"],
Cell[564204, 14111, 153, 2, 24, "Print"],
Cell[564360, 14115, 148, 2, 24, "Print"],
Cell[564511, 14119, 131, 2, 24, "Print"],
Cell[564645, 14123, 149, 2, 24, "Print"],
Cell[564797, 14127, 142, 2, 24, "Print"],
Cell[564942, 14131, 140, 2, 24, "Print"],
Cell[565085, 14135, 143, 2, 24, "Print"],
Cell[565231, 14139, 154, 2, 24, "Print"],
Cell[565388, 14143, 137, 2, 24, "Print"],
Cell[565528, 14147, 142, 2, 24, "Print"],
Cell[565673, 14151, 137, 2, 24, "Print"],
Cell[565813, 14155, 147, 2, 24, "Print"],
Cell[565963, 14159, 146, 2, 24, "Print"]
}, Open  ]],
Cell[566124, 14164, 192, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566365, 14173, 112, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[566502, 14178, 797, 19, 169, "Input"],
Cell[567302, 14199, 211, 5, 34, "Output"],
Cell[567516, 14206, 164, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[567705, 14214, 110, 1, 24, "Print"],
Cell[567818, 14217, 128, 1, 24, "Print"],
Cell[567949, 14220, 120, 1, 24, "Print"],
Cell[568072, 14223, 109, 1, 24, "Print"],
Cell[568184, 14226, 122, 1, 24, "Print"],
Cell[568309, 14229, 119, 1, 24, "Print"],
Cell[568431, 14232, 115, 1, 24, "Print"],
Cell[568549, 14235, 118, 1, 24, "Print"],
Cell[568670, 14238, 129, 1, 24, "Print"],
Cell[568802, 14241, 112, 1, 24, "Print"],
Cell[568917, 14244, 117, 1, 24, "Print"],
Cell[569037, 14247, 112, 1, 24, "Print"],
Cell[569152, 14250, 120, 1, 24, "Print"],
Cell[569275, 14253, 121, 1, 24, "Print"],
Cell[569399, 14256, 110, 1, 24, "Print"]
}, Open  ]],
Cell[569524, 14260, 188, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569761, 14269, 123, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[569909, 14274, 1098, 26, 169, "Input"],
Cell[571010, 14302, 237, 5, 34, "Output"],
Cell[571250, 14309, 192, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[571467, 14317, 161, 2, 24, "Print"],
Cell[571631, 14321, 179, 2, 24, "Print"],
Cell[571813, 14325, 174, 2, 24, "Print"],
Cell[571990, 14329, 158, 2, 24, "Print"],
Cell[572151, 14333, 175, 2, 24, "Print"],
Cell[572329, 14337, 170, 2, 24, "Print"],
Cell[572502, 14341, 166, 2, 24, "Print"],
Cell[572671, 14345, 169, 2, 24, "Print"],
Cell[572843, 14349, 179, 2, 24, "Print"],
Cell[573025, 14353, 162, 2, 24, "Print"],
Cell[573190, 14357, 168, 2, 24, "Print"],
Cell[573361, 14361, 162, 2, 24, "Print"],
Cell[573526, 14365, 171, 2, 24, "Print"],
Cell[573700, 14369, 171, 2, 24, "Print"],
Cell[573874, 14373, 161, 2, 24, "Print"],
Cell[574038, 14377, 169, 2, 24, "Print"]
}, Open  ]],
Cell[574222, 14382, 214, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574485, 14391, 130, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[574640, 14396, 1085, 23, 168, "Input"],
Cell[575728, 14421, 511, 9, 34, "Output"],
Cell[CellGroupData[{
Cell[576264, 14434, 303, 4, 24, "Print"],
Cell[576570, 14440, 323, 4, 24, "Print"],
Cell[576896, 14446, 314, 4, 24, "Print"],
Cell[577213, 14452, 300, 4, 24, "Print"],
Cell[577516, 14458, 315, 4, 24, "Print"],
Cell[577834, 14464, 310, 4, 24, "Print"],
Cell[578147, 14470, 310, 4, 24, "Print"],
Cell[578460, 14476, 311, 4, 24, "Print"],
Cell[578774, 14482, 324, 4, 24, "Print"],
Cell[579101, 14488, 305, 4, 24, "Print"],
Cell[579409, 14494, 310, 4, 24, "Print"],
Cell[579722, 14500, 307, 4, 24, "Print"],
Cell[580032, 14506, 315, 4, 24, "Print"],
Cell[580350, 14512, 314, 4, 24, "Print"],
Cell[580667, 14518, 305, 4, 24, "Print"],
Cell[580975, 14524, 309, 4, 24, "Print"],
Cell[581287, 14530, 318, 4, 24, "Print"]
}, Open  ]],
Cell[581620, 14537, 356, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[582025, 14548, 117, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[582167, 14553, 915, 22, 146, "Input"],
Cell[583085, 14577, 233, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[583343, 14585, 183, 2, 24, "Print"],
Cell[583529, 14589, 201, 2, 24, "Print"],
Cell[583733, 14593, 196, 2, 24, "Print"],
Cell[583932, 14597, 180, 2, 24, "Print"],
Cell[584115, 14601, 195, 2, 24, "Print"],
Cell[584313, 14605, 190, 2, 24, "Print"],
Cell[584506, 14609, 190, 2, 24, "Print"],
Cell[584699, 14613, 191, 2, 24, "Print"],
Cell[584893, 14617, 202, 2, 24, "Print"],
Cell[585098, 14621, 185, 2, 24, "Print"],
Cell[585286, 14625, 188, 2, 24, "Print"],
Cell[585477, 14629, 190, 2, 24, "Print"],
Cell[585670, 14633, 186, 2, 24, "Print"],
Cell[585859, 14637, 193, 2, 24, "Print"],
Cell[586055, 14641, 194, 2, 24, "Print"],
Cell[586252, 14645, 185, 2, 24, "Print"],
Cell[586440, 14649, 189, 2, 24, "Print"],
Cell[586632, 14653, 200, 2, 24, "Print"]
}, Open  ]],
Cell[586847, 14658, 236, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587120, 14666, 253, 4, 55, "Input"],
Cell[587376, 14672, 13838, 336, 61, "Output"],
Cell[CellGroupData[{
Cell[601239, 15012, 110, 1, 24, "Print"],
Cell[601352, 15015, 130, 1, 24, "Print"],
Cell[601485, 15018, 121, 1, 24, "Print"],
Cell[601609, 15021, 107, 1, 24, "Print"],
Cell[601719, 15024, 121, 1, 24, "Print"],
Cell[601843, 15027, 117, 1, 24, "Print"],
Cell[601963, 15030, 113, 1, 24, "Print"],
Cell[602079, 15033, 118, 1, 24, "Print"],
Cell[602200, 15036, 129, 1, 24, "Print"],
Cell[602332, 15039, 109, 1, 24, "Print"],
Cell[602444, 15042, 114, 1, 24, "Print"],
Cell[602561, 15045, 117, 1, 24, "Print"],
Cell[602681, 15048, 113, 1, 24, "Print"],
Cell[602797, 15051, 120, 1, 24, "Print"],
Cell[602920, 15054, 121, 1, 24, "Print"],
Cell[603044, 15057, 112, 1, 24, "Print"],
Cell[603159, 15060, 115, 1, 24, "Print"],
Cell[603277, 15063, 125, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[603463, 15071, 96, 1, 65, "Section"],
Cell[603562, 15074, 264, 6, 57, "Input"],
Cell[CellGroupData[{
Cell[603851, 15084, 617, 13, 99, "Input"],
Cell[604471, 15099, 351, 7, 34, "Output"],
Cell[604825, 15108, 13993, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[618843, 15450, 258, 3, 24, "Print"],
Cell[619104, 15455, 276, 3, 24, "Print"],
Cell[619383, 15460, 268, 3, 24, "Print"],
Cell[619654, 15465, 257, 3, 24, "Print"],
Cell[619914, 15470, 270, 3, 24, "Print"],
Cell[620187, 15475, 265, 3, 24, "Print"],
Cell[620455, 15480, 263, 3, 24, "Print"],
Cell[620721, 15485, 268, 3, 24, "Print"],
Cell[620992, 15490, 277, 3, 24, "Print"],
Cell[621272, 15495, 260, 3, 24, "Print"],
Cell[621535, 15500, 255, 3, 24, "Print"],
Cell[621793, 15505, 263, 3, 24, "Print"],
Cell[622059, 15510, 265, 3, 24, "Print"],
Cell[622327, 15515, 261, 3, 24, "Print"],
Cell[622591, 15520, 268, 3, 24, "Print"],
Cell[622862, 15525, 269, 3, 24, "Print"],
Cell[623134, 15530, 260, 3, 24, "Print"],
Cell[623397, 15535, 264, 3, 24, "Print"],
Cell[623664, 15540, 273, 3, 24, "Print"]
}, Open  ]],
Cell[623952, 15546, 336, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[624337, 15557, 96, 1, 65, "Section"],
Cell[624436, 15560, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[624659, 15569, 475, 10, 99, "Input"],
Cell[625137, 15581, 156, 3, 34, "Output"],
Cell[625296, 15586, 13818, 335, 61, "Output"],
Cell[CellGroupData[{
Cell[639139, 15925, 110, 1, 24, "Print"],
Cell[639252, 15928, 128, 1, 24, "Print"],
Cell[639383, 15931, 121, 1, 24, "Print"],
Cell[639507, 15934, 109, 1, 24, "Print"],
Cell[639619, 15937, 124, 1, 24, "Print"],
Cell[639746, 15940, 119, 1, 24, "Print"],
Cell[639868, 15943, 117, 1, 24, "Print"],
Cell[639988, 15946, 118, 1, 24, "Print"],
Cell[640109, 15949, 129, 1, 24, "Print"],
Cell[640241, 15952, 112, 1, 24, "Print"],
Cell[640356, 15955, 109, 1, 24, "Print"],
Cell[640468, 15958, 115, 1, 24, "Print"],
Cell[640586, 15961, 118, 1, 24, "Print"],
Cell[640707, 15964, 119, 1, 24, "Print"],
Cell[640829, 15967, 113, 1, 24, "Print"],
Cell[640945, 15970, 120, 1, 24, "Print"],
Cell[641068, 15973, 121, 1, 24, "Print"],
Cell[641192, 15976, 112, 1, 24, "Print"],
Cell[641307, 15979, 116, 1, 24, "Print"],
Cell[641426, 15982, 125, 1, 24, "Print"]
}, Open  ]],
Cell[641566, 15986, 161, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[641776, 15994, 99, 1, 65, "Section"],
Cell[641878, 15997, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[642101, 16006, 647, 14, 99, "Input"],
Cell[642751, 16022, 229, 5, 34, "Output"],
Cell[642983, 16029, 13845, 336, 61, "Output"],
Cell[CellGroupData[{
Cell[656853, 16369, 138, 2, 24, "Print"],
Cell[656994, 16373, 153, 2, 24, "Print"],
Cell[657150, 16377, 146, 2, 24, "Print"],
Cell[657299, 16381, 131, 2, 24, "Print"],
Cell[657433, 16385, 147, 2, 24, "Print"],
Cell[657583, 16389, 141, 2, 24, "Print"],
Cell[657727, 16393, 140, 2, 24, "Print"],
Cell[657870, 16397, 143, 2, 24, "Print"],
Cell[658016, 16401, 154, 2, 24, "Print"],
Cell[658173, 16405, 137, 2, 24, "Print"],
Cell[658313, 16409, 132, 2, 24, "Print"],
Cell[658448, 16413, 140, 2, 24, "Print"],
Cell[658591, 16417, 143, 2, 24, "Print"],
Cell[658737, 16421, 144, 2, 24, "Print"],
Cell[658884, 16425, 142, 2, 24, "Print"],
Cell[659029, 16429, 140, 2, 24, "Print"],
Cell[659172, 16433, 145, 2, 24, "Print"],
Cell[659320, 16437, 146, 2, 24, "Print"],
Cell[659469, 16441, 137, 2, 24, "Print"],
Cell[659609, 16445, 141, 2, 24, "Print"],
Cell[659753, 16449, 152, 2, 24, "Print"]
}, Open  ]],
Cell[659920, 16454, 188, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[660157, 16463, 138, 2, 65, "Section"],
Cell[660298, 16467, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[660521, 16476, 125, 2, 32, "Input"],
Cell[660649, 16480, 13817, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674503, 16820, 129, 2, 32, "Input"],
Cell[674635, 16824, 13813, 335, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688497, 17165, 92, 1, 65, "Section"],
Cell[688592, 17168, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[688815, 17177, 139, 2, 32, "Input"],
Cell[688957, 17181, 208, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689202, 17190, 128, 2, 32, "Input"],
Cell[689333, 17194, 13813, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703183, 17534, 321, 5, 32, "Input"],
Cell[703507, 17541, 13967, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[717511, 17883, 134, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[717670, 17889, 110, 1, 24, "Print"],
Cell[717783, 17892, 128, 1, 24, "Print"],
Cell[717914, 17895, 121, 1, 24, "Print"],
Cell[718038, 17898, 107, 1, 24, "Print"],
Cell[718148, 17901, 124, 1, 24, "Print"],
Cell[718275, 17904, 116, 1, 24, "Print"],
Cell[718394, 17907, 115, 1, 24, "Print"],
Cell[718512, 17910, 118, 1, 24, "Print"],
Cell[718633, 17913, 129, 1, 24, "Print"],
Cell[718765, 17916, 112, 1, 24, "Print"],
Cell[718880, 17919, 107, 1, 24, "Print"],
Cell[718990, 17922, 115, 1, 24, "Print"],
Cell[719108, 17925, 118, 1, 24, "Print"],
Cell[719229, 17928, 120, 1, 24, "Print"],
Cell[719352, 17931, 117, 1, 24, "Print"],
Cell[719472, 17934, 117, 1, 24, "Print"],
Cell[719592, 17937, 113, 1, 24, "Print"],
Cell[719708, 17940, 120, 1, 24, "Print"],
Cell[719831, 17943, 123, 1, 24, "Print"],
Cell[719957, 17946, 110, 1, 24, "Print"],
Cell[720070, 17949, 116, 1, 24, "Print"],
Cell[720189, 17952, 125, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[720375, 17960, 93, 1, 65, "Section"],
Cell[720471, 17963, 198, 5, 57, "Input"],
Cell[720672, 17970, 1665, 44, 236, "Input"],
Cell[CellGroupData[{
Cell[722362, 18018, 180, 3, 34, "Input"],
Cell[722545, 18023, 225, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722807, 18034, 1069, 15, 77, "Input"],
Cell[723879, 18051, 218, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724134, 18059, 453, 9, 34, "Input"],
Cell[724590, 18070, 14166, 338, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738793, 18413, 68, 1, 32, "Input"],
Cell[738864, 18416, 296, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739197, 18428, 295, 7, 55, "Input"],
Cell[739495, 18437, 145, 2, 32, "Output"]
}, Open  ]],
Cell[739655, 18442, 98, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[739778, 18447, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[739902, 18452, 629, 14, 124, "Input"],
Cell[740534, 18468, 14142, 339, 61, "Output"],
Cell[754679, 18809, 395, 9, 34, "Output"],
Cell[755077, 18820, 316, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755430, 18830, 139, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[755594, 18836, 211, 2, 24, "Print"],
Cell[755808, 18840, 186, 2, 24, "Print"],
Cell[755997, 18844, 204, 2, 24, "Print"],
Cell[756204, 18848, 197, 2, 24, "Print"],
Cell[756404, 18852, 182, 2, 24, "Print"],
Cell[756589, 18856, 200, 2, 24, "Print"],
Cell[756792, 18860, 193, 2, 24, "Print"],
Cell[756988, 18864, 190, 2, 24, "Print"],
Cell[757181, 18868, 194, 2, 24, "Print"],
Cell[757378, 18872, 205, 2, 24, "Print"],
Cell[757586, 18876, 190, 2, 24, "Print"],
Cell[757779, 18880, 183, 2, 24, "Print"],
Cell[757965, 18884, 191, 2, 24, "Print"],
Cell[758159, 18888, 192, 2, 24, "Print"],
Cell[758354, 18892, 196, 2, 24, "Print"],
Cell[758553, 18896, 191, 2, 24, "Print"],
Cell[758747, 18900, 195, 2, 24, "Print"],
Cell[758945, 18904, 191, 2, 24, "Print"],
Cell[759139, 18908, 196, 2, 24, "Print"],
Cell[759338, 18912, 197, 2, 24, "Print"],
Cell[759538, 18916, 188, 2, 24, "Print"],
Cell[759729, 18920, 194, 2, 24, "Print"],
Cell[759926, 18924, 201, 2, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[760200, 18934, 100, 1, 65, "Section"],
Cell[760303, 18937, 428, 10, 101, "Input"],
Cell[760734, 18949, 200, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[760959, 18956, 131, 2, 32, "Input"],
Cell[761093, 18960, 186, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761316, 18967, 183, 3, 32, "Input"],
Cell[761502, 18972, 13838, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775377, 19313, 126, 2, 32, "Input"],
Cell[775506, 19317, 13838, 336, 61, "Output"]
}, Open  ]],
Cell[789359, 19656, 144, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[789528, 19662, 128, 2, 32, "Input"],
Cell[789659, 19666, 93, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789789, 19672, 165, 3, 34, "Input"],
Cell[789957, 19677, 75, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[790081, 19684, 101, 1, 65, "Section"],
Cell[790185, 19687, 429, 10, 101, "Input"],
Cell[CellGroupData[{
Cell[790639, 19701, 151, 2, 32, "Input"],
Cell[790793, 19705, 248, 5, 34, "Output"]
}, Open  ]],
Cell[791056, 19713, 550, 11, 56, "Input"],
Cell[CellGroupData[{
Cell[791631, 19728, 147, 2, 32, "Input"],
Cell[791781, 19732, 14960, 355, 61, "Output"]
}, Open  ]],
Cell[806756, 20090, 145, 2, 32, "Input"],
Cell[806904, 20094, 111, 1, 32, "Input"],
Cell[807018, 20097, 94, 1, 32, "Input"],
Cell[807115, 20100, 270, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[807410, 20109, 144, 2, 32, "Input"],
Cell[807557, 20113, 13815, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[821409, 20453, 241, 4, 32, "Input"],
Cell[821653, 20459, 13910, 337, 61, "Output"]
}, Open  ]],
Cell[835578, 20799, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[835697, 20804, 167, 3, 32, "Input"],
Cell[835867, 20809, 107, 1, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836011, 20815, 189, 3, 32, "Input"],
Cell[836203, 20820, 136, 3, 34, "Output"]
}, Open  ]],
Cell[836354, 20826, 563, 9, 32, "Input"],
Cell[836920, 20837, 174, 3, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[837131, 20845, 91, 1, 65, "Section"],
Cell[837225, 20848, 92, 1, 32, "Input"],
Cell[837320, 20851, 355, 8, 79, "Input"],
Cell[CellGroupData[{
Cell[837700, 20863, 398, 8, 55, "Input"],
Cell[838101, 20873, 158, 3, 34, "Output"],
Cell[838262, 20878, 143, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838442, 20884, 135, 2, 32, "Input"],
Cell[838580, 20888, 160, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838777, 20897, 135, 2, 32, "Input"],
Cell[838915, 20901, 524, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[839476, 20915, 355, 7, 34, "Input"],
Cell[839834, 20924, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[839950, 20930, 243, 5, 32, "Input"],
Cell[840196, 20937, 99, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[840344, 20944, 92, 1, 65, "Section"],
Cell[840439, 20947, 147, 2, 32, "Input"],
Cell[840589, 20951, 298, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[840912, 20961, 91, 1, 32, "Input"],
Cell[841006, 20964, 140, 3, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[841195, 20973, 143, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[841363, 20979, 386, 8, 78, "Input"],
Cell[841752, 20989, 204, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[841993, 20997, 138, 2, 32, "Input"],
Cell[842134, 21001, 152, 4, 32, "Output"]
}, Open  ]],
Cell[842301, 21008, 173, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[842499, 21015, 333, 7, 34, "Input"],
Cell[842835, 21024, 500, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843372, 21038, 186, 3, 32, "Input"],
Cell[843561, 21043, 247, 5, 23, "Message"],
Cell[843811, 21050, 217, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844065, 21059, 133, 2, 32, "Input"],
Cell[844201, 21063, 617, 10, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844855, 21078, 482, 10, 34, "Input"],
Cell[845340, 21090, 250, 5, 23, "Message"],
Cell[845593, 21097, 686, 12, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846316, 21114, 165, 3, 32, "Input"],
Cell[846484, 21119, 188, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846709, 21128, 143, 2, 32, "Input"],
Cell[846855, 21132, 157, 4, 32, "Output"]
}, Open  ]],
Cell[847027, 21139, 92, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847156, 21145, 102, 1, 65, "Section"],
Cell[847261, 21148, 340, 7, 78, "Input"],
Cell[847604, 21157, 129, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[847758, 21163, 143, 2, 32, "Input"],
Cell[847904, 21167, 121, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848062, 21173, 134, 2, 32, "Input"],
Cell[848199, 21177, 79, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[848327, 21184, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[848444, 21189, 418, 7, 77, "Input"],
Cell[848865, 21198, 550, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849452, 21211, 127, 2, 32, "Input"],
Cell[849582, 21215, 13822, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863441, 21556, 130, 2, 32, "Input"],
Cell[863574, 21560, 429, 8, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[864040, 21573, 261, 5, 32, "Input"],
Cell[864304, 21580, 909, 25, 67, "Output"]
}, Open  ]],
Cell[865228, 21608, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[865345, 21613, 219, 5, 34, "Input"],
Cell[865567, 21620, 1000, 26, 67, "Output"]
}, Open  ]],
Cell[866582, 21649, 142, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[866749, 21655, 417, 10, 34, "Input"],
Cell[867169, 21667, 327, 7, 23, "Message"],
Cell[867499, 21676, 330, 7, 23, "Message"],
Cell[867832, 21685, 328, 7, 23, "Message"],
Cell[868163, 21694, 403, 8, 23, "Message"],
Cell[868569, 21704, 326, 7, 23, "Message"],
Cell[868898, 21713, 185, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869120, 21722, 249, 5, 34, "Input"],
Cell[869372, 21729, 375, 7, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869784, 21741, 196, 3, 32, "Input"],
Cell[869983, 21746, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[870094, 21752, 292, 6, 32, "Input"],
Cell[870389, 21760, 126, 2, 32, "Output"]
}, Open  ]],
Cell[870530, 21765, 102, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[870669, 21771, 91, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[870785, 21776, 250, 4, 77, "Input"],
Cell[871038, 21782, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871182, 21788, 132, 2, 32, "Input"],
Cell[871317, 21792, 129, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871483, 21799, 151, 3, 32, "Input"],
Cell[871637, 21804, 126, 2, 32, "Output"]
}, Open  ]],
Cell[871778, 21809, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[871927, 21815, 215, 5, 32, "Input"],
Cell[872145, 21822, 1110, 25, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

