(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1039037,      26320]
NotebookOptionsPosition[    993393,      24926]
NotebookOutlinePosition[    993730,      24941]
CellTagsIndexPosition[    993687,      24938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702352590524482*^9, 3.702352592224441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750076739925*^9, 3.696750092889632*^9}, {
   3.696750795508745*^9, 3.696750795941852*^9}, {3.697004982280596*^9, 
   3.697004984103878*^9}, {3.697005032328155*^9, 3.697005064070107*^9}, 
   3.697005137851479*^9, 3.697005180719895*^9, 3.6970052219541187`*^9, {
   3.697005335483245*^9, 3.697005343217822*^9}, 3.697005750929583*^9, 
   3.697355226861183*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.700313396710945*^9}]
}, Open  ]],

Cell[BoxData["\"\</home/cukr/workspace/goProController/goProController/Kernel/\
init.m\>\""], "Input",
 CellChangeTimes->{{3.6973552268657722`*^9, 3.697355226868949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6970057578190107`*^9, 3.6970057662348022`*^9}, 
   3.697355226883486*^9}],

Cell[BoxData[
 TemplateBox[{
  "Get","noopen",
   "\"Cannot open \\!\\(\\*RowBox[{\\\"\\\\\\\"goProController`\\\\\\\"\\\"}]\
\\).\"",2,4,3,31780471094963043630,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7003134004558897`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.700313400459832*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6968442811713*^9, 3.696844294752799*^9}, {
   3.6968444281477127`*^9, 3.6968444299308977`*^9}, 3.697005442218766*^9, 
   3.697005855011231*^9, 3.697355226885248*^9}],

Cell[CellGroupData[{

Cell["Funkce pro slo\[ZHacek]en\[IAcute] p\[RHacek]\[IAcute]kazu", \
"Subsubsection",
 CellChangeTimes->{{3.696572942638645*^9, 3.696572947646805*^9}}],

Cell["\<\
funkce goProMakeCommand [command_,param_] nastav\[IAcute] v url p\[RHacek]\
\[IAcute]kaz pro goPro a jeho parametr, vyu\[ZHacek]\[IAcute]v\[AAcute] samoz\
\[RHacek]ejm\[EHacek] prom\[EHacek]nn\[YAcute]ch pot\[RHacek]ebn\[YAcute]ch \
pro ovl\[AAcute]d\[AAcute]n\[IAcute] gopro\
\>", "Text",
 CellChangeTimes->{{3.696572550546661*^9, 3.696572627980801*^9}, {
  3.697355226973854*^9, 3.697355227191309*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPassword", "=", "\"\<12345678\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goProUrl", "=", "\"\<http://10.5.5.9/\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6965727875766773`*^9, 3.696572866685979*^9}, {
  3.696574570792346*^9, 3.696574571099667*^9}, {3.697355227205649*^9, 
  3.697355227206719*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Funkce", " ", "pro", " ", "slozeni", " ", "url", " ", "pro", " ", 
     "ovladani", " ", "kamery"}], ",", 
    RowBox[{"unit", " ", 
     RowBox[{"(", 
      RowBox[{"bacpac", "||", "camera"}], ")"}]}], ",", 
    RowBox[{"command", " ", 
     RowBox[{"(", "prikat", ")"}]}], ",", 
    RowBox[{"parram", " ", 
     RowBox[{"(", 
      RowBox[{"parametr", " ", "prikazu"}], ")"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"goProMakeCommand", "[", 
     RowBox[{"unit_String", ",", "command_String", ",", "parram_String"}], 
     "]"}], ":=", 
    RowBox[{
    "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
     "\"\<?t=\>\"", "<>", "goProPassword", "<>", "\"\<&p=%\>\"", "<>", 
     "parram"}]}], "\n", 
   RowBox[{
    RowBox[{"goProGetStatus", "[", 
     RowBox[{"unit_String", ",", "command_String"}], "]"}], ":=", 
    RowBox[{
    "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
     "\"\<?t=\>\"", "<>", "goProPassword"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "spusteni", " ", "prikazu", " ", "exec", " ", "pomoci", " ", 
     "HTTPRequest", " ", "a", " ", "URLRead"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"execute", "[", "exec_String", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"request", "=", 
       RowBox[{"HTTPRequest", "[", "exec", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"URLRead", "[", "request", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696844696477223*^9, 3.696844770396954*^9}, {
  3.696844917870075*^9, 3.696844934930842*^9}, {3.697355227214542*^9, 
  3.6973552272193193`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stazen\[IAcute] nastaveni kamery", "Subsection",
 CellChangeTimes->{{3.69684437407681*^9, 3.696844377705361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{"HTTPRequest", "[", "\"\<http://10.5.5.9/bacpac/sd\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.696574883207204*^9, 3.6965749210347233`*^9}, {
  3.6965751968841667`*^9, 3.6965751973457727`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "8", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", 
   "54", ",", "55", ",", "56"}], "}"}]], "Output",
 CellChangeTimes->{3.6968444359999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeSettings", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"execute", "[", 
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"\"\<camera\>\"", ",", "x", ",", "y"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6968444870710993`*^9, 3.696844546623432*^9}, {
   3.696844757223896*^9, 3.696844761154315*^9}, 3.697355227227249*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeSettings", "[", 
   RowBox[{"\"\<VV\>\"", ",", "\"\<06\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.696844589131288*^9, 3.696844624732513*^9}, {
  3.6968448014152527`*^9, 3.696844810534724*^9}, {3.696844869343486*^9, 
  3.6968448750998*^9}, {3.696844951184965*^9, 3.6968450692260437`*^9}, {
  3.696845238475271*^9, 3.696845239323852*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 8}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 8}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 8}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 8}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696844625649702*^9, 3.696844668693445*^9}, 
   3.6968447044402742`*^9, {3.696844764636897*^9, 3.696844811155263*^9}, {
   3.6968448704932756`*^9, 3.696844875635837*^9}, {3.696844957422426*^9, 
   3.69684500831962*^9}, {3.6968450500749073`*^9, 3.696845066467105*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"HTTPRequest", "[", 
  RowBox[{
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6973552272427464`*^9, 3.697355227245572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HTTPResponse", "[", 
  RowBox[{"goProGetStatus", "[", 
   RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.696845071957049*^9, 3.696845110060686*^9}, 
   3.697355227270851*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]], 36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46,
                  53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63,
                  116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                Association["ContentType" -> "text/html;charset=utf-8"], 
                CharacterEncoding -> "UTF-8"], "BodyBytes"]]; 
            Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"text/html;charset=utf-8\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]], 36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    
                    ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53,
                     46, 53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 
                    118, 63, 116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                    Association["ContentType" -> "text/html;charset=utf-8"], 
                    CharacterEncoding -> "UTF-8"]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                
                ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46,
                  53, 46, 57, 47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63,
                  116, 61, 49, 50, 51, 52, 53, 54, 55, 56}], 
                Association["ContentType" -> "text/html;charset=utf-8"], 
                CharacterEncoding -> "UTF-8"], "BodyBytes"]]; 
            Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"text/html;charset=utf-8\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{104, 116, 116, 112, 58, 47, 47, 49, 48, 46, 53, 46, 53, 46, 57, 
    47, 99, 97, 109, 101, 114, 97, 47, 118, 118, 63, 116, 61, 49, 50, 51, 52, 
    53, 54, 55, 56}], 
   Association["ContentType" -> "text/html;charset=utf-8"], CharacterEncoding -> 
   "UTF-8"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696845073654273*^9, 3.6968451105515137`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"req", "=", 
  RowBox[{"HTTPRequest", "[", 
   RowBox[{"goProGetStatus", "[", 
    RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"URLRead", "[", "req", "]"}], "\[IndentingNewLine]", 
 RowBox[{"resp", "=", 
  RowBox[{"URLExecute", "[", "req", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6895714681817007`*^9, 3.689571468798458*^9}, {
   3.6895715680917606`*^9, 3.6895716673545628`*^9}, {3.689571697682626*^9, 
   3.6895717618563995`*^9}, {3.696845168981282*^9, 3.696845220570067*^9}, {
   3.6968452963347473`*^9, 3.696845300987903*^9}, 3.697355227275853*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPRequest",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          GraphicsBox[
           {RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
            InsetBox[
             StyleBox["\<\"GET\"\>",
              StripOnInput->False,
              LineColor->GrayLevel[1],
              FrontFaceColor->GrayLevel[1],
              BackFaceColor->GrayLevel[1],
              GraphicsColor->GrayLevel[1],
              FontSize->10,
              FontWeight->Bold,
              FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
           Background->None,
           
           ImageSize->
            Dynamic[{
             Automatic, (3 CurrentValue["FontCapHeight"])/
              AbsoluteCurrentValue[Magnification]}]],
          Active->False,
          Appearance->"Frameless",
          ButtonFunction:>Null,
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"URL: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TagBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                  Short], True->
                 StyleBox[
                  TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                   Short], "HyperlinkActive"]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{"Hyperlink"},
                 FrameMargins->0,
                 ImageSize->Automatic],
                BaseStyle->"Hyperlink",
                ButtonData->{
                  URL["http://10.5.5.9/camera/vv?t=12345678"], None},
                ButtonNote->"http://10.5.5.9/camera/vv?t=12345678"],
               
               Annotation[#, "http://10.5.5.9/camera/vv?t=12345678", 
                "Hyperlink"]& ],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"ContentType: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          GraphicsBox[
           {RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
            InsetBox[
             StyleBox["\<\"GET\"\>",
              StripOnInput->False,
              LineColor->GrayLevel[1],
              FrontFaceColor->GrayLevel[1],
              BackFaceColor->GrayLevel[1],
              GraphicsColor->GrayLevel[1],
              FontSize->10,
              FontWeight->Bold,
              FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
           Background->None,
           
           ImageSize->
            Dynamic[{
             Automatic, (3 CurrentValue["FontCapHeight"])/
              AbsoluteCurrentValue[Magnification]}]],
          Active->False,
          Appearance->"Frameless",
          ButtonFunction:>Null,
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"URL: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TagBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                  Short], True->
                 StyleBox[
                  TagBox["\<\"http://10.5.5.9/camera/vv?t=12345678\"\>",
                   Short], "HyperlinkActive"]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{"Hyperlink"},
                 FrameMargins->0,
                 ImageSize->Automatic],
                BaseStyle->"Hyperlink",
                ButtonData->{
                  URL["http://10.5.5.9/camera/vv?t=12345678"], None},
                ButtonNote->"http://10.5.5.9/camera/vv?t=12345678"],
               
               Annotation[#, "http://10.5.5.9/camera/vv?t=12345678", 
                "Hyperlink"]& ],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"ContentType: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPRequest["http://10.5.5.9/camera/vv?t=12345678", 
   Association[]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.6968453013686237`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.6968453091289682`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.696845184008286*^9, 3.69684522111509*^9}, {
  3.696845296996038*^9, 3.696845310712674*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.696845315582663*^9, 3.696845348753879*^9}, {
   3.696845445543771*^9, 3.69684545135005*^9}, {3.6970058938183203`*^9, 
   3.697005904258731*^9}, 3.697355227280508*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696845244024126*^9, 3.696845317032251*^9, {3.696845440518878*^9, 
   3.696845451781955*^9}, {3.697005876695902*^9, 3.697005904706955*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TEst", "Title",
 CellChangeTimes->{{3.6970059391630793`*^9, 3.697005940126431*^9}}],

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750076739925*^9, 3.696750092889632*^9}, {
   3.696750795508745*^9, 3.696750795941852*^9}, {3.697005376998857*^9, 
   3.697005378446042*^9}, {3.6970055450520573`*^9, 3.697005571834888*^9}, 
   3.697355227281714*^9}],

Cell[BoxData["\"\</home/cukr/workspace/goProController/goProController/Kernel/\
init.m\>\""], "Input",
 CellChangeTimes->{{3.697355227282426*^9, 3.69735522728439*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697007033818371*^9, 3.6970070421314363`*^9}, 
   3.697355227310413*^9}],

Cell["Inicializace hesla ke goPro kamere", "Text",
 CellChangeTimes->{{3.696750687357234*^9, 3.696750693421286*^9}, 
   3.6973552273243093`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696750566327804*^9, 3.696750579817667*^9}, 
   3.69735522734936*^9}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.6967505813620567`*^9, 3.6967508046179457`*^9, 
  3.696752234513191*^9, 3.6967526970930967`*^9, 3.6968457928807373`*^9, 
  3.6970059482711363`*^9}]
}, Open  ]],

Cell["Zapnut\[IAcute] kamery", "Text",
 CellChangeTimes->{{3.696750697936737*^9, 3.6967507047957983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6967507073742723`*^9, 3.696750710129911*^9}, 
   3.6973552273534517`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6967508082288017`*^9, {3.696752226710471*^9, 3.696752238209855*^9}, 
   3.696752698904038*^9, 3.696845806523322*^9, 3.69700595114977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zahajeni a vypnuti nataceni", "Subsubsection",
 CellChangeTimes->{{3.6967527115551043`*^9, 3.696752719378209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProShutter", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.696752723687476*^9, 3.696752736966157*^9}, 
   3.697355227356941*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProStop", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.696752732622096*^9, 3.696752738801538*^9}, 
   3.6973552273611307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani modu camery", "Subsubsection",
 CellChangeTimes->{{3.6967530051369553`*^9, 3.696753010594634*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6967530137064323`*^9, 3.6967530407451153`*^9}, {
  3.69735522736522*^9, 3.697355227365963*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696753030510977*^9, 3.696753042973267*^9}, 
   3.697005958210102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProBurstMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.696753050442895*^9, 3.696753073214384*^9}, {
  3.697355227370203*^9, 3.6973552273709106`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696753056252553*^9, 3.697005963164551*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProTimeLapseMode", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProShutter", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6967530771212254`*^9, 3.696753085435246*^9}, {
  3.697355227375128*^9, 3.697355227375955*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProStop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6967530952549753`*^9, 3.696753098553781*^9}, 
   3.697355227380096*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 3}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.69675308960707*^9, 3.6967530990634727`*^9}}]
}, Open  ]],

Cell["Vypnut\[IAcute] kamery", "Text",
 CellChangeTimes->{{3.6967507145952578`*^9, 3.696750719975833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOff", "[", "]"}]], "Input",
 CellChangeTimes->{{3.696750723462222*^9, 3.696750732621108*^9}, 
   3.697355227384009*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVGtIk2EU/uacog51kTSS5bSkHGUYQoQZ9KdCMsEKBJVYQ9Mfopn/oh8m
QUFkQdSPiEgSZDd1SKGChbe84BLU0NI007K8T2VeWk/nfb9va45F9MF7+Z73
4Zz3nPecJ11fVpBXpC8rNOi1p0v1JQWFhmvaU8WlBMllgiCo2dAKbA/aSpMa
g/1dghDClyD02VvR2GvFnbZyFLcU8tXUXSUeC8F8keNp50MkNyRBaQoTFBCM
AmEKk4Jj1V1PyA6nKyQ6M3qhMYMTQyV6dtNFdioxOD1Q+iF/2G1Vc6JSosfU
ajjOGAEiXe5lXVsXw4nhEn1/XTzHGUO2nc4cE4kTI9gsg745h5Mkpmg/kEcp
GJVInpjCFiAHfeRhbekq4ixKHO6rQsfKHBzOITQNZ0BjJqMm/zglZZvxKByy
6ci4DKo31Zj+5cLSwl0Uducgh0ZWmw7Rr6sw5XKgf7QY+YM2fKN977s4RPnF
Y3GsIckdqbCLZ5bFrzQrxWBNKqQOtWDWtYiukUzEsLsaQ5H4YQzrm604Vy+D
YNHhlsMJx3weznz0h2cj3qL0eOEJ5Y/CUhnA5x00B2NPRyV6Np34Ol2ERGsE
UqZ/YNNpxFEru4kGlxdW4HRUwjDjDy/HAQs5oSr0OKlovS49LJtVPHFhjSVo
31zH5Hga0mfmseVlyMANPUD+rD/8JnNAHu633/Yky9CcK1VFCBKGOvFpuQbH
a+nfHIuixVV69BvIHBvHBiXlLE9KAip4Uq4gbdQfnotoE/NCXeTxIsVBIwBR
7TZ8dy2gfSQfWfbHGNzawJeJE9C0PMOkawk9w5dw3v4Cn3+uwN6/Dzv94nsR
ZPSNRXoScZjVSH/fgAHnMtY2xtE9UYqUOsqjKRxH+p6jc3UOy84BvKJCjeYF
/Bece7H11LgrWGx4dyOpxEZSWSK3lbmcK4IP6eTLVB+S2GgiKVIkkXEZHnXc
+3fzEuTdvG7mW3uzR0TcqsBExEcV/lNzvBVNugtJ5x8BZCpHZ5JZj15S++Ng
vY4TffWSgnfrpbcIU6rZo/LCZGVD/5IIC7LfEwhdXQ==\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696750742098474*^9, 3.696750813311102*^9, 
  3.696752245910186*^9, 3.6967532402585583`*^9, 3.696845803711279*^9, 
  3.696846494477065*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveni foto modu", "Subsubsection",
 CellChangeTimes->{{3.6968458110351133`*^9, 3.696845818701964*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProPhotoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.696845825258896*^9, 3.696845828308042*^9}, 
   3.697355227385132*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVGtIk2EU/uacog51kTSS5bSkHGUYQoQZ9KdCMsEKBJVYQ9Mfopn/oh8m
QUFkQdSPiEgSZDd1SKGChbe84BLU0NI007K8T2VeWk/nfb9va45F9MF7+Z73
4Zz3nPecJ11fVpBXpC8rNOi1p0v1JQWFhmvaU8WlBMllgiCo2dAKbA/aSpMa
g/1dghDClyD02VvR2GvFnbZyFLcU8tXUXSUeC8F8keNp50MkNyRBaQoTFBCM
AmEKk4Jj1V1PyA6nKyQ6M3qhMYMTQyV6dtNFdioxOD1Q+iF/2G1Vc6JSosfU
ajjOGAEiXe5lXVsXw4nhEn1/XTzHGUO2nc4cE4kTI9gsg745h5Mkpmg/kEcp
GJVInpjCFiAHfeRhbekq4ixKHO6rQsfKHBzOITQNZ0BjJqMm/zglZZvxKByy
6ci4DKo31Zj+5cLSwl0Uducgh0ZWmw7Rr6sw5XKgf7QY+YM2fKN977s4RPnF
Y3GsIckdqbCLZ5bFrzQrxWBNKqQOtWDWtYiukUzEsLsaQ5H4YQzrm604Vy+D
YNHhlsMJx3weznz0h2cj3qL0eOEJ5Y/CUhnA5x00B2NPRyV6Np34Ol2ERGsE
UqZ/YNNpxFEru4kGlxdW4HRUwjDjDy/HAQs5oSr0OKlovS49LJtVPHFhjSVo
31zH5Hga0mfmseVlyMANPUD+rD/8JnNAHu633/Yky9CcK1VFCBKGOvFpuQbH
a+nfHIuixVV69BvIHBvHBiXlLE9KAip4Uq4gbdQfnotoE/NCXeTxIsVBIwBR
7TZ8dy2gfSQfWfbHGNzawJeJE9C0PMOkawk9w5dw3v4Cn3+uwN6/Dzv94nsR
ZPSNRXoScZjVSH/fgAHnMtY2xtE9UYqUOsqjKRxH+p6jc3UOy84BvKJCjeYF
/Bece7H11LgrWGx4dyOpxEZSWSK3lbmcK4IP6eTLVB+S2GgiKVIkkXEZHnXc
+3fzEuTdvG7mW3uzR0TcqsBExEcV/lNzvBVNugtJ5x8BZCpHZ5JZj15S++Ng
vY4TffWSgnfrpbcIU6rZo/LCZGVD/5IIC7LfEwhdXQ==\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.696845828913883*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes12W", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.696845831021105*^9, 3.696845843764935*^9}, {
  3.6968462665695457`*^9, 3.6968462830444183`*^9}, {3.696846315214375*^9, 
  3.69684631630405*^9}, {3.697355227386139*^9, 3.697355227386694*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.696846283576539*^9, 3.696846316856024*^9, 
  3.697006064538666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes7W", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6968458484662437`*^9, 3.696845855098371*^9}, {
  3.696846298042192*^9, 3.696846298323709*^9}, {3.697355227387436*^9, 
  3.6973552273879633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.696846309988453*^9, 3.697006066807157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes7M", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.696845878364602*^9, 3.696845891156708*^9}, {
  3.696846299965189*^9, 3.696846300182949*^9}, {3.69735522738874*^9, 
  3.697355227389288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.69684630636043*^9, {3.697006081170841*^9, 3.697006089892351*^9}, 
   3.697006871873383*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProPhotoRes5M", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6968458920494843`*^9, 3.6968459015468607`*^9}, {
  3.696846301680973*^9, 3.696846301891829*^9}, {3.6973552273900013`*^9, 
  3.69735522739052*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6968463029197073`*^9, 3.697006083829154*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveeni VideoModu", "Section",
 CellChangeTimes->{{3.6968463283293953`*^9, 3.69684633980094*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697006235953516*^9, 3.697006243442038*^9}, 
   3.69700811228898*^9, 3.697355227391314*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69700625157483*^9, 3.697006255138254*^9}, {
   3.697006875525577*^9, 3.697006882332864*^9}, 3.697355227392124*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6970068836682653`*^9, 3.6970072224532146`*^9, 
  3.69700811624647*^9, 3.697008840454916*^9, 3.6970148145083237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6970068852679977`*^9, 3.697006888563645*^9}, 
   3.69700884387817*^9, 3.697355227392928*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007094594494*^9, 3.697007101329356*^9}, 
   3.6970088465950203`*^9, 3.697355227393661*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007047113288*^9, 3.697007051465156*^9}, {
   3.6970081349512663`*^9, 3.697008138182952*^9}, 3.6970088479797153`*^9, 
   3.6973552273943443`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007076507882*^9, 3.697007080526546*^9}, {
   3.697008146326054*^9, 3.6970081481927233`*^9}, 3.697008849268691*^9, 
   3.697355227395022*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1440", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697006929261551*^9, 3.6970069360944357`*^9}, {
   3.697008983169221*^9, 3.697009045562709*^9}, 3.697355227395677*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396303*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396935*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes960", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273975573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398222*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoResWVGA", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273995047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FPS", "Section",
 CellChangeTimes->{{3.6970124467080317`*^9, 3.697012446950409*^9}}],

Cell["\<\
FPS vy\[RHacek]e\[SHacek]\[IAcute]me pomoc\[IAcute] asociativn\[IAcute]ch pol\
\[IAcute]. na lev\[EAcute] stran\[EHacek] bude index (hodnota s jakou \
nastavujeme rozliseni videa, viz dalsi tabulka) a na prave strane bude list \
moznych fps pro tento index.\
\>", "Text",
 CellChangeTimes->{{3.6970124511441727`*^9, 3.697012518205467*^9}}],

Cell["\<\
4K - \[OpenCurlyDoubleQuote]06\[CloseCurlyDoubleQuote]
4K 17:9 - \[OpenCurlyDoubleQuote]08\[CloseCurlyDoubleQuote]
2,7K 17:9 - \[OpenCurlyDoubleQuote]07\[CloseCurlyDoubleQuote]
2,7K - \[OpenCurlyDoubleQuote]05\[CloseCurlyDoubleQuote]
1440 - \[OpenCurlyDoubleQuote]04\[CloseCurlyDoubleQuote]
1080 - \[OpenCurlyDoubleQuote]03\[CloseCurlyDoubleQuote]
1080SV - \[OpenCurlyDoubleQuote]09\[CloseCurlyDoubleQuote]
960 - \[OpenCurlyDoubleQuote]02\[CloseCurlyDoubleQuote]
720 - \[OpenCurlyDoubleQuote]01\[CloseCurlyDoubleQuote]
720SV - \[OpenCurlyDoubleQuote]0a\[CloseCurlyDoubleQuote]
WVGA - \[OpenCurlyDoubleQuote]00\[CloseCurlyDoubleQuote]

a tabulka FPS -> k\[OAcute]d
12 - 00
15 - 01
12p5 - 0b
24 - 02
25 - 03
30 - 04
48 - 05
50 - 06
60 - 07
100 - 08

00 - 12
01 - 15
0b - 12p5
02 - 24
03 - 25
04 - 30
05 - 48
06 - 50
07 - 60
08 - 100
09- 120
0a - 240
\
\>", "Text",
 CellChangeTimes->{{3.6970125262215014`*^9, 3.697012543205099*^9}, {
  3.697012724471985*^9, 3.6970127278501873`*^9}, {3.697013931575755*^9, 
  3.697013971781623*^9}, {3.69701404057907*^9, 3.6970140507158537`*^9}, {
  3.6970141262833023`*^9, 3.697014127452765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PossibleFPS", "[", "]"}], ":=", 
  RowBox[{"fpsPossible", "\[LeftDoubleBracket]", 
   RowBox[{"\"\<0\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"BaseForm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"goProGetStatus", "[", 
           RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}],
         "]"}], "]"}], ",", "1"}], "]"}]}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.697013646914556*^9, 3.6970137060800457`*^9}, {
   3.697014682889743*^9, 3.697014683665407*^9}, 3.6973552267619143`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeFPS", "[", "f_String", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.697014426610972*^9, 3.697014444639955*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fpsToCode", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<00\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<01\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<12p5\>\"", "\[Rule]", "\"\<0b\>\""}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<24\>\"", "\[Rule]", "\"\<02\>\""}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<25\>\"", "\[Rule]", "\"\<03\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<30\>\"", "\[Rule]", "\"\<04\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<48\>\"", "\[Rule]", "\"\<05\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<50\>\"", "\[Rule]", "\"\<06\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<60\>\"", "\[Rule]", "\"\<07\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<100\>\"", "\[Rule]", "\"\<08\>\""}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{3.697014324655643*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fpsPossible", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<00\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<240\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<01\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<60\>\"", ",", "\"\<120\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<0a\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<100\>\"", ",", "\"\<60\>\"", ",", "\"\<48\>\""}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<02\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<100\>\"", ",", "\"\<60\>\"", ",", "\"\<48\>\""}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<03\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<60\>\"", ",", "\"\<48\>\"", ",", "\"\<30\>\"", ",", 
        "\"\<24\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<09\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<60\>\"", ",", "\"\<48\>\"", ",", "\"\<30\>\"", ",", 
        "\"\<24\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<04\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<48\>\"", ",", "\"\<30\>\"", ",", "\"\<24\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<05\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<30\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<07\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<24\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<06\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<15\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<08\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<12\>\"", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697012738423359*^9, 3.6970127639517717`*^9}, {
  3.6970129386375427`*^9, 3.697013242321691*^9}, {3.697014200584042*^9, 
  3.697014326855414*^9}, {3.697014676540429*^9, 3.6970146774388943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{"\"\<0\>\"", "<>", 
   RowBox[{"StringTake", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"BaseForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"goProGetStatus", "[", 
          RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}], 
       "]"}], "]"}], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697013304859975*^9, 3.697013316442327*^9}, {
   3.697013396253469*^9, 3.6970135025087748`*^9}, {3.6970135929696836`*^9, 
   3.697013597433796*^9}, 3.697355226784049*^9}],

Cell[BoxData["\<\"0a\"\>"], "Output",
 CellChangeTimes->{{3.69701332071004*^9, 3.697013352688059*^9}, {
  3.697013405014707*^9, 3.697013459833313*^9}, {3.697013503034297*^9, 
  3.6970135187730427`*^9}, {3.697013598601871*^9, 3.697013630142242*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.697013530190452*^9, 3.697355226792193*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.697013530746654*^9, 3.697013752665345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PossibleFPS", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697013710258058*^9, 3.69701371260804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"48\"\>", ",", "\<\"30\"\>", 
   ",", "\<\"24\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697013713131855*^9, {3.6970137546507587`*^9, 3.697013841921598*^9}, 
   3.697014689176331*^9, 3.697014826258122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226796034*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697014828679599*^9, 3.6970148337929773`*^9}, {
   3.6970149876822557`*^9, 3.697014990609029*^9}, 3.6973552267979307`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"48\"\>", ",", "\<\"30\"\>", 
   ",", "\<\"24\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.697014991342669*^9, 3.6970156377507563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleFPS", "[", "]"}], "\[LeftDoubleBracket]", "4", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697014993029011*^9, 3.697015020168758*^9}, {
  3.697355226800765*^9, 3.697355226801764*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970150098193617`*^9, 3.69701502102811*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<60\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697015029776887*^9, 3.69701505701112*^9}, 
   3.69735522681104*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 7}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 7}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 7}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 7}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970150339346523`*^9, 3.697015057457737*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orientation", "Subsection",
 CellChangeTimes->{{3.6970156972163897`*^9, 3.69701569876427*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226819454*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetOrientationUp", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6970157078041697`*^9, 3.697015718360355*^9}, 
   3.6973552268208513`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697015711129616*^9, 3.697015719374107*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FieldOfView", "Subsection",
 CellChangeTimes->{{3.6970158199445143`*^9, 3.697015823126854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fovToCode", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<wide\>\"", "\[Rule]", "\"\<00\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<medium\>\"", "\[Rule]", "\"\<01\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<narrow\>\"", "\[Rule]", "\"\<02\>\""}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697015828455617*^9, 3.697015912705552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fovPossible", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<00\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<01\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<narrow\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<0a\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<02\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<03\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\"", ",", "\"\<narrow\>\""}],
        "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<09\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<04\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<05\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<07\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<wide\>\"", ",", "\"\<medium\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<06\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<08\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<wide\>\"", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6970159153758383`*^9, 3.6970159561993427`*^9}, {
  3.697016016453101*^9, 3.697016138854274*^9}, {3.697016172423712*^9, 
  3.697016193376082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFovPossible", "[", "]"}], ":=", 
  RowBox[{"fovPossible", "\[LeftDoubleBracket]", 
   RowBox[{"\"\<0\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"BaseForm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"goProGetStatus", "[", 
           RowBox[{"\"\<camera\>\"", ",", "\"\<vv\>\""}], "]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}],
         "]"}], "]"}], ",", "1"}], "]"}]}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.697016237379881*^9, 3.697016260243245*^9}, 
   3.69735522683214*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getFovPossible", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697016262490415*^9, 3.697016264247119*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wide\"\>", ",", "\<\"medium\"\>", ",", "\<\"narrow\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697016264684701*^9, 3.6970162767779922`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.697355226834444*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFOV", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6970167101284847`*^9, 3.697016715752756*^9}, 
   3.6973552268360653`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wide\"\>", ",", "\<\"medium\"\>", ",", "\<\"narrow\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697016716381311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFOV", "[", "\"\<medium\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697016717962492*^9, 3.697016764147241*^9}, {
   3.6970168283282547`*^9, 3.6970168342894373`*^9}, 3.697355226838171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697016733930933*^9, 3.697016770457183*^9}, {
  3.6970168259322243`*^9, 3.697016835102421*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["TIME LAPSE time", "Subsubsection",
 CellChangeTimes->{{3.6970169264278917`*^9, 3.697016930264762*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697016933758521*^9, 3.697016967909162*^9}, {
   3.697017031461629*^9, 3.697017041237356*^9}, {3.6970175593809967`*^9, 
   3.697017566476952*^9}, 3.697355226847085*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetTimeLapse", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleTimeLapse", "[", "]"}], "\[LeftDoubleBracket]", 
   "5", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6970175713822527`*^9, 3.697017638865718*^9}, {
  3.6970176885809317`*^9, 3.697017711935458*^9}, {3.697355226848948*^9, 
  3.697355226849825*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 30}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 30}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 30}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 30}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6970175783951674`*^9, 3.697017604742661*^9}, {
  3.6970176847952337`*^9, 3.6970177124914722`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PN", "Subsubsection",
 CellChangeTimes->{{3.697017735022575*^9, 3.697017735290822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<goProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<pn\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.697017740952365*^9, 3.6970177490868607`*^9}, {
  3.697355226858515*^9, 3.697355226859538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.697017749551409*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video resolution", "Title",
 CellChangeTimes->{{3.697356075411812*^9, 3.697356078782961*^9}}],

Cell[CellGroupData[{

Cell["Nastaveni pomoci funkce goProSetVideoRes[_String]", "Section",
 CellChangeTimes->{{3.697356735792468*^9, 3.697356751021182*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697356186955942*^9, 3.6973561960233173`*^9}, {
  3.697356261223359*^9, 3.697356261514947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossibleVideoRes", "[", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.69735620035425*^9, 3.697356207613982*^9}, {
  3.697356271754592*^9, 3.697356272909443*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\<\"WVGA\"\>"},
      {"\<\"720p\"\>"},
      {"\<\"960p\"\>"},
      {"\<\"1080p\"\>"},
      {"\<\"1440p\"\>"},
      {"\<\"2.7K\"\>"},
      {"\<\"4K\"\>"},
      {"\<\"2.7K-17:9\"\>"},
      {"\<\"4K-17:9\"\>"},
      {"\<\"1080p-SV\"\>"},
      {"\<\"720p-SV\"\>"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6973562081527767`*^9, 3.6973562739597387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoRes", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleVideoRes", "[", "]"}], "\[LeftDoubleBracket]", 
   "11", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697356220297722*^9, 3.697356238320368*^9}, {
  3.697356277884575*^9, 3.697356331522161*^9}, {3.697356569514999*^9, 
  3.697356635475658*^9}, {3.6973566753016853`*^9, 3.697356694454258*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6973562389391317`*^9, 3.6973563321246967`*^9}, {
  3.697356573211578*^9, 3.697356636365148*^9}, {3.6973566764078293`*^9, 
  3.697356695041009*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testovani nastaveni VideoModu", "Section",
 CellChangeTimes->{{3.6968463283293953`*^9, 3.69684633980094*^9}, 
   3.6973567551411324`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697006235953516*^9, 3.697006243442038*^9}, 
   3.69700811228898*^9, 3.697355227391314*^9, {3.697356760160336*^9, 
   3.6973567604562817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69700625157483*^9, 3.697006255138254*^9}, {
   3.697006875525577*^9, 3.697006882332864*^9}, 3.697355227392124*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6970068836682653`*^9, 3.6970072224532146`*^9, 
  3.69700811624647*^9, 3.697008840454916*^9, 3.6970148145083237`*^9, 
  3.697356763528138*^9, 3.6973570458960533`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6970068852679977`*^9, 3.697006888563645*^9}, 
   3.69700884387817*^9, 3.697355227392928*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes4K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007094594494*^9, 3.697007101329356*^9}, 
   3.6970088465950203`*^9, 3.697355227393661*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007047113288*^9, 3.697007051465156*^9}, {
   3.6970081349512663`*^9, 3.697008138182952*^9}, 3.6970088479797153`*^9, 
   3.6973552273943443`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes2point7K17to9", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697007076507882*^9, 3.697007080526546*^9}, {
   3.697008146326054*^9, 3.6970081481927233`*^9}, 3.697008849268691*^9, 
   3.697355227395022*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1440", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.697006929261551*^9, 3.6970069360944357`*^9}, {
   3.697008983169221*^9, 3.697009045562709*^9}, 3.697355227395677*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396303*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes1080SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227396935*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes960", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273975573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398222*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoRes720SV", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.697355227398849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProVideoResWVGA", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6973552273995047`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PhotoResolution", "Title",
 CellChangeTimes->{{3.6973576721183643`*^9, 3.6973576759065847`*^9}}],

Cell[CellGroupData[{

Cell["Nastaveni pomoci funkce goProSetPhotoRes[_String]", "Section",
 CellChangeTimes->{{3.697356735792468*^9, 3.697356751021182*^9}, {
  3.6973576878224287`*^9, 3.697357688426689*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697356186955942*^9, 3.6973561960233173`*^9}, {
  3.697356261223359*^9, 3.697356261514947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.69735620035425*^9, 3.697356207613982*^9}, {
  3.697356271754592*^9, 3.697356272909443*^9}, {3.697357700076807*^9, 
  3.6973577025415287`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\<\"5M\"\>"},
      {"\<\"7W\"\>"},
      {"\<\"12W\"\>"},
      {"\<\"7M\"\>"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.697357703072138*^9, 3.697357727230448*^9}, 
   3.697357801042569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetPhotoRes", "[", 
  RowBox[{
   RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697356220297722*^9, 3.697356238320368*^9}, {
  3.697356277884575*^9, 3.697356331522161*^9}, {3.697356569514999*^9, 
  3.697356635475658*^9}, {3.6973566753016853`*^9, 3.697356694454258*^9}, {
  3.697357747591146*^9, 3.697357809299756*^9}, {3.697357877043523*^9, 
  3.697357896635682*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 3}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6973562389391317`*^9, 3.6973563321246967`*^9}, {
  3.697356573211578*^9, 3.697356636365148*^9}, {3.6973566764078293`*^9, 
  3.697356695041009*^9}, {3.697357753079299*^9, 3.697357809766149*^9}, {
  3.6973578796917667`*^9, 3.697357897420589*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Burst Rate", "Title",
 CellChangeTimes->{{3.697469320622485*^9, 3.697469323376687*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697469329098851*^9, 3.697469330339617*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleBurstRate", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6974693326344757`*^9, 3.697469340117882*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"3/1\"\>", ",", "\<\"10/1\"\>", ",", "\<\"10/2\"\>", 
   ",", "\<\"30/1\"\>", ",", "\<\"30/2\"\>", ",", "\<\"30/3\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697469340651951*^9, 3.697469443504343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetPhotoRes", "[", "\"\<12W\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetBurstRate", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleBurstRate", "[", "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697469349916401*^9, 3.69746942566118*^9}, {
  3.6974694929235773`*^9, 3.6974695146456327`*^9}, {3.697469587351048*^9, 
  3.69746958767795*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 5}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 5}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 5}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 5}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6974693700935383`*^9, 3.6974694453174667`*^9}, {
   3.6974695029500227`*^9, 3.6974695152781277`*^9}, 3.697469588736002*^9, 
   3.697469620837718*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6974693700935383`*^9, 3.6974694453174667`*^9}, {
   3.6974695029500227`*^9, 3.6974695152781277`*^9}, 3.697469588736002*^9, 
   3.697469620940666*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video Loop", "Title",
 CellChangeTimes->{{3.697470353809037*^9, 3.697470355766893*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoLoop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69747036426371*^9, 3.6974703734509993`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"5\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"60\"\>", ",", "\<\"120\"\>", ",", "\<\"max\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.697470374803762*^9, 3.697470422859261*^9, 
  3.697470619698443*^9, 3.697474935052743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";", 
    RowBox[{"goProSetVideoLoop", "[", 
     RowBox[{
      RowBox[{"goProGetPossibleVideoLoop", "[", "]"}], "\[LeftDoubleBracket]",
       "1", "\[RightDoubleBracket]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6974704247687902`*^9, 3.6974704546049557`*^9}, {
  3.6974706141236677`*^9, 3.697470656591551*^9}, {3.697471211395296*^9, 
  3.697471245010453*^9}, {3.697471280249206*^9, 3.697471292438448*^9}, {
  3.6974749559679537`*^9, 3.697474971433509*^9}, {3.6974756935457172`*^9, 
  3.697475701446986*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697470455172998*^9, 3.6974704721441917`*^9}, {
  3.697470621878211*^9, 3.697470657072391*^9}, {3.697471193827248*^9, 
  3.697471245943144*^9}, {3.697471278509449*^9, 3.697471325157961*^9}, {
  3.697474936479786*^9, 3.697474972020163*^9}, {3.697475573246646*^9, 
  3.6974755862387247`*^9}, {3.697475690105216*^9, 3.697475702062602*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Settings report", "Title",
 CellChangeTimes->{{3.697359127936228*^9, 3.697359130179969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6973593140739803`*^9, 3.69735931425281*^9}, 
   3.6973615049154043`*^9, 3.697614418922736*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Photo mode\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639757907*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639838032*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639864401*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639889619*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 5s\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639916353*^9}}],

Cell[BoxData["\<\"Burst Rate: 3/1s\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614639942897*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.697361515612673*^9, 3.697361533247905*^9}, {
   3.69736157628579*^9, 3.69736158898313*^9}, {3.697361620618505*^9, 
   3.697361627779564*^9}, 3.697361661746011*^9, {3.697361802715332*^9, 
   3.697361830586278*^9}, 3.697361895250811*^9, 3.697361940657484*^9, {
   3.697362000140663*^9, 3.6973620484314632`*^9}, {3.697362099397138*^9, 
   3.697362104620577*^9}, {3.6973621582093782`*^9, 3.697362178973709*^9}, {
   3.697362678951021*^9, 3.697362726414592*^9}, {3.697362778049651*^9, 
   3.6973628656250257`*^9}, 3.697363022870194*^9, {3.6973631634058867`*^9, 
   3.6973632094546824`*^9}, 3.6974678951205807`*^9, 3.697614293473551*^9, 
   3.697614330913279*^9, {3.6976143942439117`*^9, 3.6976144959892693`*^9}, {
   3.6976145493819427`*^9, 3.69761456344841*^9}, {3.6976146078661423`*^9, 
   3.697614640017276*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save settings", "Section",
 CellChangeTimes->{{3.697467698980185*^9, 3.697467700964119*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}]], "Input",\

 CellChangeTimes->{{3.697468037042981*^9, 3.697468046003235*^9}, {
  3.697468155493465*^9, 3.697468163830462*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6974681522253933`*^9, 3.697468164265057*^9}, 
   3.697614712951634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", "\"\<pom.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6974677028704653`*^9, 3.697467703690281*^9}, {
  3.6974677362906733`*^9, 3.697467742402629*^9}, {3.697468034918632*^9, 
  3.697468056239099*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6974677124869204`*^9, 3.6974677461212597`*^9}, {
   3.697467860159663*^9, 3.697467867722865*^9}, 3.697467930435005*^9, {
   3.697468057620851*^9, 3.697468078217133*^9}, 3.6974681720240803`*^9, 
   3.697468257860017*^9, {3.697614715454877*^9, 3.6976147707985487`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download files", "Title",
 CellChangeTimes->{{3.697614909562097*^9, 3.697614911890254*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"StringTrim", "[", 
     RowBox[{"StringDrop", "[", 
      RowBox[{"str", ",", "13"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"odstranim", " ", "hlavicku"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", "s", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
    " ", "mohl", " ", "dobre", " ", "cist"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lst", "=", 
    RowBox[{"ReadList", "[", "imp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"it", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"it", "\[LessEqual]", 
    RowBox[{"Length", "[", "lst", "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{"mam", " ", "v", " ", "listu", " ", "nazvy"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pom", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
          "lst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{
              "lst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
              "]"}], ",", "\"\< \>\""}], "]"}], "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"(*", 
     RowBox[{
     "odstranim", " ", "bile", " ", "znaky", " ", "z", " ", "2.", " ", "heho",
       " ", "vyskytu", " ", "\"\< \>\"", " ", 
      RowBox[{"(", 
       RowBox[{"vezmu", " ", "zacatek", " ", "toho", " ", "vyskytu"}], 
       ")"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "pom"}], ",", 
      RowBox[{"path", "<>", "pom"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"it", "++"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "imp", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.689580013004821*^9, 3.6895800960878315`*^9}, {
   3.6895801719544992`*^9, 3.6895802208367743`*^9}, {3.6895802617597275`*^9, 
   3.689580375795598*^9}, {3.6895804644217186`*^9, 3.6895804926191845`*^9}, {
   3.6895805351999836`*^9, 3.6895805637613535`*^9}, {3.6895806212125854`*^9, 
   3.689580648019986*^9}, {3.6895806972023396`*^9, 3.6895807471679473`*^9}, {
   3.6895808010457454`*^9, 3.6895808209858556`*^9}, {3.689581212154587*^9, 
   3.6895812136545825`*^9}, {3.6895813052456093`*^9, 3.689581349602466*^9}, {
   3.689581478084359*^9, 3.689581546167142*^9}, {3.6895815764414167`*^9, 
   3.689581671583809*^9}, 3.6895817073885098`*^9, {3.689581758256917*^9, 
   3.68958187256473*^9}, {3.689581908534979*^9, 3.6895819177712827`*^9}, {
   3.6895819665801044`*^9, 3.6895821041472735`*^9}, {3.6895821425495577`*^9, 
   3.6895821488523183`*^9}, {3.68958222211823*^9, 3.6895825259961257`*^9}, {
   3.689582570838338*^9, 3.6895825982455883`*^9}, {3.697614967981986*^9, 
   3.6976149987094183`*^9}, {3.697616514985742*^9, 3.697616515175865*^9}}],

Cell[CellGroupData[{

Cell["Funkce Download", "Subsubsection",
 CellChangeTimes->{{3.697616519320354*^9, 3.697616521943203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "x", "]"}], ",", 
       RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ProgressIndicator", "[", "\[IndentingNewLine]", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"URLDownload", "[", 
       RowBox[{
        RowBox[{"urlBase", "<>", "k"}], ",", 
        RowBox[{"path", "<>", "k"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6976165277085648`*^9, 3.697616537956153*^9}, {
  3.6976166249018173`*^9, 3.6976166631187468`*^9}, {3.697616755015414*^9, 
  3.6976167586444597`*^9}, {3.6976171822077723`*^9, 3.69761718575725*^9}, {
  3.697617218335531*^9, 3.6976172263251677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", 
     RowBox[{"StringTrim", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{"str", ",", "13"}], "]"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"odstranim", " ", "hlavicku"}], ",", " ", 
    RowBox[{
    "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
     " ", "mohl", " ", "dobre", " ", "cist"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"ReadList", "[", "imp", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"lst", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"it", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString", "[", 
   RowBox[{"lst", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "#", "]"}], "&"}], "/@", 
  "lst"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697615078863326*^9, 3.6976151071092157`*^9}, {
  3.697615201766756*^9, 3.697615214235031*^9}, {3.697615384978532*^9, 
  3.697615389319456*^9}, {3.697616163026911*^9, 3.6976161735270443`*^9}, {
  3.697616411305354*^9, 3.697616456667406*^9}, {3.6976165492137413`*^9, 
  3.697616555901857*^9}, {3.697616692523089*^9, 3.6976167095007763`*^9}, {
  3.697617231667749*^9, 3.697617235968601*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.5`", " ", "M", " ", 
    RowBox[{"GOPR1458", ".", "JPG"}]}], ",", 
   RowBox[{"0.8999999999999999`", " ", "M", " ", 
    RowBox[{"GOPR1459", ".", "JPG"}]}], ",", 
   RowBox[{"587", " ", "K", " ", 
    RowBox[{"GOPR1460", ".", "LRV"}]}], ",", 
   RowBox[{"1.`", " ", "M", " ", 
    RowBox[{"GOPR1460", ".", "MP4"}]}], ",", 
   RowBox[{"2.4`", " ", "K", " ", 
    RowBox[{"GOPR1460", ".", "THM"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.697955342889431*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]], ",", 
   ProgressIndicatorBox[Dynamic[
     URLDownload[
      StringJoin[$CellContext`urlBase, $CellContext`k], 
      StringJoin[$CellContext`path, $CellContext`k]]]]}], "}"}]], "Output",
 CellChangeTimes->{3.697955343756564*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", "=", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"lst", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"d", "=", 
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "l"}], ",", 
      RowBox[{"path", "<>", "l"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.697617372710688*^9, 3.697617407820684*^9}}],

Cell[BoxData["\<\"GOPR1458.JPG\"\>"], "Output",
 CellChangeTimes->{3.697617408402891*^9}],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"/home/cukr/workspace/GoProController/GoProController/download/GOPR1458.\
JPG\""},
   "FileArgument"], "]"}]], "Output",
 CellChangeTimes->{3.6976174117722893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"urlBase", "=", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"zaklad", " ", "url", " ", "na", " ", "gopro"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", "=", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\""}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "cesta", " ", "do", " ", "slozky", " ", "kam", " ", "chc", " ", "ulozit"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"str", "=", 
    RowBox[{
    "Import", "[", "\"\<http://10.5.5.9:8080/DCIM/100GOPRO/\>\"", "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "obsah", " ", "slozky", " ", "jako", " ", "string"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "=", 
    RowBox[{"StringToStream", "[", 
     RowBox[{"StringTrim", "[", 
      RowBox[{"StringDrop", "[", 
       RowBox[{"str", ",", "13"}], "]"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"odstranim", " ", "hlavicku"}], ",", " ", 
    RowBox[{
    "udelam", " ", "z", " ", "toho", " ", "stream", " ", "abyhc", " ", "to", 
     " ", "mohl", " ", "dobre", " ", "cist"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lst", "=", 
    RowBox[{"ReadList", "[", "imp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nactu", " ", "do", " ", "listu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"lst", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "list", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"list", ",", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", "lst"}], ",", 
     RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"list", "=", 
  RowBox[{
  "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "Input",\

 CellChangeTimes->{{3.697617816412204*^9, 3.697617975619792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"GOPR1458.JPG\"\>", ",", "\<\"GOPR1459.JPG\"\>", 
    ",", "\<\"GOPR1460.LRV\"\>", ",", "\<\"GOPR1460.MP4\"\>", 
    ",", "\<\"GOPR1460.THM\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.697617888151312*^9, 3.697617977432745*^9}, 
   3.6976189801691217`*^9, 3.6976204046193666`*^9, 3.697621096278702*^9, 
   3.69795536918902*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR1458.JPG\"\>", ",", "\<\"GOPR1459.JPG\"\>", 
   ",", "\<\"GOPR1460.LRV\"\>", ",", "\<\"GOPR1460.MP4\"\>", 
   ",", "\<\"GOPR1460.THM\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.697617888151312*^9, 3.697617977432745*^9}, 
   3.6976189801691217`*^9, 3.6976204046193666`*^9, 3.697621096278702*^9, 
   3.697955369191803*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"progress", "=", " ", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"progFunction", "[", 
   RowBox[{"_", ",", " ", "\"\<progress\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dlnow_", ",", " ", "dltotal_", ",", " ", "_", ",", " ", "_"}], 
     "}"}]}], "]"}], ":=", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{"progress", " ", "=", " ", 
    RowBox[{"dlnow", "/", "dltotal"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downloadFileAsynchronous", "[", "file_String", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"URLSaveAsynchronous", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "file"}], ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\"", "<>",
        "file"}], ",", "progFunction", ",", 
      RowBox[{"\"\<Progress\>\"", "\[Rule]", "True"}]}], "]"}], ";"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downloadAsynchronous", "[", "files_List", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Dynamic", "[", 
     RowBox[{"ProgressIndicator", "[", "progress", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"progress", "=", "0"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"ProgressIndicator", "[", "progress", "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"downloadFileAsynchronous", "[", "#", "]"}], "&"}], "/@", 
     "files"}], ";"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.697618469826847*^9, 3.697618470012429*^9}, {
   3.697618874256036*^9, 3.6976189261723623`*^9}, 3.69761899722955*^9, {
   3.697619293432864*^9, 3.6976192972539253`*^9}, {3.6976193373399553`*^9, 
   3.697619339929977*^9}, {3.6976196391524563`*^9, 3.6976196612501574`*^9}, {
   3.6976196930252934`*^9, 3.697619707349059*^9}, {3.697619739846047*^9, 
   3.697619753828759*^9}, {3.697622513998811*^9, 3.697622601204815*^9}, {
   3.697622945100017*^9, 3.697622947871951*^9}, {3.697623006664158*^9, 
   3.697623016520385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"downloadAsynchronous", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.697621351018344*^9, 3.6976213593730173`*^9}, {
  3.697621389395306*^9, 3.6976213930083237`*^9}, {3.697621533468597*^9, 
  3.697621561453581*^9}, {3.6976216070572968`*^9, 3.697621642726994*^9}, {
  3.697621777856341*^9, 3.6976217835006027`*^9}, {3.69762182046286*^9, 
  3.697621843173169*^9}, {3.6976219880643377`*^9, 3.697622005565456*^9}, {
  3.697622144273675*^9, 3.6976221853456287`*^9}, {3.697622380474576*^9, 
  3.6976224101491327`*^9}, {3.6976224674222717`*^9, 3.6976224860518837`*^9}, {
  3.6976225208410463`*^9, 3.697622525240375*^9}, {3.697622596858107*^9, 
  3.69762259742378*^9}, {3.697622951100071*^9, 3.6976229517801447`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ProgressIndicator[$CellContext`progress], StandardForm],
  ImageSizeCache->{217., {3., 10.}}]], "Print",
 CellChangeTimes->{{3.6976213598625917`*^9, 3.6976214004523087`*^9}, {
   3.6976215441596813`*^9, 3.697621562018483*^9}, {3.6976216177877893`*^9, 
   3.6976216898970823`*^9}, {3.697621795531124*^9, 3.697621852556899*^9}, {
   3.6976219158162746`*^9, 3.6976219327584877`*^9}, 3.69762202693576*^9, 
   3.6976221485452213`*^9, 3.697622185867968*^9, {3.697622392508161*^9, 
   3.69762241089602*^9}, 3.697622477094968*^9, {3.697622580478759*^9, 
   3.697622605047454*^9}, 3.697622952289036*^9, 3.6976230216148777`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synchronous", "Subsubsection",
 CellChangeTimes->{{3.6976229597314568`*^9, 3.697622961504677*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"downloadSynchronous", "[", "files_List", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"URLDownload", "[", 
     RowBox[{
      RowBox[{"urlBase", "<>", "#"}], ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<download/\>\"", "<>",
        "#"}]}], "]"}], "&"}], "/@", "files"}]}]], "Input",
 CellChangeTimes->{{3.6976229653908978`*^9, 3.6976229869709682`*^9}, {
  3.6976230303983088`*^9, 3.697623120050366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"downloadSynchronous", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.697623061135906*^9, 3.697623066707377*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.697623071345845*^9, 3.69762309257238*^9}, 
   3.6976231857149477`*^9, 3.697955396285831*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options[]", "Section",
 CellChangeTimes->{{3.69788569561119*^9, 3.697885701288989*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"goProSetPhotoRes", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.697885722742153*^9, 3.69788574447011*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.697885745206327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "f", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697885886626219*^9, 3.697885901121087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6978859017303257`*^9, 3.6991680822174797`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"OptionValue", "[", "a", "]"}], ",", 
    RowBox[{"OptionValue", "[", "b", "]"}], ",", 
    RowBox[{"OptionValue", "[", "c", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697885913509769*^9, 3.697885917069759*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "]"}]], "Input",
 CellChangeTimes->{{3.697885926177229*^9, 3.697885931140686*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Input",
 CellChangeTimes->{{3.6979544159698877`*^9, 3.69795441597536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Options", "[", "setRes", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"res", "->", "\"\<12W\>\""}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setRes", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"OptionValue", "[", "res", "]"}]}]}], "Input",
 CellChangeTimes->{{3.697886070908401*^9, 3.697886070928966*^9}, {
  3.697886109861753*^9, 3.6978862803057623`*^9}, {3.697886311694378*^9, 
  3.6978863177901373`*^9}, {3.697886420770733*^9, 3.697886428868058*^9}, {
  3.697886587758205*^9, 3.697886588582749*^9}, {3.6978867604237833`*^9, 
  3.69788677952631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"res", "\[Rule]", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697886188506*^9, 3.697886318502578*^9, {3.69788641581968*^9, 
   3.697886430226973*^9}, {3.6978867631440973`*^9, 3.697886779990518*^9}, 
   3.6991680903128967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setRes", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"setRes", "[", "\"\<2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"setRes", "[", 
  RowBox[{"res", "->", "\"\<3\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6978863261656313`*^9, 3.697886327992311*^9}, {
  3.697886818532737*^9, 3.697886832303996*^9}}],

Cell[BoxData["\<\"12W\"\>"], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.6991680917533484`*^9}],

Cell[BoxData[
 RowBox[{"setRes", "[", "\<\"2\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.699168091756619*^9}],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{
  3.6978863283827744`*^9, 3.69788643200249*^9, {3.6978867661607323`*^9, 
   3.697886781817954*^9}, 3.697886833863193*^9, 3.699168091758668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setRes", "[", 
  RowBox[{"res", "->", "\"\<1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.69788634573029*^9, 3.697886350647217*^9}, {
  3.6978865812111197`*^9, 3.697886582366343*^9}}],

Cell[BoxData["\<\"1\"\>"], "Output",
 CellChangeTimes->{{3.697886348264846*^9, 3.6978863511066113`*^9}, 
   3.69788643713246*^9, 3.6978865834605837`*^9, 3.699168093725239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Mus\[IAcute]m tedy po pou\[ZHacek]it\[IAcute] Options[] \
pou\[ZHacek]\[IAcute]vat p\[RHacek]i vol\[AAcute]n\[IAcute] funkce \
p\[RHacek]episovac\[IAcute] pravidla ? pokud ano, hodila by se pot\[EAcute] \
funkce jako prost\[RHacek]edn\[IAcute]k, kde pouze z parametru ud\[EHacek]l\
\[AAcute]m p\[RHacek]episovac\[IAcute] pravidlo\
\>", "Subsubsection",
 CellChangeTimes->{{3.697886794804193*^9, 3.6978868169062243`*^9}, {
  3.6978868539853477`*^9, 3.697886882703723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "setGoPro", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
     RowBox[{"photoResolution", "\[Rule]", "\"\<12W\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setGoPro", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"OptionValue", "[", 
   RowBox[{"{", 
    RowBox[{
    "videoResolution", ",", "fps", ",", "fov", ",", "photoResolution"}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6991681933110943`*^9, 3.6991682125028677`*^9}, {
  3.699168251856655*^9, 3.699168310222288*^9}, {3.699168356180513*^9, 
  3.699168376540915*^9}, {3.6991696102447157`*^9, 3.699169643015291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setGoPro", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991683172509527`*^9, 3.6991683295573483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1080p\"\>", ",", "\<\"30\"\>", ",", "\<\"wide\"\>", 
   ",", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991683259405537`*^9, 3.699168330093893*^9}, 
   3.6991683809651403`*^9, 3.6991696460895023`*^9, 3.6991734697437153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setGoPro", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"videoResolution", "\[Rule]", "\"\<720p\>\""}], ",", 
    RowBox[{"fov", "\[Rule]", "\"\<medium\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.699168383697752*^9, 3.6991684001870813`*^9}, {
  3.699168462267645*^9, 3.699168470736784*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"720p\"\>", ",", "\<\"30\"\>", ",", "\<\"medium\"\>", 
   ",", "\<\"12W\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991683942696247`*^9, 3.69916840059866*^9}, 
   3.699168471145378*^9, 3.699173470836327*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "setVideo", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], ",", 
     RowBox[{"fov", "->", "\"\<wide\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setVideo", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProSetVideoRes", "[", 
     RowBox[{
      RowBox[{"OptionValue", "[", 
       RowBox[{"{", "videoResolution", "}"}], "]"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"goProGetPossibleFPS", "[", 
         RowBox[{"OptionValue", "[", "videoResolution", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"goProSetFPS", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"\"\<The FPS value (\>\"", " ", "<>", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"{", "fps", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "<>", 
         "\"\<) is not possible for this video resolution (\>\"", "  ", "<>", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"{", "videoResolution", "}"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<>", 
         "\"\<), FPS was set to the highest value possible (\>\"", "<>", 
         RowBox[{
          RowBox[{"goProGetPossibleFPS", "[", 
           RowBox[{"OptionValue", "[", "videoResolution", "]"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", "<>", 
         "\"\<). If you wish to see which FPS can be used for certain video \
resolution call goProGetPossibleFPS[ \\\"\>\"", "<>", 
         RowBox[{"OptionValue", "[", "videoResolution", "]"}], "<>", " ", 
         "\"\<\\\" ]\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MessageDialog", "[", "s", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetFOV", "[", 
     RowBox[{
      RowBox[{"OptionValue", "[", 
       RowBox[{"{", "fov", "}"}], "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQLalzUm92/2vHVRKTTUB0XeJLVxCdt3i5O4g2NvXz
AdEnlP75g+hvmz9dAtF3Huy6CaK1npvcA9GzhJTvg+iGC1nfQXQyz7pfIDqG
9RvDHCB9umkrB4j+EpQkAKJvrP8tBKL5zr5QAdFXF8uogug3ono6IFrVJ0gX
RDMdMTcH0RLKHNYg2k11bTSIbr4XXgCiz+03KQXRE4SmzAfRdU9/rgbRs8Rc
14HoZz85d4NoO85FF0H0utNZN0C0yvtFt0D0P7OKdyBabKPQH7C5SwKY5wJp
kbMb2EE0y4PX0iBaLc9dDkRXMCgrg+gnYutNQPTdu9vcQfSfHoEgEL1m979Q
EN0kHxkG5rvZ14HojjMHwTQAJdvF8w==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setVideo", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fov", "->", "\"\<medium\>\""}], ",", 
    RowBox[{"videoResolution", "\[Rule]", "\"\<WVGA\>\""}], ",", 
    RowBox[{"fps", "->", "\"\<240\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.69916992656848*^9, 3.6991699558738823`*^9}, {
  3.699171030519643*^9, 3.699171047818219*^9}, {3.699171420112438*^9, 
  3.6991714205628023`*^9}, {3.699173015795197*^9, 3.699173033924542*^9}, {
  3.69917381138995*^9, 3.699173837999132*^9}, {3.6991740807356567`*^9, 
  3.69917408269906*^9}, {3.6991743668222237`*^9, 3.69917437762288*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6991699492183237`*^9, 3.6991699571472197`*^9}, {
   3.699171025305373*^9, 3.699171068189456*^9}, 3.699171288241534*^9, 
   3.6991713571326303`*^9, {3.699171392193779*^9, 3.699171421141376*^9}, {
   3.699171466188788*^9, 3.699171483377433*^9}, 3.699171633847855*^9, 
   3.6991716848397408`*^9, {3.699171776997312*^9, 3.699171804622912*^9}, 
   3.699172303228204*^9, {3.699172360957036*^9, 3.699172408693687*^9}, {
   3.69917245910376*^9, 3.699172515819439*^9}, {3.6991725942994547`*^9, 
   3.699172607494535*^9}, 3.6991727284480963`*^9, {3.699173007746808*^9, 
   3.6991730346055803`*^9}, 3.6991733476193457`*^9, {3.6991733866489553`*^9, 
   3.699173441516417*^9}, 3.6991734743284597`*^9, 3.69917362203692*^9, {
   3.699173707660924*^9, 3.699173740947475*^9}, {3.6991738016910133`*^9, 
   3.699173839051668*^9}, 3.69917403740361*^9, {3.69917406961798*^9, 
   3.699174083204892*^9}, {3.699174367655861*^9, 3.699174392002604*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{3.6991702996636257`*^9}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699170305948897*^9, {3.699170565410605*^9, 3.6991705836428423`*^9}, 
   3.699170658864332*^9, 3.699170739136298*^9, 3.699170943188731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoRes", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699169964683823*^9, 3.69916997929976*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"WVGA\"\>", ",", "\<\"720p\"\>", ",", "\<\"960p\"\>", 
   ",", "\<\"1080p\"\>", ",", "\<\"1440p\"\>", ",", "\<\"2.7K\"\>", 
   ",", "\<\"4K\"\>", ",", "\<\"2.7K-17:9\"\>", ",", "\<\"4K-17:9\"\>", 
   ",", "\<\"1080p-SV\"\>", ",", "\<\"720p-SV\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699170311618853*^9, 3.699170567194045*^9, 
  3.699170741017356*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p-SV\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699170199848762*^9, 3.699170199972224*^9}, {
  3.6991703148758383`*^9, 3.699170352249866*^9}, {3.699170483122623*^9, 
  3.699170525633819*^9}, {3.699170589916439*^9, 3.6991706042507057`*^9}, {
  3.6991706958688393`*^9, 3.699170696589375*^9}, {3.6991707820925293`*^9, 
  3.699170906434462*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"100\"\>", ",", "\<\"60\"\>", ",", "\<\"48\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699170345030863*^9, 3.699170352603821*^9}, {
   3.69917048453664*^9, 3.699170526142064*^9}, {3.6991705689823027`*^9, 
   3.699170605210731*^9}, {3.6991706576026278`*^9, 3.699170660306026*^9}, 
   3.699170697105137*^9, 3.699170742894909*^9, {3.6991707855151367`*^9, 
   3.699170906880525*^9}, 3.6991709452519007`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["pokus z GoProController", "Section",
 CellChangeTimes->{{3.699185046180561*^9, 3.699185052434074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.699186594819323*^9, 3.6991865951421013`*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.6991850563689404`*^9, 3.699185104694501*^9, {3.699186531234977*^9, 
   3.699186533269154*^9}, 3.699186586764834*^9, {3.6991866991854153`*^9, 
   3.6991867193675117`*^9}, 3.6991867851312227`*^9, 3.699186876086485*^9, 
   3.699186908139645*^9, 3.6991871037139177`*^9, {3.6991871403365507`*^9, 
   3.6991871503111343`*^9}, 3.699187445390829*^9, 3.699187765269422*^9, {
   3.6991878019771347`*^9, 3.6991878184102097`*^9}, 3.6991886683766212`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideo", "[", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"videoResolution", "\[Rule]", "\"\<1440p\>\""}], ",", 
    RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6991850585206614`*^9, 3.6991851456159477`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699185093903906*^9, 3.6991851460438633`*^9}, {
   3.6991867658495197`*^9, 3.699186786891767*^9}, 3.699187107951548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "goproSet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
     RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], ",", 
     RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
     RowBox[{"photoResolution", "\[Rule]", "\"\<12W\>\""}], ",", 
     RowBox[{"loopVideo", "\[Rule]", "\"\<off\>\""}], ",", 
     RowBox[{"burstRate", "\[Rule]", "\"\<30/1\>\""}], ",", 
     RowBox[{"timeLapse", "\[Rule]", "\"\<1\>\""}]}], "}"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goproSet", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"goProSetVideo", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"OptionValue", "[", "videoResolution", "]"}], ",", 
        RowBox[{"OptionValue", "[", "fps", "]"}], ",", 
        RowBox[{"OptionValue", "[", "fov", "]"}]}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetPhotoRes", "[", 
     RowBox[{"OptionValue", "[", "photoResolution", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetVideoLoop", "[", 
     RowBox[{"OptionValue", "[", "loopVideo", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetBurstRate", "[", 
     RowBox[{"OptionValue", "[", "burstRate", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"goProSetTimeLapse", "[", 
     RowBox[{"OptionValue", "[", "timeLapse", "]"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.6991865727184772`*^9, 3.699186580465139*^9}, {
  3.699186970110909*^9, 3.699186972786297*^9}, {3.69918718857895*^9, 
  3.6991871914234047`*^9}, {3.699187233241514*^9, 3.699187242185821*^9}, {
  3.699187298486126*^9, 3.699187377539822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"videoResolution", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"fps", "\[Rule]", "\<\"30\"\>"}], ",", 
   RowBox[{"fov", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"photoResolution", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"loopVideo", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"burstRate", "\[Rule]", "\<\"30/1\"\>"}], ",", 
   RowBox[{"timeLapse", "\[Rule]", "\<\"1\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.699187192286847*^9, {3.699187235761916*^9, 3.699187243048287*^9}, {
   3.699187311583599*^9, 3.699187379989695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fps", "\[Rule]", "\"\<48\>\""}], ",", 
    RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
    RowBox[{"fov", "\[Rule]", "\"\<wide\>\""}], ",", 
    RowBox[{"photoResolution", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "\[LeftDoubleBracket]", 
      "3", "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"burstRate", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleBurstRate", "[", "]"}], "\[LeftDoubleBracket]",
       "2", "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"timeLapse", "\[Rule]", "\"\<10\>\""}], ",", 
    RowBox[{"continuousShot", "\[Rule]", "\"\<10\>\""}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699186791618528*^9, 3.699186840667336*^9}, {
   3.699186914638599*^9, 3.699186914917369*^9}, {3.6991869907297573`*^9, 
   3.699187016509549*^9}, {3.699187194319923*^9, 3.69918725321068*^9}, 
   3.6991873464807053`*^9, {3.699187386265781*^9, 3.699187402972789*^9}, {
   3.699187453191566*^9, 3.6991875101407833`*^9}, {3.699187549844254*^9, 
   3.699187647987999*^9}, {3.699187825977099*^9, 3.6991878532767763`*^9}, {
   3.6991878998073807`*^9, 3.699187909844018*^9}, {3.6991886632979918`*^9, 
   3.699188690251481*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699187244801814*^9, 3.699187253902667*^9}, {
   3.699187319378549*^9, 3.699187403841708*^9}, 3.699187448168429*^9, 
   3.699187567996204*^9, {3.699187607967922*^9, 3.699187648629871*^9}, 
   3.699187728270767*^9, 3.699187767211203*^9, {3.699187803785076*^9, 
   3.6991878546249332`*^9}, 3.699187910826499*^9, {3.699188671461973*^9, 
   3.699188692284368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossibleTimeLapse", "[", "]"}], "\[LeftDoubleBracket]", 
  "1", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.699186917507917*^9, 3.699186919309251*^9}, {
  3.699186982148656*^9, 3.6991869831132402`*^9}}],

Cell[BoxData["\<\"0.5\"\>"], "Output",
 CellChangeTimes->{3.6991868490021133`*^9, 3.699186919695945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFOV", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991877138043213`*^9, 3.699187719254065*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"wide\"\>", "}"}]], "Output",
 CellChangeTimes->{3.6991877196985207`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuous Shot", "Section",
 CellChangeTimes->{{3.6991884306321917`*^9, 3.6991884335470657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.699189970514003*^9, 3.699189972741919*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699188435210247*^9, {3.699189971004136*^9, 3.699189973268093*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleContinuousShot", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6991884378481617`*^9, 3.6991884443449783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"3\"\>", ",", "\<\"5\"\>", 
   ",", "\<\"10\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699188445095799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetContinuousShot", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleContinuousShot", "[", "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69918845190932*^9, 3.69918847776427*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6991884636387157`*^9, 3.6991884789033737`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetContinuousShot", "[", "\"\<10\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699188487983705*^9, 3.69918850127575*^9}, {
  3.6991902777207003`*^9, 3.699190284017782*^9}, {3.699190470898263*^9, 
  3.699190475308957*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699190475967224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699189968882291*^9, 3.6991899959543257`*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699190055387722*^9, {3.699190098370315*^9, 3.6991901235987577`*^9}, 
   3.6991901801852417`*^9, 3.699190215631446*^9, {3.699190275565763*^9, 
   3.699190286295226*^9}, {3.69919045908768*^9, 3.699190477047826*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477063225*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477106947*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477135271*^9}}],

Cell[BoxData["\<\"FPS: 48\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477163927*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 10s\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.6991904771913843`*^9}}],

Cell[BoxData["\<\"Burst Rate: 10/1s\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477220634*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477250622*^9}}],

Cell[BoxData["\<\"Continuous Shot: 10\"\>"], "Print",
 CellChangeTimes->{{3.699190098506949*^9, 3.699190123617103*^9}, 
   3.6991901802085123`*^9, 3.699190215653204*^9, {3.699190275582548*^9, 
   3.6991902863070803`*^9}, {3.699190459105239*^9, 3.699190477279551*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6991904128560658`*^9, 3.699190440049466*^9}}],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699190441182372*^9, 3.699190478785379*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Photo in Video ( PN )", "Section",
 CellChangeTimes->{{3.699344927058742*^9, 3.699344932639488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.69934495439948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossiblePhotoInVideo", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6993449576950274`*^9, 3.6993449855891113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"5\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"30\"\>", ",", "\<\"60\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.69934498648743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetPhotoInVideo", "[", 
  RowBox[{
   RowBox[{"goProGetPossiblePhotoInVideo", "[", "]"}], "\[LeftDoubleBracket]",
    "2", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69934499673533*^9, 3.699345041039637*^9}, {
  3.699345115057406*^9, 3.699345150955565*^9}, {3.699345504873361*^9, 
  3.6993455072103662`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6993450210587063`*^9, 3.6993450424884663`*^9}, {
   3.6993451120921392`*^9, 3.699345151657333*^9}, 3.699345220806085*^9, 
   3.6993455079666243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoLoop", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleVideoLoop", "[", "]"}], "\[LeftDoubleBracket]", 
   "2", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.699345164182592*^9, 3.699345204285198*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699345204911995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699345489902584*^9, 3.699345539415716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6993454920044394`*^9, 3.699345498661031*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600631907*^9}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.6993456006995287`*^9}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600726637*^9}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600760426*^9}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600798613*^9}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.69934560084529*^9}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.6993456008476353`*^9}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600849906*^9}],

Cell[BoxData["\<\"Photo in Video interval : 5\"\>"], "Print",
 CellChangeTimes->{{3.699345499514029*^9, 3.699345523129533*^9}, 
   3.699345600884288*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{"photoInVideo", "\[Rule]", "\"\<60\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699345515012656*^9, 3.699345553516135*^9}, {
  3.6993456027107964`*^9, 3.6993456179032593`*^9}, {3.699345662910997*^9, 
  3.6993456795647182`*^9}, {3.6993457574637413`*^9, 3.699345771372744*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 4}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699345521380761*^9, {3.699345567088011*^9, 3.699345610916478*^9}, {
   3.699345648592684*^9, 3.699345664696589*^9}, {3.699345754765263*^9, 
   3.699345772285345*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772343464*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457723771677`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724043837`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724262857`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772451968*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.6993457724716988`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772490439*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772509304*^9}}],

Cell[BoxData["\<\"Photo in Video interval : 60\"\>"], "Print",
 CellChangeTimes->{{3.69934576202474*^9, 3.699345772528079*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volume", "Section",
 CellChangeTimes->{{3.6993462313942833`*^9, 3.699346232552553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.699346246322196*^9, {3.6993463634730473`*^9, 3.699346378300701*^9}, {
   3.699346588763337*^9, 3.699346604944418*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"photoInVideo", "\[Rule]", "\"\<60\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6993462332121067`*^9, 3.699346264961692*^9}, {
  3.699346386142973*^9, 3.699346387030278*^9}, {3.6993464220667963`*^9, 
  3.699346422371827*^9}, {3.699346490295388*^9, 3.699346491550596*^9}, {
  3.6993465278226013`*^9, 3.699346546992317*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699346242900935*^9, 3.699346270356085*^9}, 
   3.699346335736671*^9, {3.6993463734930487`*^9, 3.6993463799601593`*^9}, 
   3.699346421305209*^9, {3.6993464889896393`*^9, 3.699346549986102*^9}, {
   3.6993465854629393`*^9, 3.6993466073745832`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607413958*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.6993466074462137`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607498402*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607523715*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607550845*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607574535*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607614716*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607645445*^9}}],

Cell[BoxData["\<\"Photo in Video interval : 60\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607671245*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699346510325683*^9, 3.699346550010606*^9}, {
  3.699346585500842*^9, 3.699346607694112*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699346242900935*^9, 3.699346270356085*^9}, 
   3.699346335736671*^9, {3.6993463734930487`*^9, 3.6993463799601593`*^9}, 
   3.699346421305209*^9, {3.6993464889896393`*^9, 3.699346549986102*^9}, {
   3.6993465854629393`*^9, 3.699346607998822*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Protune", "Section",
 CellChangeTimes->{{3.699349211746551*^9, 3.699349212457912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699349217629298*^9, 3.6993493468389797`*^9, 
  3.69934945600074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"protune", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"photoInVideo", "\[Rule]", "\"\<off\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6993492262742643`*^9, 3.699349268717458*^9}, {
  3.6993493768246613`*^9, 3.6993493770119247`*^9}, {3.699349461495742*^9, 
  3.6993494627592363`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFVF1IVEEYvXdXs9zN30RBLNN60MIwDCmtHoIMySKLElJiWzR9EM3Eh9QH
lcCHwHyIHiMpiP3RlC0xSddtNf92E9TQ0jTTsvxfldW17TQz967sbhtduHNn
znfufDPnmzlpiuLc7HxFcZ5SEZlSpCjMzVPeiTxbUEQgKc9xXBh9IznaB+mK
TRiGBrpJQPj4sI8vWvrqUW2oQGbrNSTo4iHXyCHT+rI+xWiMcAQ6580+UpjM
BpTrSyib2wlOxRGM/kkxyhB4nJdIp0lO6BIZUSbSU5rPMFxgMLrUiR5cH8SI
ux2zq2V4Z25lDIlAlzgtxjG7v0inYxJlDN6Z7oWqjjJCkiNhchpbgBTkIWnW
l28jSivHEVMdOlfnYbEO4/XIRURoiH7qv/FaQ5ljIVwoy0WXTUXgVDwC9c8w
89uO5cX7yOvJRCZ5M97GIry9DtN2CwbGCpAz1ITvpN/3PgohHnDTwCHo+3WO
9YtZqgyldI/Cqw7EyeE2zNmX0D2ajn10rSpfxH0cx4bNgAuNPDhtLO5ZrLAs
ZOPcJ0/4dTw0VmxnYUXA1ZZLTEkJa2kpfLC3swa9Niu+zeQjrt4fSTM/YbOq
kFhPVxKBm4ursFpqoJz1hFeg9E2Wa5KDjdFiuWgbyISTtRTCaNvA1EQq0mYX
sOU0kZJNVIucOU94Ja68incSix4LoRxUlF2IGe7C55XnSG4gY81+5C+tkaKX
I318AptElPNMlBhUMVFuIXXME56Fww1BbiXxVnuLWSQIMTbhh30RxtEcZJgf
YWhrE18nTyGi7TGm7MvoHbmBy+an+PJrFeaBA9jjEY9GqDbALQu9kduF14Qh
7YMOg9YVrG9OoGeyCEkviI5qPxw1PUHX2jxWrINoJgc1nB1gzzi5Jv8ofDBt
eShaM13j4vFzxB8Yq13j7f065gpBQpxIw9N7y7te2ZL2AsdeuACBWaovZiTe
1Qucds35iafl9Mtk98vtbB3UKlysgxwCh9NI/m9Mx3XH3I1phzgQLY8RfUQ6
LX5lx11n23P3VmVr1l/eSoRlvxG9RG/l+D8Ynl2M\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699349238755086*^9, 3.699349271563321*^9}, {
  3.699349344443302*^9, 3.699349377659905*^9}, {3.6993494580114202`*^9, 
  3.69934946624116*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466291394*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494663423767`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494663444233`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466393236*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466455741*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466458399*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466460704*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466502625*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.699349466504224*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494665375013`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.69934923886969*^9, 3.699349271654407*^9}, {
  3.699349344490869*^9, 3.69934937769799*^9}, {3.699349458285288*^9, 
  3.6993494665390177`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699349238755086*^9, 3.699349271563321*^9}, {
  3.699349344443302*^9, 3.699349377659905*^9}, {3.6993494580114202`*^9, 
  3.699349466791799*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetProtuneOff", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.699349423029768*^9, 3.699349429446686*^9}, {
  3.699349472627623*^9, 3.699349473648736*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699349429960299*^9, 3.699349474249837*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474277195*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474324122*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474355804*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474371656*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474391749*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474410591*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744326477`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744520817`*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474472117*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.6993494744916277`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{
  3.699349365527071*^9, {3.699349429964096*^9, 3.699349474509872*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WhiteBalance (only if protune is on)", "Section",
 CellChangeTimes->{{3.699350175663041*^9, 3.699350182844026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.6993501970812407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetWhiteBalance", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleWhiteBalance", "[", "]"}], "\[LeftDoubleBracket]",
    "2", "\[RightDoubleBracket]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<wb\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"whiteBalance", "\[Rule]", "\"\<CAMRAW\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699350200001835*^9, 3.699350259772942*^9}, {
  3.699350297072147*^9, 3.699350377942184*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.699350438382064*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.6993504384093733`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.69935043900385*^9}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439077815*^9}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504391119137`*^9}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504391376343`*^9}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439157797*^9}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439177906*^9}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439198604*^9}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439263014*^9}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504392646227`*^9}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439265914*^9}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.6993504392813883`*^9}],

Cell[BoxData["\<\"White Balance : CAMRAW\"\>"], "Print",
 CellChangeTimes->{{3.69935021188932*^9, 3.699350261544622*^9}, {
   3.699350304178576*^9, 3.699350379239456*^9}, 3.699350439304984*^9}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699350211816669*^9, 3.699350260896696*^9}, {
   3.699350303476779*^9, 3.6993503785706453`*^9}, 3.699350439596395*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ColorProfile (only if protune is on)", "Section",
 CellChangeTimes->{{3.6995169248710203`*^9, 3.6995169283323812`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.699517033768771*^9, 3.699517175979909*^9, 
  3.699517211939665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleColorProfile", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<co\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"colorProfile", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleColorProfile", "[", "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699517037715707*^9, 3.699517065207621*^9}, {
  3.699517111724737*^9, 3.6995171494678717`*^9}, {3.699517193302883*^9, 
  3.699517193610155*^9}, {3.699517229708706*^9, 3.6995172558254137`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GoPro\"\>", ",", "\<\"Flat\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172572378693`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172572397957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257712701*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257765313*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172577950497`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.69951725782366*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172578482027`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257872324*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257899091*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257929523*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257957306*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257985018*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517257986947*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517258013191*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.6995172580410967`*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{
  3.699517072447545*^9, {3.699517118416903*^9, 3.699517258069168*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699517071659182*^9, {3.6995171179691553`*^9, 3.6995172584279346`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISO (only if protune is on)", "Section",
 CellChangeTimes->{{3.699517800826851*^9, 3.699517804819338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleISO", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<ga\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699517817967478*^9, 3.69951789590238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"6400\"\>", ",", "\<\"1600\"\>", ",", "\<\"400\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.6995178967670927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.699517896769423*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897674025*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897739365*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.69951789777794*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.6995178977996492`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897823287*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.6995178978487473`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897868498*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897888084*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897908723*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897932127*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897933215*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897952737*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897975059*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517897995253*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699517852814026*^9, 3.699517898014963*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699517809898953*^9, {3.699517848019978*^9, 3.699517898347657*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sharpness (Only if protune mode is on)", "Section",
 CellChangeTimes->{{3.699518380283152*^9, 3.699518386654086*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleSharpness", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<sp\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"sharpness", "\[Rule]", 
     RowBox[{
      RowBox[{"goProGetPossibleSharpness", "[", "]"}], "\[LeftDoubleBracket]",
       "1", "\[RightDoubleBracket]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6995183940016336`*^9, 3.699518400116064*^9}, {
  3.699518431781321*^9, 3.699518452614653*^9}, {3.6995185380528183`*^9, 
  3.699518547929109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"high\"\>", ",", "\<\"medium\"\>", ",", "\<\"low\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.699518555279722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.6995185552820597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556151787*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556213073*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185562408857`*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556269418*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185562932863`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185563176107`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556346994*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556367632*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855639048*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855641241*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556413558*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855643557*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556457931*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.69951855648099*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.699518556506028*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699518410959961*^9, 3.699518454185976*^9}, {
  3.6995185428507433`*^9, 3.6995185565287857`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699518405861065*^9, 3.699518453350041*^9}, {
  3.6995185419314337`*^9, 3.699518556887321*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exposure compensation (only if protune is on)", "Section",
 CellChangeTimes->{{3.699519673224903*^9, 3.699519681782826*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleExposure", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], ",", 
    RowBox[{"exposure", "\[Rule]", "\"\<0\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.699519688479948*^9, 3.699519705488521*^9}, {
  3.699519912868785*^9, 3.699519947375533*^9}, {3.699520034774268*^9, 
  3.6995201592208347`*^9}, {3.69952020327215*^9, 3.6995202044709463`*^9}, {
  3.699520300746511*^9, 3.6995203155329638`*^9}, {3.6995203659993563`*^9, 
  3.6995204487955914`*^9}, {3.6995205233724747`*^9, 3.6995205917182302`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0\"\>", ",", "\<\"-2.0\"\>", ",", "\<\"-1.5\"\>", 
   ",", "\<\"-1.0\"\>", ",", "\<\"-0.5\"\>", ",", "\<\"+0.5\"\>", 
   ",", "\<\"+1.0\"\>", ",", "\<\"+1.5\"\>", ",", "\<\"+2.0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699520080409873*^9, 3.699520160750444*^9}, {
  3.699520205776079*^9, 3.699520228904605*^9}, {3.699520290275915*^9, 
  3.699520316014216*^9}, {3.699520368498736*^9, 3.699520478664948*^9}, {
  3.699520530805067*^9, 3.6995205923602552`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593467145*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205935401583`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593569132*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593594652*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593622403*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593649057*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205936712523`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593697557*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937211514`*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593743576*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593745063*^9}}],

Cell[BoxData["\<\"Protune : on\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937736197`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205937945004`*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593832899*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.6995205938934526`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593922247*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699520082393436*^9, 3.699520162653598*^9}, {
  3.699520207792576*^9, 3.699520230874947*^9}, {3.6995202911193657`*^9, 
  3.699520316018077*^9}, {3.6995203694866*^9, 3.699520479875897*^9}, {
  3.699520531829118*^9, 3.699520593945548*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699520080409873*^9, 3.699520160750444*^9}, {
  3.699520205776079*^9, 3.699520228904605*^9}, {3.699520290275915*^9, 
  3.699520316014216*^9}, {3.699520368498736*^9, 3.699520478664948*^9}, {
  3.699520530805067*^9, 3.699520594433867*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Low Light (only for 60+ fps)", "Section",
 CellChangeTimes->{{3.6995213264492283`*^9, 3.6995213334776793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleLowLight", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{
    RowBox[{"fps", "\[Rule]", "\"\<60\>\""}], ",", 
    RowBox[{"protune", "\[Rule]", "\"\<off\>\""}], ",", 
    RowBox[{"lowLight", "\[Rule]", "\"\<off\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699521340330063*^9, 3.699521343645278*^9}, {
  3.69952149712707*^9, 3.699521533553103*^9}, {3.699521618504146*^9, 
  3.6995216371193047`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.69952151200786*^9, 3.699521539149371*^9}, 
   3.699521587407507*^9, {3.6995216191925907`*^9, 3.6995216377254457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521639913291*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521639984317*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216400208282`*^9}}],

Cell[BoxData["\<\"FPS: 60\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640051984*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640083291*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640114458*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216401162233`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640147266*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640178763*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640210122*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640241354*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640243144*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640244832*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640276476*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640309935*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216403513603`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.699521640382711*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.69952151319551*^9, 3.699521540270185*^9}, 
   3.699521588578001*^9, {3.6995216233096952`*^9, 3.6995216404143476`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.69952151200786*^9, 3.699521539149371*^9}, 
   3.699521587407507*^9, {3.6995216191925907`*^9, 3.699521640977798*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProSetLowLightOn", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.69952155235753*^9, 3.69952155650805*^9}, {
  3.699521597204009*^9, 3.6995216099983177`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699521557782969*^9, {3.699521591691165*^9, 3.699521610397429*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610431027*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216104887247`*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610514917*^9}}],

Cell[BoxData["\<\"FPS: 60\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610535355*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.69952161056033*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610581348*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216106027*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610624258*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610646789*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610689*^9}}],

Cell[BoxData["\<\"Low Light : on\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610710102*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610711359*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610750904*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610775014*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610801717*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.6995216108244467`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.69952161084648*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699521598033712*^9, 3.699521610876481*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Led setting", "Section",
 CellChangeTimes->{{3.699524101448728*^9, 3.699524109006528*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.699524119447174*^9, 3.699524123269168*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleLed", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"led", "\[Rule]", 
   RowBox[{
    RowBox[{"goProGetPossibleLed", "[", "]"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699524138042865*^9, 3.699524200375643*^9}, {
  3.6995243095833693`*^9, 3.699524398549811*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"2\"\>", ",", "\<\"4\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524399235004*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524400332327*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400370614*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400421818*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.69952440044858*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244004689703`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400489649*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400510363*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400530032*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244005495768`*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400569656*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400590135*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400613676*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400633772*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400635448*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400666286*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400695928*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400717029*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.6995244007372723`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400780274*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.6995241594759817`*^9, 3.699524201976017*^9}, 
   3.699524245993721*^9, 3.6995242782334423`*^9, {3.699524319815365*^9, 
   3.699524333611699*^9}, {3.699524374897491*^9, 3.699524400803975*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.699524159403702*^9, 3.699524170571463*^9}, 
   3.69952420091298*^9, 3.699524245990466*^9, 3.699524278228911*^9, {
   3.6995243197256203`*^9, 3.6995243335143003`*^9}, {3.699524374447349*^9, 
   3.699524401208995*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SpotMeter", "Section",
 CellChangeTimes->{{3.699524786531625*^9, 3.6995247881956863`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleSpotMeter", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"spotMeter", "\[Rule]", "\"\<off\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.699524833350152*^9, 3.699524898388955*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524899055345*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524901252729*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901305729*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901345014*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901371019*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249013975163`*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014248457`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014477863`*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249014693003`*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901490912*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901513949*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901535533*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249015575113`*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901578905*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249016007023`*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249016026297`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901623848*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901647381*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901677099*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.6995249017018414`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901724205*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699524857212943*^9, 3.699524901746821*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{{3.6995248539842*^9, 3.699524905267201*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AutoPowerOff", "Section",
 CellChangeTimes->{{3.699525448190524*^9, 3.6995254521665583`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"autoPowerOff", "\[Rule]", 
   RowBox[{
    RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}], 
    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetSettingReport", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSaveSettings", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<pom.txt\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6995254626855087`*^9, 3.699525481072968*^9}, {
  3.699525553367457*^9, 3.699525578060307*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"60\"\>", ",", "\<\"120\"\>", 
   ",", "\<\"300\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.6995255789991207`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.699525580668067*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Settings mode\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525580695282*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525580732993*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581022769*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.69952558104506*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581064913*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.69952558108486*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581105748*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581126493*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581146834*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581166573*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581186411*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581450753*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255814713163`*^9}}],

Cell[BoxData["\<\"Auto power off : 60\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581491634*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581493128*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255815160723`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581536209*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581668357*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255816993723`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.699525581726205*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{
  3.699525491106045*^9, {3.699525562241576*^9, 3.6995255817509604`*^9}}]
}, Open  ]],

Cell[BoxData["\<\"/home/cukr/workspace/GoProController/GoProController/pom.\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.699525484602235*^9, {3.699525561324486*^9, 3.699525583208611*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locate", "Section",
 CellChangeTimes->{{3.69952566891082*^9, 3.699525672659054*^9}, {
  3.69952587941296*^9, 3.699525880682334*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProLocate", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699525892255011*^9, 3.699525894620865*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995259004370537`*^9, 3.6995259122322483`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProLocateStop", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699525896755212*^9, 3.699525899271166*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699525906947976*^9, 3.699525919567357*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Video Mode", "Section",
 CellChangeTimes->{{3.699526285979*^9, 3.699526289054864*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699526310214404*^9, 3.699526333328328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NTSC\"\>", ",", "\<\"PAL\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.699526317033915*^9, 3.699526333813703*^9}, 
   3.699526387768828*^9, 3.699526948394416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699526514895501*^9, 3.699526518176239*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699526518749206*^9, 3.6995269509572287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoMode", "->", "\"\<NTSC\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699526390671732*^9, 3.6995263992413683`*^9}, {
  3.6995264297315083`*^9, 3.6995264302636547`*^9}, {3.699526528137321*^9, 
  3.699526529936432*^9}, {3.6995269549843388`*^9, 3.69952704475775*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 10}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 10}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 10}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6995264035928717`*^9, 3.699526457893244*^9}, {
  3.69952648979996*^9, 3.6995265220775423`*^9}, {3.699526952685831*^9, 
  3.699526956974957*^9}, {3.699526988817062*^9, 3.699527047642124*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.69952701407006*^9, 3.699527030692075*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047828307*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047869578*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047898283*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527047945712*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270479681387`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.69952704798906*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048009227*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048031825*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048052545*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048073998*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048094757*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048116939*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270481433897`*^9}}],

Cell[BoxData["\<\"Auto power off : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048163789*^9}}],

Cell[BoxData["\<\"Video Mode : ntsc\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048184429*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048185975*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048310514*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048336135*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.6995270483568077`*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048379787*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048401499*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.699527031167788*^9, 3.699527048422468*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["set TIME", "Section",
 CellChangeTimes->{{3.699789615553743*^9, 3.699789621751474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"goProUrl", "=", "\"\<http://10.5.5.9/\>\""}], ";"}], "\n", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Funkce", " ", "pro", " ", "slozeni", " ", "url", " ", "pro", " ", 
     "ovladani", " ", "kamery"}], ",", 
    RowBox[{"unit", " ", 
     RowBox[{"(", 
      RowBox[{"bacpac", "||", "camera"}], ")"}]}], ",", 
    RowBox[{"command", " ", 
     RowBox[{"(", "prikat", ")"}]}], ",", 
    RowBox[{"parram", " ", 
     RowBox[{"(", 
      RowBox[{"parametr", " ", "prikazu"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProPassword", "=", "\"\<12345678\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"goProMakeCommand", "[", 
    RowBox[{"unit_String", ",", "command_String", ",", "parram_String"}], 
    "]"}], ":=", 
   RowBox[{
   "goProUrl", "<>", "unit", "<>", "\"\</\>\"", "<>", "command", "<>", 
    "\"\<?t=\>\"", "<>", "goProPassword", "<>", "\"\<&p=%\>\"", "<>", 
    "parram"}]}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "spusteni", " ", "prikazu", " ", "exec", " ", "pomoci", " ", "HTTPRequest",
     " ", "a", " ", "URLRead"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"execute", "[", "exec_String", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"request", "=", 
     RowBox[{"HTTPRequest", "[", "exec", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"URLRead", "[", "request", "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.699789783670024*^9, 3.699789794971622*^9}, 
   3.699789828002248*^9, {3.6997928662755823`*^9, 3.699792876815466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<tm\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6997898414010153`*^9, 3.699789863384021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "3", ",", "29", ",", "17", ",", "45", ",", "36"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699789866177536*^9, {3.699791132671795*^9, 3.699791171690527*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"toHex", "[", "\"\<160511164749\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.699789666468536*^9, 3.6997896751076603`*^9}, {
   3.699790009617301*^9, 3.6997900835106287`*^9}, {3.699790114502701*^9, 
   3.699790122393278*^9}, {3.6997901896368647`*^9, 3.69979026181185*^9}, {
   3.699790320478408*^9, 3.699790355613967*^9}, {3.699790415551519*^9, 
   3.699790415754284*^9}, {3.699790472660969*^9, 3.6997905199315042`*^9}, {
   3.699790573592767*^9, 3.699790614096055*^9}, {3.699790675409359*^9, 
   3.6997907138870983`*^9}, {3.699790854527*^9, 3.6997908672702227`*^9}, {
   3.699790902716908*^9, 3.6997910287725554`*^9}, {3.699791109348186*^9, 
   3.6997911126362877`*^9}, {3.699791618152742*^9, 3.699791653090082*^9}, {
   3.69979170620551*^9, 3.699791708621833*^9}, {3.699791776624072*^9, 
   3.699791828954612*^9}, {3.6997923259232893`*^9, 3.699792437032673*^9}, {
   3.699792895291692*^9, 3.699792905522759*^9}, {3.699793009761939*^9, 
   3.6997930122863398`*^9}, 3.699795381806476*^9}],

Cell[BoxData["\<\"10%05%0b%10%2f%31\"\>"], "Output",
 CellChangeTimes->{
  3.699791708987896*^9, {3.699791803538788*^9, 3.6997918246106653`*^9}, {
   3.6997924138172903`*^9, 3.699792437838681*^9}, 3.69979290684503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"execute", "[", 
  RowBox[{"goProMakeCommand", "[", 
   RowBox[{"\"\<camera\>\"", ",", "\"\<TM\>\"", ",", 
    RowBox[{"toHex", "[", "\"\<170328185400\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699792808032131*^9, 3.699792834322542*^9}, {
   3.699794016669457*^9, 3.69979403685295*^9}, {3.69979407752079*^9, 
   3.699794092827507*^9}, 3.6997942248135853`*^9, {3.699795197764646*^9, 
   3.699795221134842*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 17, 3, 28, 18, 54, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "7"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699792837623328*^9, 3.699792847318615*^9}, 
   3.6997928812056293`*^9, 3.6997929117292223`*^9, 3.699794037620941*^9, {
   3.699794093540182*^9, 3.699794101336912*^9}, 3.699794193298046*^9, 
   3.699794225399226*^9, {3.6997951942273417`*^9, 3.699795221608115*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.699794366344791*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "16", ",", "5", ",", "11", ",", "16", ",", "50", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.69979291430558*^9, {3.699794060516569*^9, 3.69979410529524*^9}, 
   3.699794241759344*^9, {3.699794362441916*^9, 3.6997943636351137`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NumberQ", "[", 
    RowBox[{"ToExpression", "[", "\"\<12\>\"", "]"}], "]"}], "||", 
   "False"}]}]], "Input",
 CellChangeTimes->{{3.69979310185215*^9, 3.6997931358146267`*^9}, {
  3.699793167786428*^9, 3.699793181386285*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.699793107913518*^9, 3.699793131291828*^9}, {
  3.69979317098543*^9, 3.699793181848514*^9}}]
}, Open  ]],

Cell[BoxData["List"], "Input",
 CellChangeTimes->{{3.6997933747811737`*^9, 3.699793376667584*^9}}],

Cell[CellGroupData[{

Cell["testovani", "Subsection",
 CellChangeTimes->{{3.6997936057625628`*^9, 3.699793609241968*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetTime", "[", "\"\<170329185700\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetStatus", "[", 
  RowBox[{"\"\<camera\>\"", ",", "\"\<tm\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetTime", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6997945939858437`*^9, 3.699794594197647*^9}, {
  3.699795084646975*^9, 3.699795122230022*^9}, {3.699795411069982*^9, 
  3.699795431480775*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "7"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "7"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 17, 3, 29, 18, 57, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "7"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.699795431984022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "3", ",", "29", ",", "18", ",", "57", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.699795432054008*^9}}],

Cell[BoxData["\<\"2017-3-29 18:57:0\"\>"], "Output",
 CellChangeTimes->{
  3.699794686174816*^9, 3.699794729771183*^9, 3.699795064673752*^9, {
   3.69979510846124*^9, 3.699795122840651*^9}, {3.699795252421183*^9, 
   3.699795253974616*^9}, 3.6997953504856586`*^9, {3.699795388994007*^9, 
   3.6997954320565557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetSettingReport", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6997950548467703`*^9, 3.6997950612741623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Time of camera: 2017-3-29 18:57:1\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954332614107`*^9}}],

Cell[BoxData["\<\"Video mode\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433289074*^9}}],

Cell[BoxData["\<\"Video Resolution: 1080p wide\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433353445*^9}}],

Cell[BoxData["\<\"Photo Resolution: 12W\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433394205*^9}}],

Cell[BoxData["\<\"FPS: 30\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.69979543342925*^9}}],

Cell[BoxData["\<\"TimeLapse Interval: 1s\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954334669437`*^9}}],

Cell[BoxData["\<\"Burst Rate: 30/1s\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433469627*^9}}],

Cell[BoxData["\<\"Video Loop: off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.69979543350744*^9}}],

Cell[BoxData["\<\"Continuous Shot: 1\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433547805*^9}}],

Cell[BoxData["\<\"Photo in Video interval : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433550783*^9}}],

Cell[BoxData["\<\"Volume : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954335917883`*^9}}],

Cell[BoxData["\<\"Led : 4\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433634248*^9}}],

Cell[BoxData["\<\"Low Light : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433636704*^9}}],

Cell[BoxData["\<\"Spot meter : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433679933*^9}}],

Cell[BoxData["\<\"Auto power off : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433683049*^9}}],

Cell[BoxData["\<\"Video Mode : ntsc\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337277*^9}}],

Cell[BoxData["\<\"PROTUNE OPTIONS: \"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337306757`*^9}}],

Cell[BoxData["\<\"Protune : off\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954337336683`*^9}}],

Cell[BoxData["\<\"White Balance : auto\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433777515*^9}}],

Cell[BoxData["\<\"Color Profile : gopro\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433781548*^9}}],

Cell[BoxData["\<\"ISO : 6400\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954338256702`*^9}}],

Cell[BoxData["\<\"Sharpness : high\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.6997954338686943`*^9}}],

Cell[BoxData["\<\"Exposure compensation : 0\"\>"], "Print",
 CellChangeTimes->{{3.6997950618256397`*^9, 3.699795066601157*^9}, 
   3.6997952632305593`*^9, {3.699795418949939*^9, 3.699795433870603*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera models", "Section",
 CellChangeTimes->{{3.699808135891738*^9, 3.6998081394018593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.699809499343492*^9, 3.699809521365219*^9}, {
  3.699887702260591*^9, 3.699887711927844*^9}}],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699808146397258*^9, 3.699808156529563*^9}, {
  3.699808700960235*^9, 3.699808701321145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetModel", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998111021358423`*^9, 3.6998111044527683`*^9}}],

Cell[BoxData["\<\"HERO3+Black\"\>"], "Output",
 CellChangeTimes->{{3.6998111049383163`*^9, 3.699811135706604*^9}, 
   3.699811307137339*^9, 3.6998115668064613`*^9, 3.699811625353513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProPhotoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998113083112917`*^9, 3.6998113113594713`*^9}, {
  3.699811635793186*^9, 3.6998116382276707`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699811319171228*^9, 3.6998115682865477`*^9, 
  3.699811638947267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699811571233445*^9, 3.699811575193572*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699811575760817*^9, {3.699811631114285*^9, 3.699811645209293*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<trol\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699811649103902*^9, 3.699811656748659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6998116601003017`*^9, 3.699811663562777*^9}}],

Cell[BoxData["\<\"Package.m Trol\"\>"], "Output",
 CellChangeTimes->{3.6998116640984917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{"\"\<a\>\"", ",", "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699886753946534*^9, 3.6998867778975058`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6998867786690063`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera Setting", "Section",
 CellChangeTimes->{{3.699887725520308*^9, 3.6998877285153723`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6998906938039417`*^9, 3.699890701121414*^9}, {
  3.69989307199651*^9, 3.699893090346715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699893944178952*^9, 3.6998939547460318`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"120\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699893955046617*^9, 3.6998940058805*^9, 
  3.699894075766137*^9, 3.699894137698369*^9, 3.699894269085413*^9, 
  3.699894440531294*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProSet", "[", 
   RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"fps", "\[Rule]", "\"\<60\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6998935861094847`*^9, 3.699893624955895*^9}, {
  3.69989370492913*^9, 3.699893711273871*^9}, {3.699893916055994*^9, 
  3.699893928365795*^9}, {3.699893961432919*^9, 3.699893962545414*^9}, {
  3.699894144506607*^9, 3.69989416161355*^9}, {3.699894563796588*^9, 
  3.699894581046294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVideoMode", "[", "\"\<NTSC\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699895372263206*^9, 3.699895404925634*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFVF1IVEEYvXdXs9zN30RBLNN60MIwDCmtHoIMySKLElJiWzR9EM3Eh9QH
lcCHwHyIHiMpiP3RlC0xSddtNf92E9TQ0jTTsvxfldW17TQz967sbhtduHNn
znfufDPnmzlpiuLc7HxFcZ5SEZlSpCjMzVPeiTxbUEQgKc9xXBh9IznaB+mK
TRiGBrpJQPj4sI8vWvrqUW2oQGbrNSTo4iHXyCHT+rI+xWiMcAQ6580+UpjM
BpTrSyib2wlOxRGM/kkxyhB4nJdIp0lO6BIZUSbSU5rPMFxgMLrUiR5cH8SI
ux2zq2V4Z25lDIlAlzgtxjG7v0inYxJlDN6Z7oWqjjJCkiNhchpbgBTkIWnW
l28jSivHEVMdOlfnYbEO4/XIRURoiH7qv/FaQ5ljIVwoy0WXTUXgVDwC9c8w
89uO5cX7yOvJRCZ5M97GIry9DtN2CwbGCpAz1ITvpN/3PgohHnDTwCHo+3WO
9YtZqgyldI/Cqw7EyeE2zNmX0D2ajn10rSpfxH0cx4bNgAuNPDhtLO5ZrLAs
ZOPcJ0/4dTw0VmxnYUXA1ZZLTEkJa2kpfLC3swa9Niu+zeQjrt4fSTM/YbOq
kFhPVxKBm4ursFpqoJz1hFeg9E2Wa5KDjdFiuWgbyISTtRTCaNvA1EQq0mYX
sOU0kZJNVIucOU94Ja68incSix4LoRxUlF2IGe7C55XnSG4gY81+5C+tkaKX
I318AptElPNMlBhUMVFuIXXME56Fww1BbiXxVnuLWSQIMTbhh30RxtEcZJgf
YWhrE18nTyGi7TGm7MvoHbmBy+an+PJrFeaBA9jjEY9GqDbALQu9kduF14Qh
7YMOg9YVrG9OoGeyCEkviI5qPxw1PUHX2jxWrINoJgc1nB1gzzi5Jv8ofDBt
eShaM13j4vFzxB8Yq13j7f065gpBQpxIw9N7y7te2ZL2AsdeuACBWaovZiTe
1Qucds35iafl9Mtk98vtbB3UKlysgxwCh9NI/m9Mx3XH3I1phzgQLY8RfUQ6
LX5lx11n23P3VmVr1l/eSoRlvxG9RG/l+D8Ynl2M\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699895380204845*^9, 3.699895406474205*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699894211032744*^9, 3.699894221567127*^9}, {
  3.6998945485354013`*^9, 3.6998945624116993`*^9}}],

Cell[BoxData["goProSetVideoMode"], "Input",
 CellChangeTimes->{{3.6998949021797123`*^9, 3.699894907387094*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699894167489386*^9, 3.6998941687430964`*^9}}],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699894170159687*^9, 3.69989417164027*^9}, {
  3.699895278337727*^9, 3.6998952949450274`*^9}, {3.699895345659672*^9, 
  3.699895351671404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetVolume", "[", "\"\<70\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6998953195298557`*^9, 3.699895326040388*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 1}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 1}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 1}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6998953272768793`*^9, 3.699895363569295*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<30\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699894028755055*^9, 3.699894033863537*^9}, {
  3.6998940855633173`*^9, 3.6998940890607862`*^9}, {3.699894187585019*^9, 
  3.699894193379386*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 4}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 4}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 4}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699894035267136*^9, 3.69989405354007*^9}, {
  3.699894089712721*^9, 3.699894091801381*^9}, {3.699894193937621*^9, 
  3.699894202224024*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699893968722939*^9, 3.6998939693449497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"fps", "\[Rule]", "\"\<30\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699893900197876*^9, 3.699893938704487*^9}}],

Cell[BoxData["\<\"SET FPS\"\>"], "Print",
 CellChangeTimes->{{3.699893902011519*^9, 3.699893939803008*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoMode", "[", "]"}]], "Input",
 CellChangeTimes->{{3.699893442078274*^9, 3.6998934471851797`*^9}, {
  3.699893495369256*^9, 3.69989349776917*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NTSC\"\>", ",", "\<\"PAL\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.699893498156619*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"fov", "->", "\"\<medium\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.69988787390313*^9, 3.699887912778419*^9}, 
   3.699887956727477*^9, 3.6998881192777853`*^9, {3.699891218926284*^9, 
   3.699891231288555*^9}, {3.699891495552387*^9, 3.6998917023480253`*^9}, {
   3.699892360499572*^9, 3.6998924859019327`*^9}, {3.699892582843521*^9, 
   3.699892596330669*^9}, {3.6998929709243402`*^9, 3.699892975455976*^9}, {
   3.699893018409686*^9, 3.699893045153337*^9}, {3.699893430057328*^9, 
   3.699893454936108*^9}}],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoMode", "\[Rule]", "\"\<PAL\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699893464102614*^9, 3.699893500598839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["pokusy", "Section",
 CellChangeTimes->{{3.701698570292899*^9, 3.701698577414014*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.701698698706923*^9, 3.701698704539002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<Hero3+Black\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProInit", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.701698717289761*^9, 3.7016987272659903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossibleFPS", "[", "\"\<720p\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetFPS", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleFPS", "[", "\"\<WVGA\>\"", "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.701698731146408*^9, 3.7016987582336082`*^9}, {
  3.70169879625215*^9, 3.701698866110104*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"120\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.701698761193748*^9, 3.701698866396761*^9}}],

Cell[BoxData["\<\"http://10.5.5.9/camera/FS?t=12345678&p=%0a\"\>"], "Output",
 CellChangeTimes->{{3.701698761193748*^9, 3.701698866400415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleISO", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7016989655448503`*^9, 3.701698970572242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"6400\"\>", ",", "\<\"1600\"\>", ",", "\<\"400\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.701698970968095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7016989370172787`*^9, 3.7016989385028477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 CellChangeTimes->{3.701698939335479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], ",", 
   RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], ",", 
   RowBox[{"fps", "\[Rule]", "\"\<30\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701698874854164*^9, 3.7016989086415367`*^9}, {
  3.7016990336796227`*^9, 3.701699068567112*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7016990744523287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetSettingReportAssociation", "[", "]"}], 
  "\[LeftDoubleBracket]", "\"\<videoResolution\>\"", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7016991426191072`*^9, 3.701699195272398*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.701699153449006*^9, 3.701699197269114*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["pom", "Section",
 CellChangeTimes->{{3.7018762694024057`*^9, 3.7018762697879887`*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.701876276266089*^9, 3.7018762765791197`*^9}}],

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", 
  RowBox[{
   RowBox[{"goProGetPossibleCamera", "[", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.701876284245829*^9, 3.701876294093378*^9}, {
  3.701876347902883*^9, 3.701876354896285*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70187630952178*^9, 3.701876345411199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Hero3+\"\>", ",", "\<\"Hero4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.701876342954424*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["goProGet", "Section",
 CellChangeTimes->{{3.702059971826385*^9, 3.702059974297751*^9}, {
  3.70209479692094*^9, 3.7020947975818033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.702059976454977*^9, 3.702059999075589*^9}, {
  3.702060458207762*^9, 3.702060458430916*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.702060459180571*^9, 3.702060510327668*^9, 
  3.70206129305624*^9, 3.7020613567771606`*^9, 3.7020614861682053`*^9, 
  3.702094816683693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "autoPowerOff", "]"}]], "Input",
 CellChangeTimes->{{3.702094923614884*^9, 3.702094935359112*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.702094950837089*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"volume", "\[Rule]", "\"\<off\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7020949541933193`*^9, 3.702094962579423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<videoResolution\>\"", ",", "\"\<fov\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702060018414548*^9, 3.702060048145303*^9}, {
   3.702061319133294*^9, 3.702061319462006*^9}, {3.702061491475326*^9, 
   3.7020614966188393`*^9}, 3.702094805547279*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7020600430694637`*^9, 3.7020600725379343`*^9}, 
   3.7020601760107927`*^9, 3.702060389113744*^9, 3.7020605449323187`*^9, {
   3.702061299045198*^9, 3.702061320602157*^9}, 3.70206135923488*^9, {
   3.702061488137608*^9, 3.70206149806861*^9}, 3.702094821170229*^9, 
   3.702094976181589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "\"\<fv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702060083758106*^9, 3.702060095108818*^9}, 
   3.702061501951542*^9, 3.7020948078449497`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGet","missing","\"This parameter is not usable, try another.\"",2,29,
   21,31792143324265201741,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70206150259564*^9, 3.702094977918153*^9}],

Cell[BoxData[
 RowBox[{"{", "Null", "}"}]], "Output",
 CellChangeTimes->{
  3.702060096197094*^9, {3.7020613376183043`*^9, 3.702061365821397*^9}, {
   3.70206150065245*^9, 3.702061502598249*^9}, 3.702094977944379*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702060178138558*^9, 3.7020601805867653`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 CellChangeTimes->{3.7020601809713573`*^9, 3.702060466114064*^9, 
  3.702061505436892*^9, 3.702094930425701*^9, 3.702094980468583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{
   "vdf", ",", "fov", ",", "fps", ",", "protune", ",", "whiteBalance"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.702060181899984*^9, 3.702060199558304*^9}, 
   3.7020604101588373`*^9, {3.7020605170997953`*^9, 3.702060522027772*^9}, {
   3.702060555174459*^9, 3.702060588043425*^9}, {3.702060636048518*^9, 
   3.702060722909382*^9}, {3.70206151336724*^9, 3.702061513687711*^9}, 
   3.702094811652647*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGet","missing","\"This parameter is not usable, try another.\"",2,31,
   22,31792143324265201741,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702061514373704*^9, 3.7020949816364603`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"60\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"whiteBalance\"\>", "\[Rule]", "\<\"auto\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702060189693364*^9, 3.702060200167533*^9}, {
   3.702060411654419*^9, 3.7020604310071163`*^9}, 3.702060467764143*^9, {
   3.7020605143382177`*^9, 3.702060523619138*^9}, {3.702060558801354*^9, 
   3.702060589600277*^9}, {3.702060644391006*^9, 3.7020607263964653`*^9}, {
   3.702061509869369*^9, 3.7020615163187943`*^9}, 3.702094984229638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "\"\<fov\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7020605329373083`*^9, 3.702060537688991*^9}, 
   3.702094813959503*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.702060538649474*^9, 3.70206154575801*^9, 
  3.702094993544448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "videoResolution", "]"}]], "Input",
 CellChangeTimes->{{3.7020959809106627`*^9, 3.702095986995368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702095989723988*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702060423018444*^9, 3.702060423519368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["goProTextMode", "Section",
 CellChangeTimes->{{3.7020944448390217`*^9, 3.7020944555267763`*^9}}],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7020944588399353`*^9, 3.7020944916367693`*^9}}],

Cell[BoxData[
 RowBox[{"goProTextModeOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702094496258169*^9, 3.702094505542471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetFPS", "[", "\"\<60\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7020945075999403`*^9, 3.7020945152547817`*^9}}],

Cell[BoxData["\<\"http://10.5.5.9/camera/FS?t=12345678&p=%07\"\>"], "Output",
 CellChangeTimes->{3.7020945158900747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProReport", "[", "fps", "]"}]], "Input",
 CellChangeTimes->{{3.702094575841316*^9, 3.7020946010440407`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7020946048356953`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download", "Section",
 CellChangeTimes->{{3.702187672955202*^9, 3.70218767423207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7021876767164297`*^9, 3.702187684141111*^9}, {
  3.7021878769242983`*^9, 3.702187877494061*^9}, {3.702188276503941*^9, 
  3.702188281475829*^9}}],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{
  3.7021882867795553`*^9, {3.702188626805009*^9, 3.702188650196639*^9}, 
   3.7021892912310667`*^9, 3.702189854866212*^9, 3.7021900700359697`*^9, 
   3.702190312381152*^9, 3.702190822090846*^9, 3.702199948604931*^9, 
   3.702200072665518*^9, 3.702200122736767*^9, 3.7022003136173153`*^9, 
   3.7022003679382677`*^9, 3.7022004370574007`*^9, {3.702200475184328*^9, 
   3.702200501928433*^9}, 3.7022005942597847`*^9, {3.702202769182472*^9, 
   3.702202793478116*^9}, 3.702203078537695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOn", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702188298167759*^9, 3.7021883341943483`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.702188304957356*^9, 3.7021883346164427`*^9}, 
   3.7021884649972486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702187710133909*^9, 3.702187719484558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5060.MP4\"\>", ",", "\<\"GOPR5061.JPG\"\>", 
   ",", "\<\"G0015063.JPG\"\>", ",", "\<\"G0015064.JPG\"\>", 
   ",", "\<\"G0025065.JPG\"\>", ",", "\<\"G0025066.JPG\"\>", 
   ",", "\<\"G0025067.JPG\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70218850186938*^9, 3.70218862999811*^9, 3.702189293747661*^9, 
   3.7021898582712383`*^9, {3.702199961989887*^9, 3.702199981758234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadAllFiles", "[", "\"\</tmp/GOPRO/\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.702189365014895*^9, 3.70218937287922*^9}, {
  3.7022000031308393`*^9, 3.702200004248624*^9}, {3.702200317866868*^9, 
  3.7022003207379313`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5060.MP4\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5061.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015063.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015064.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025065.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025066.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025067.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702199999934997*^9, 3.7022000327101192`*^9, 
  3.7022003442865973`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702189864268277*^9, 3.702189866823455*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{
   RowBox[{"goProGetFileList", "[", "]"}], ",", "\"\</tmp/GOPRO/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702190073669634*^9, 3.702190086042831*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5060.MP4\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/GOPR5061.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015063.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0015064.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025065.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025066.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPRO/G0025067.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702190125266316*^9, 3.702190358589007*^9, 
  3.7021907755533743`*^9, 3.702190864092383*^9, 3.702200038419331*^9, 
  3.7022000772038393`*^9, 3.702200186258896*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70220019938548*^9, 3.7022002017523193`*^9}, {
  3.702200281485881*^9, 3.702200283382032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<GOPR5060.MP4\>\"", ",", "\"\<GOPR5061.JPG\>\"", ",", 
     "\"\<G0015063.JPG\>\"", ",", "\"\<G0015064.JPG\>\"", ",", 
     "\"\<gopros.mp4\>\""}], "}"}], ",", "\"\</tmp/GOPRO/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702200330358409*^9, 3.702200337900517*^9}, {
  3.702200694784429*^9, 3.70220072951799*^9}}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,9,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202823170742*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,10,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.7022028262733097`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/tmp/GOPRO/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,36,11,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202830734164*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"goProGetFileList\\\", \
\\\"::\\\", \\\"directory\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,36,12,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.7022028308441343`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","file",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"gopros.mp4\\\\\\\"\\\"}]\\) - No such file \
on GoPro camera.\"",2,36,13,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702200708006174*^9, 3.702200772588419*^9, 
  3.702202835155752*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702200772629519*^9, 3.702202835158691*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadFile", "[", 
  RowBox[{"\"\<G0015064.JPG\>\"", ",", "\"\</temp/trol/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702202341489952*^9, 3.702202375088318*^9}, {
  3.70220254094137*^9, 3.7022025471351643`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","directory",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/temp/trol/\\\\\\\"\\\"}]\\) - No such \
directory exists.\"",2,37,14,31792839101381072353,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70220255347642*^9, 3.702202627120212*^9, 
  3.7022027365184593`*^9, 3.7022027758813066`*^9, 3.702202839620199*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirectoryQ", "[", "\"\</temp/trol/\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702202403868656*^9, 3.702202416081484*^9}, {
  3.702202564434177*^9, 3.702202569504736*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.702202570321042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileURL", "[", 
  RowBox[{
   RowBox[{"goProGetFileList", "[", "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702202673855762*^9, 3.702202673873869*^9}, {
  3.702203082395385*^9, 3.70220309370891*^9}}],

Cell[BoxData["\<\"http://10.5.5.9:8080/DCIM/100GOPRO/GOPR5060.MP4\"\>"], \
"Output",
 CellChangeTimes->{3.702203148605707*^9}]
}, Open  ]],

Cell[BoxData["goProMak"], "Input",
 CellChangeTimes->{{3.7022064219094553`*^9, 3.702206423123088*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Delete", "Section",
 CellChangeTimes->{{3.702206677186049*^9, 3.702206678494544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"12345678\"\>"], "Output",
 CellChangeTimes->{3.702206680236188*^9, 3.702206757138516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7022066808849373`*^9, 3.702206683999621*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.702206721294002*^9, 3.7022067585851107`*^9}, 
   3.702207214678975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProDeleteLastFile", "[", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.702206686555756*^9, 3.702206720917457*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7022067349272213`*^9, 3.702206777082325*^9, 
  3.702214467057084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{
  "HTTPRequest", "[", "\"\<http://10.5.5.9:8080/gp/gpMediaList\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702214448036602*^9, 3.702214493963449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"513164155069043360\"\>"}], ",", 
   RowBox[{"\<\"media\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"d\"\>", "\[Rule]", "\<\"100GOPRO\"\>"}], ",", 
       RowBox[{"\<\"fs\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"131218969\"\>"}], ",", 
            RowBox[{"\<\"ls\"\>", "\[Rule]", "\<\"-1\"\>"}], ",", 
            RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"GOPR5069.MP4\"\>"}], ",", 
            RowBox[{"\<\"mod\"\>", "\[Rule]", "\<\"1493232060\"\>"}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"2961266\"\>"}], ",", 
            RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"GOPR5070.JPG\"\>"}], ",", 
            RowBox[{"\<\"mod\"\>", "\[Rule]", "\<\"1493232140\"\>"}]}], 
           "}"}]}], "}"}]}]}], "}"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7022144707479553`*^9, 3.7022144952454443`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HERO2", "Section",
 CellChangeTimes->{{3.702285038032381*^9, 3.702285039035083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.702285044135977*^9, 3.702285044745829*^9}, {
  3.702285084879364*^9, 3.7022850969434443`*^9}, {3.702286099358056*^9, 
  3.702286099937045*^9}, {3.702286521029315*^9, 3.702286525334529*^9}, {
  3.702287252365841*^9, 3.702287253230899*^9}, {3.702287290642728*^9, 
  3.702287291310061*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{
  3.702286525919136*^9, 3.702287125345091*^9, {3.7022872328728123`*^9, 
   3.702287253791236*^9}, {3.702287684593441*^9, 3.702287706296363*^9}, 
   3.7022878519781303`*^9, 3.702288066669311*^9, 3.702288112435253*^9, {
   3.702288190125801*^9, 3.702288214988905*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProTextModeOn", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetFPS", "[", "\"\<1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleFPS", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleContinuousShot", "[", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetContinuousShot", "[", "\"\<1\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetBurstRate", "[", "\"\<1\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleBurstRate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossiblePhotoInVideo", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPhotoInVideo", "[", "\"\<1\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetWhiteBalance", "[", "\"\<\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleWhiteBalance", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetColorProfile", "[", "\"\<\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleColorProfile", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetISO", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleISO", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetSharpness", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleSharpness", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetExposure", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleExposure", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetLowLight", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleLowLight", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.702287128386579*^9, 3.702287184893169*^9}, {
  3.7022872403822107`*^9, 3.7022872484807653`*^9}, {3.702287669354332*^9, 
  3.702287722007729*^9}, {3.702287824147855*^9, 3.7022878427201*^9}, {
  3.702288068186926*^9, 3.7022880962734423`*^9}, {3.702288191737444*^9, 
  3.7022882212166*^9}, {3.702288310466084*^9, 3.702288322426231*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{
  3.702288221733918*^9, {3.7022883230287313`*^9, 3.702288335350697*^9}, 
   3.702289676872356*^9, 3.702291011611361*^9}],

Cell[BoxData[
 TemplateBox[{
  "Switch","argct",
   "\"Switch called with \\!\\(\\*RowBox[{\\\"4\\\"}]\\) arguments. Switch \
must be called with an odd number of arguments.\"",2,342,254,
   31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011613584*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetFPS","notSupported",
   "\"This function is not supported for this camera (\\!\\(\\*RowBox[{\\\"\\\
\\\\\"HERO2\\\\\\\"\\\"}]\\)). You can set FPS via \
goProSetVideoResolution.\"",2,345,255,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011627325*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetFPS","notSupported",
   "\"This function is not supported for this camera (\\!\\(\\*RowBox[{\\\"\\\
\\\\\"HERO2\\\\\\\"\\\"}]\\)). You can set FPS via \
goProSetVideoResolution.\"",2,346,256,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011636557*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetContinuousShot","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use continuous shot.\"",2,347,257,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011646783*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetContinuousShot","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use continuous shot.\"",2,348,258,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011655734*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetBurstRate","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't set Burst rate. It only supports 10/1s burst mode.\"",2,349,259,
   31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.7022910116655493`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetBurstRate","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't set Burst rate. It only supports 10/1s burst mode.\"",2,350,260,
   31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.7022910116750813`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetPhotoInVideo","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use photo in video.\"",2,351,261,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011685421*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetPhotoInVideo","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use photo in video.\"",2,352,262,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011695854*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetWhiteBalance","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use white balance.\"",2,353,263,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.70229101170963*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetWhiteBalance","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use white balance.\"",2,354,264,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011719475*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetColorProfile","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change color profile.\"",2,355,265,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011730979*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetColorProfile","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change color profile.\"",2,356,266,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011742485*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetISO","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change ISO.\"",2,357,267,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011750297*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetISO","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change ISO.\"",2,358,268,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011761669*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetSharpness","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change sharpness.\"",2,359,269,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011773419*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetSharpness","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change sharpness.\"",2,360,270,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.7022910117827377`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetExposure","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change exposure.\"",2,361,271,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.70229101179309*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetExposure","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't change exposure.\"",2,362,272,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011806327*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetLowLight","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't low light setting.\"",2,363,273,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.7022910118171597`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetLowLight","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't low light setting.\"",2,364,274,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70228768544037*^9, 3.7022877227972393`*^9}, {
   3.702287843376177*^9, 3.70228785315394*^9}, {3.702288096956183*^9, 
   3.7022881136098824`*^9}, {3.702288188172112*^9, 3.702288221735454*^9}, {
   3.7022883230300922`*^9, 3.702288335351997*^9}, 3.702289676873673*^9, 
   3.702291011828418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702289679187127*^9, 3.7022896837306213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 CellChangeTimes->{3.702289684229491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"photoInVideo", "\[Rule]", "\"\<10\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7022896851531477`*^9, 3.70228969283173*^9}, {
  3.702291070445915*^9, 3.702291071023053*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{3.702291071806568*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"photoInVideo\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,276,31793406203397173313,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.7022910721525908`*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"photoInVideo\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,277,31793406203397173313,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072163876*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","optnf",
   "\"Option name \\!\\(\\*RowBox[{\\\"GoProController`Private`fps\\\"}]\\) \
not found in defaults for \\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,
   278,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072171014*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"photoInVideo\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,279,31793406203397173313,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.7022910721778727`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \\\"::\
\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,370,280,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072184916*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","optnf",
   "\"Option name \
\\!\\(\\*RowBox[{\\\"GoProController`Private`loopVideo\\\"}]\\) not found in \
defaults for \\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,281,
   31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072191877*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","optnf",
   "\"Option name \
\\!\\(\\*RowBox[{\\\"GoProController`Private`loopVideo\\\"}]\\) not found in \
defaults for \\!\\(\\*RowBox[{\\\"goProSet\\\"}]\\).\"",2,370,282,
   31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072198827*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \\\"::\
\\\", \\\"optnf\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,370,283,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.7022910722055483`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetPhotoInVideo","notSupported",
   "\"This camera model(\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)) \
can't use photo in video.\"",2,370,284,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7022898979872828`*^9, 3.702291072212627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "goProSet", "]"}]}], "Input",
 CellChangeTimes->{{3.702291018703703*^9, 3.702291024676803*^9}, {
  3.7022910772728043`*^9, 3.702291099261722*^9}, {3.702291294404995*^9, 
  3.702291296319036*^9}, {3.7022915952968063`*^9, 3.702291595899563*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{{3.702291095062126*^9, 3.702291099798028*^9}, 
   3.7022912241644707`*^9, 3.702291491273079*^9, 3.702291530857914*^9, {
   3.702291590796289*^9, 3.702291596524974*^9}, 3.702292251779002*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GoProController`Private`videoResolution", "\[Rule]", "\<\"\"\>"}],
    ",", 
   RowBox[{"GoProController`Private`fov", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"GoProController`Private`mode", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"GoProController`Private`videoMode", "\[Rule]", "\<\"\"\>"}], ",", 
   
   RowBox[{"GoProController`Private`photoResolution", "\[Rule]", "\<\"\"\>"}],
    ",", 
   RowBox[{"GoProController`Private`timeLapse", "\[Rule]", "\<\"\"\>"}], ",", 
   
   RowBox[{"GoProController`Private`volume", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"GoProController`Private`led", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"GoProController`Private`spotMeter", "\[Rule]", "\<\"\"\>"}], ",", 
   
   RowBox[{"GoProController`Private`autoPowerOff", "\[Rule]", "\<\"\"\>"}], 
   ",", 
   RowBox[{"GoProController`Private`protune", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"GoProController`Private`bootMode", "\[Rule]", "\<\"\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7022910256664457`*^9, {3.702291079004572*^9, 3.702291099801985*^9}, 
   3.7022912241673527`*^9, 3.702291491277588*^9, 3.702291530862159*^9, {
   3.70229159080063*^9, 3.702291596529292*^9}, 3.70229225178364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702291348512272*^9, 3.702291352116044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fov", ",", "videoMode", ",", "photoResolution", 
   ",", "timeLapse", ",", "volume", ",", "led", ",", "spotMeter", ",", 
   "autoPowerOff", ",", "protune", ",", "mode", ",", "bootMode"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.702291352597447*^9, 3.7022914943126*^9, 3.702291532908737*^9, {
   3.702291592127822*^9, 3.702291598383403*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"protune", "\[Rule]", "\"\<on\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.702291038785695*^9, 3.702291047455132*^9}, {
  3.702291229385726*^9, 3.70229124455755*^9}, {3.702291300251898*^9, 
  3.702291336410776*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{{3.702291324945531*^9, 3.702291336796826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"goProGet", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"goProGetVariables", "[", "]"}]}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.70229160359103*^9, 3.7022917244367533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"0.5\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Video\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702291617893406*^9, 3.702291728836589*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{
   "videoResolution", ",", "fov", ",", "videoMode", ",", "photoResolution", 
    ",", "timeLapse", ",", "volume", ",", "led", ",", "spotMeter", ",", 
    "autoPowerOff", ",", "protune", ",", "mode", ",", "bootMode"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7022917361014433`*^9, 3.7022917383961477`*^9}, {
  3.7022919926090193`*^9, 3.702292020299765*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"0.5\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Video\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702292005277017*^9, 3.7022920253216343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7022922019662037`*^9, 3.702292214883605*^9}, {
   3.702300012048088*^9, 3.702300012845477*^9}, 3.702300043862466*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fov", ",", "videoMode", ",", "photoResolution", 
   ",", "timeLapse", ",", "volume", ",", "led", ",", "spotMeter", ",", 
   "autoPowerOff", ",", "protune", ",", "mode", ",", "bootMode"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702292208394403*^9, 3.70229221525494*^9}, 
   3.702292255719145*^9, 3.702300017461864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pom", "=", "\"\<led\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.70229225669417*^9, 3.7022922694165897`*^9}, {
  3.7022924872608747`*^9, 3.702292487999333*^9}, {3.702292655225478*^9, 
  3.702292677055544*^9}, {3.702300260079578*^9, 3.702300266948009*^9}, {
  3.702300611968295*^9, 3.7023006139799623`*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{
  3.702292488637295*^9, 3.702292587743816*^9, 3.7022926474159184`*^9, 
   3.702292678119903*^9, 3.7023002314087257`*^9, {3.702300263954632*^9, 
   3.702300268351316*^9}, {3.702300605540663*^9, 3.7023006146374397`*^9}, 
   3.7023006478393*^9, 3.702301749958971*^9, 3.702301811173099*^9, 
   3.702301843292253*^9, {3.7023018886506863`*^9, 3.702301936529928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetVariables", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fov", ",", "videoMode", ",", "photoResolution", 
   ",", "timeLapse", ",", "volume", ",", "led", ",", "spotMeter", ",", 
   "autoPowerOff", ",", "protune", ",", "mode", ",", "bootMode"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.70230004664723*^9, 3.702301812654028*^9, 
  3.702301893713529*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoResolution", "\[Rule]", "\"\<1080p\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7023000250724363`*^9, 3.7023000381629467`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.702301817197905*^9, 3.702301896187817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"goProGetVariables", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702300383394758*^9, 3.702300389914815*^9}, {
  3.702301759963525*^9, 3.702301765000475*^9}, {3.702301868039584*^9, 
  3.702301868422957*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"0.5\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Video\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7023019006338053`*^9, 3.7023019436169786`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", "\[Pi]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7023000654173317`*^9, 3.7023000752563972`*^9}, {
  3.702300166764921*^9, 3.702300168570559*^9}}],

Cell[BoxData[
 TemplateBox[{
  "goProGet","missing","\"This parameter is not usable, try another.\"",2,558,
   294,31793406203397173313,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702300241649345*^9, 3.7023006214989758`*^9, 
  3.7023019473289137`*^9}],

Cell[BoxData[
 RowBox[{"{", "Null", "}"}]], "Output",
 CellChangeTimes->{{3.702300087061983*^9, 3.7023000917151937`*^9}, 
   3.7023001691014423`*^9, 3.702300241652054*^9, 3.7023006215124693`*^9, 
   3.70230194734547*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<videoMode\>\"", ",", "\"\<videoResolution\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702301955322268*^9, 3.702301976047289*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"720p\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702301965875415*^9, 3.702301977061455*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera model", "Section",
 CellChangeTimes->{{3.702354885871101*^9, 3.702354887221342*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetCameraModelPossible", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetCameraModel", "[", "\"\<Black\>\"", "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.702354133589581*^9, 3.7023541593261127`*^9}, {
   3.7023546425359783`*^9, 3.7023546490464487`*^9}, {3.7023548063593616`*^9, 
   3.702354847237656*^9}, {3.7023549123467913`*^9, 3.7023549456720123`*^9}, {
   3.702355417917261*^9, 3.702355452130617*^9}, {3.702355546534463*^9, 
   3.702355547803842*^9}, {3.7023556022637053`*^9, 3.70235561957255*^9}, {
   3.702356052645583*^9, 3.702356068627125*^9}, {3.702356110660289*^9, 
   3.702356110962262*^9}, {3.702356179174205*^9, 3.702356179653989*^9}, {
   3.702356217227229*^9, 3.702356218477838*^9}, {3.7023563689459553`*^9, 
   3.7023563694454947`*^9}, 3.702360091150715*^9, {3.7023608296622267`*^9, 
   3.702360830168048*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{{3.7023556037930403`*^9, 3.702355620026792*^9}, {
   3.7023560468617687`*^9, 3.7023560694089746`*^9}, 3.702356111463669*^9, 
   3.702356179986382*^9, 3.7023562191280537`*^9, {3.7023563654270687`*^9, 
   3.702356369862916*^9}, 3.7023564632625837`*^9, {3.702356572375222*^9, 
   3.702356596290378*^9}, {3.702360092802153*^9, 3.7023601040279217`*^9}, 
   3.70236083072864*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetCameraModel","noNeed",
   "\"You don't have to set camera model for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)\"",2,293,74,
   31793835280276436670,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7023608307459393`*^9}],

Cell[BoxData[
 TemplateBox[{
  "goProSetCameraModel","noNeed",
   "\"You don't have to set camera model for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"HERO2\\\\\\\"\\\"}]\\)\"",2,294,75,
   31793835280276436670,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702360830759294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleFPS", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"60\"\>", ",", "\<\"120\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702356113811316*^9, {3.702356157448598*^9, 3.702356159400817*^9}, 
   3.702356220947405*^9, 3.7023563712661533`*^9, 3.702356464278014*^9, {
   3.702356573557439*^9, 3.702356597150028*^9}, {3.702360094417804*^9, 
   3.702360105443994*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", "fps", "]"}]], "Input",
 CellChangeTimes->{{3.702356167466474*^9, 3.702356171408043*^9}, {
  3.7023564855143347`*^9, 3.702356554308733*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"60\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7023561727537813`*^9, 3.702356182407936*^9}, {
  3.7023563779999733`*^9, 3.702356379548422*^9}, {3.702356465602562*^9, 
  3.7023565993207407`*^9}, {3.702360096263846*^9, 3.702360107182373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GoProController`*"}]], "Input",
 CellChangeTimes->{{3.702360816405673*^9, 3.7023608215338783`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["GoProController`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["GoProController`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["goProBurstMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProBurstMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetExposure",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetExposure", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDeleteAll",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDeleteAll", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetFOV",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSetFOV", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDeleteLast",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDeleteLast", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetFPS",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSetFPS", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDeleteLastFile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDeleteLastFile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetISO",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSetISO", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDownloadAll",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDownloadAll", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetIsoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetIsoMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDownloadAllFiles",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDownloadAllFiles", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetLed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSetLed", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDownloadFile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProDownloadFile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetLowLight",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetLowLight", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProGet", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotColorProfile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCamera",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCamera", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotExposure",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotExposure", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCameraModel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCameraModel", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCameraModelPossible",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCameraModelPossible", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotIsoMinimum",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotIsoMinimum", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCameraStatus",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCameraStatus", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotProtune",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotProtune", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCurrentlyPossibleFPS",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCurrentlyPossibleFPS", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotResolution",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotResolution", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetCurrentlyPossibleShutterTimeFPS",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetCurrentlyPossibleShutterTimeFPS", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotSharpness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetFileList",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetFileList", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetFileURL",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetFileURL", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotTimeLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotTimeLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetModel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProGetModel", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetMultiShotWhiteBalance",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetMultiShotWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetMultiShotSettingReport",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetMultiShotSettingReport", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetNightLapseExposureTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetNightLapseExposureTime", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPhotoSettingReport",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPhotoSettingReport", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetNightLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetNightLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleAutoPowerOff",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleAutoPowerOff", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetNightPhotoExposureTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetNightPhotoExposureTime", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleBootMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleBootMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetOrientation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetOrientation", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleBurstRate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleBurstRate", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetOrientationDown",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetOrientationDown", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleCamera",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleCamera", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetOrientationUp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetOrientationUp", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleCameraModel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleCameraModel", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPassword",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPassword", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleColorProfile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoColorProfile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleContinuousShot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleContinuousShot", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoExposure",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoExposure", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleExposure",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleExposure", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoInVideo",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoInVideo", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleFOV",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleFOV", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleFPS",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleFPS", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoIsoMinimum",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoIsoMinimum", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleISO",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleISO", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoProtune",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoProtune", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleIsoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleIsoMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoRes",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoRes", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleLed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleLed", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoSharpness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleLowLight",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleLowLight", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleModes",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleModes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoWhiteBalance",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetPhotoWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleMultiShotIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleMultiShotIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetProtune",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetProtune", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleMultiShotIsoMinimum",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleMultiShotIsoMinimum", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetQuickCapture",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetQuickCapture", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleMultiShotResolution",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleMultiShotResolution", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSharpness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleMultiShotSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleMultiShotSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetShutterTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetShutterTime", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleNightLapseExposureTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleNightLapseExposureTime", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleNightLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleNightLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeterOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleNightPhotoExposureTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleNightPhotoExposureTime", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeterOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleOrientation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleOrientation", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSetTime", "GoProController`"}},
          
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoInVideo",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossiblePhotoInVideo", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetTimeLapse",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetTimeLapse", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossiblePhotoIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetTimeLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetTimeLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoIsoMinimum",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossiblePhotoIsoMinimum", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetURLBase",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetURLBase", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoRes",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossiblePhotoRes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoColorProfile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossiblePhotoSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoExposure",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoExposure", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleProtune",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleProtune", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleQuickCapture",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleQuickCapture", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoLoop",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoLoop", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleSharpness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleShutterTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleShutterTime", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoProtune",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoProtune", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoRes",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoRes", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleTimeLapse",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleTimeLapse", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoResolution",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoResolution", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleTimeLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleTimeLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoSharpness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoIsoLimit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoIsoLimit", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoLoop",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoLoop", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoTimeLapseInterval",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoTimeLapseInterval", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoWhiteBalance",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVideoWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoRes",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoRes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVolume",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetVolume", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoResolution",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoResolution", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetWhiteBalance",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoSpotMeter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVideoSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProShutter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProShutter", "GoProController`"}},
          
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVolume",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleVolume", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProStop",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProStop", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleWhiteBalance",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetPossibleWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLCDDisplayOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchLCDDisplayOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetSettingReport",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetSettingReport", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLCDDisplayOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchLCDDisplayOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetSettingReportAssociation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetSettingReportAssociation", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLowLightOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchLowLightOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetStatus",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetStatus", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLowLightOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchLowLightOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetTime",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProGetTime", "GoProController`"}},
          
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchMultiShotSpotMeterOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchMultiShotSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetURLBase",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetURLBase", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchMultiShotSpotMeterOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchMultiShotSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetVariables",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetVariables", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchPhotoSpotMeterOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchPhotoSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetVideoSettingReport",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProGetVideoSettingReport", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchPhotoSpotMeterOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchPhotoSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProLocate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProLocate", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchProtuneOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchProtuneOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProLocateStop",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProLocateStop", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchProtuneOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchProtuneOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProMakeCommand",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProMakeCommand", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchQuickCaptureOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchQuickCaptureOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchQuickCaptureOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchQuickCaptureOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProPhotoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProPhotoMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchSpotMeterOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSaveSettings",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSaveSettings", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchSpotMeterOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProSet", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchVideoSpotMeterOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchVideoSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetAutoPowerOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetAutoPowerOff", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchVideoSpotMeterOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSwitchVideoSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetBootMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetBootMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTextModeOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProTextModeOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetBurstRate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetBurstRate", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTextModeOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProTextModeOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetCamera",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetCamera", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTimeLapseMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProTimeLapseMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetCameraModel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetCameraModel", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTurnOff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProTurnOff", "GoProController`"}},
          
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetColorProfile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTurnOn",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {"goProTurnOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSetContinuousShot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProSetContinuousShot", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProVideoMode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3083702368108-5124523", {
            "goProVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.7023609086907787`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO4\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.702360853403586*^9, 3.702360860060718*^9}, {
  3.702360892128086*^9, 3.702360901709147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7023653958710117`*^9, 3.702365405415099*^9}, {
  3.702365675472981*^9, 3.702365677793275*^9}, {3.70236667304513*^9, 
  3.702366673533124*^9}, {3.7023667240230923`*^9, 3.702366746560914*^9}, {
  3.7023667889282513`*^9, 3.702366801353352*^9}, {3.702367233534555*^9, 
  3.7023672940209827`*^9}, {3.7023674335688457`*^9, 3.7023674338913116`*^9}}],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellChangeTimes->{{3.702365390694581*^9, 3.702365405896185*^9}, {
   3.702365633701744*^9, 3.702365643347665*^9}, 3.7023656783672733`*^9, 
   3.702366323244268*^9, {3.702366358928011*^9, 3.70236636703302*^9}, 
   3.7023665304197683`*^9, {3.702366666545282*^9, 3.7023666739548187`*^9}, {
   3.702366736013966*^9, 3.702366746965836*^9}, {3.702366779080072*^9, 
   3.702366801713586*^9}, 3.702367001098155*^9, 3.702367110250498*^9, 
   3.7023671845959253`*^9, {3.7023672202527103`*^9, 3.7023672969473457`*^9}, 
   3.702367434459345*^9, 3.702367493880994*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"4K-17:9\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"12\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"5M\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Photo\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.702365390712427*^9, 3.7023654058982058`*^9}, {
   3.702365633796053*^9, 3.702365643425046*^9}, 3.70236567844142*^9, {
   3.702366333351302*^9, 3.702366367279158*^9}, 3.702366532061123*^9, {
   3.702366666897077*^9, 3.702366675055656*^9}, {3.702366736491527*^9, 
   3.702366747370576*^9}, {3.702366779387599*^9, 3.702366802134562*^9}, 
   3.702367001521261*^9, 3.702367110618713*^9, 3.7023671849849253`*^9, {
   3.702367220656847*^9, 3.70236729724088*^9}, 3.702367439368052*^9, 
   3.702367498366379*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetPhotoRes", "[", "\"\<5M\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702367453571679*^9, 3.702367486756357*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 3}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 3}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 3}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7023674695511227`*^9, 3.702367487318283*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{"videoResolution", "\[Rule]", "\"\<720p-30\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.702366804568758*^9, 3.70236681152772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"goProGetVariables", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702367197928358*^9, 3.702367205903493*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"4K-17:9\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"12\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"7W\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"TimeLapse\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.702367210426236*^9, {3.702367304562726*^9, 3.7023673140797*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702365659131247*^9, 3.702365666762981*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"URLRead", "[", 
      RowBox[{"HTTPRequest", "[", 
       RowBox[{"goProGetURLBase", "[", "]"}], "]"}], "]"}], "[", 
     "\"\<StatusCode\>\"", "]"}], "\[NotEqual]", "200"}], ",", 
   "\"\<nejede\>\"", ",", "\"\<jede\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7023658542629557`*^9, 3.702365940605686*^9}, {
  3.702365980476851*^9, 3.7023659825253553`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.702365976184373*^9, 3.702366033756044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PingTime", "[", "\"\<10.5.5.9\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702366034871491*^9, 3.702366067648155*^9}}],

Cell[BoxData[
 TemplateBox[{
  "PingTime","ptimeout",
   "\"No ping echo received from host \\!\\(\\*RowBox[{\\\"\\\\\\\"10.5.5.9\\\
\\\\\"\\\"}]\\) within the specified timeout.\"",2,90,45,31793916192290135173,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702366078317993*^9}],

Cell[BoxData["$TimedOut"], "Output",
 CellChangeTimes->{3.702366043696203*^9, 3.702366078334331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"SameQ", "[", 
    RowBox[{
     RowBox[{"PingTime", "[", "\"\<10.5.5.9\>\"", "]"}], ",", "$TimedOut"}], 
    "]"}], ",", "\"\<nedosahl\>\"", ",", "\"\<dosahl\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7023661183987722`*^9, 3.702366151725267*^9}}],

Cell[BoxData["\<\"dosahl\"\>"], "Output",
 CellChangeTimes->{{3.702366162300082*^9, 3.7023661826748657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<0\>\"", "<>", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"BaseForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"goProGetStatus", "[", 
         RowBox[{"\"\<camera\>\"", ",", "\"\<vr\>\""}], "]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "16"}], 
      "]"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702366537839159*^9, 3.702366609522174*^9}}],

Cell[BoxData["\<\"0a\"\>"], "Output",
 CellChangeTimes->{{3.7023665470674*^9, 3.7023666100026693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToString", "[", 
   RowBox[{"goProGetStatus", "[", 
    RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}], "]"}], 
  "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7023668752095957`*^9, 3.702366879608912*^9}, {
  3.70236692083561*^9, 3.7023669382747173`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"{0, 3}\\\\\\\"\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) \
is longer than depth of object.\"",2,65,22,31793926593116741723,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.702366931340644*^9, 3.702366938935627*^9}}],

Cell[BoxData[
 RowBox[{"\<\"{0, 3}\"\>", "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.702366925311833*^9, 3.702366938948324*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702366936079125*^9, 3.702366936639864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"goProGetStatus", "[", 
   RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7023669017652082`*^9, 3.7023669134851*^9}}],

Cell[BoxData["\<\"{0, 3}\"\>"], "Output",
 CellChangeTimes->{3.702366913928277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<03\>\"", "\[Rule]", "\"\<5M\>\""}], ",", 
    RowBox[{"\"\<04\>\"", "\[Rule]", "\"\<7W\>\""}], ",", 
    RowBox[{"\"\<05\>\"", "\[Rule]", "\"\<12W\>\""}], ",", 
    RowBox[{"\"\<06\>\"", "\[Rule]", "\"\<7M\>\""}], ",", 
    RowBox[{"\"\<00\>\"", "\[Rule]", "\"\<11W\>\""}], ",", 
    RowBox[{"\"\<01\>\"", "\[Rule]", "\"\<8M\>\""}], ",", 
    RowBox[{"\"\<02\>\"", "\[Rule]", "\"\<5W\>\""}]}], 
   "\[RightAssociation]"}], "[", 
  RowBox[{"[", 
   RowBox[{"\"\<0\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"goProGetStatus", "[", 
       RowBox[{"\"\<camera\>\"", ",", "\"\<pr\>\""}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702367036495042*^9, 3.702367049163341*^9}}],

Cell[BoxData["\<\"5M\"\>"], "Output",
 CellChangeTimes->{3.702367049644958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.702375292083755*^9, 3.702375295601611*^9}, {
  3.702376218986771*^9, 3.702376235551271*^9}}],

Cell[BoxData["\<\"camera: HERO3+\"\>"], "Print",
 CellChangeTimes->{{3.702376220116556*^9, 3.702376236771925*^9}, {
  3.702380690101232*^9, 3.702380703120384*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702375297508806*^9, 3.702375310306123*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"GOPR5082.MP4\"\>", "}"}]], "Output",
 CellChangeTimes->{3.7023807314439907`*^9, 3.702380850575615*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDeleteAll", "[", "]"}]], "Input",
 CellChangeTimes->{{3.702375492887553*^9, 3.7023754935535097`*^9}, {
  3.7023762051070347`*^9, 3.702376208696639*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}],
            ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFVF1IVEEYvXdXs9zN30RBLNN60MIwDCmtHoIMySKLElJiWzR9EM3Eh9QH
lcCHwHyIHiMpiP3RlC0xSddtNf92E9TQ0jTTsvxfldW17TQz967sbhtduHNn
znfufDPnmzlpiuLc7HxFcZ5SEZlSpCjMzVPeiTxbUEQgKc9xXBh9IznaB+mK
TRiGBrpJQPj4sI8vWvrqUW2oQGbrNSTo4iHXyCHT+rI+xWiMcAQ6580+UpjM
BpTrSyib2wlOxRGM/kkxyhB4nJdIp0lO6BIZUSbSU5rPMFxgMLrUiR5cH8SI
ux2zq2V4Z25lDIlAlzgtxjG7v0inYxJlDN6Z7oWqjjJCkiNhchpbgBTkIWnW
l28jSivHEVMdOlfnYbEO4/XIRURoiH7qv/FaQ5ljIVwoy0WXTUXgVDwC9c8w
89uO5cX7yOvJRCZ5M97GIry9DtN2CwbGCpAz1ITvpN/3PgohHnDTwCHo+3WO
9YtZqgyldI/Cqw7EyeE2zNmX0D2ajn10rSpfxH0cx4bNgAuNPDhtLO5ZrLAs
ZOPcJ0/4dTw0VmxnYUXA1ZZLTEkJa2kpfLC3swa9Niu+zeQjrt4fSTM/YbOq
kFhPVxKBm4ursFpqoJz1hFeg9E2Wa5KDjdFiuWgbyISTtRTCaNvA1EQq0mYX
sOU0kZJNVIucOU94Ja68incSix4LoRxUlF2IGe7C55XnSG4gY81+5C+tkaKX
I318AptElPNMlBhUMVFuIXXME56Fww1BbiXxVnuLWSQIMTbhh30RxtEcZJgf
YWhrE18nTyGi7TGm7MvoHbmBy+an+PJrFeaBA9jjEY9GqDbALQu9kduF14Qh
7YMOg9YVrG9OoGeyCEkviI5qPxw1PUHX2jxWrINoJgc1nB1gzzi5Jv8ofDBt
eShaM13j4vFzxB8Yq13j7f065gpBQpxIw9N7y7te2ZL2AsdeuACBWaovZiTe
1Qucds35iafl9Mtk98vtbB3UKlysgxwCh9NI/m9Mx3XH3I1phzgQLY8RfUQ6
LX5lx11n23P3VmVr1l/eSoRlvxG9RG/l+D8Ynl2M\
\>"]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[1],
               FrontFaceColor->GrayLevel[1],
               BackFaceColor->GrayLevel[1],
               GraphicsColor->GrayLevel[1],
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               LineColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FrontFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               BackFaceColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               GraphicsColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.702376244082612*^9, 3.702380733453022*^9, 
  3.702380966570888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadAllFiles", "[", "\"\</tmp/ap/\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702375495690727*^9, 3.702375503243744*^9}, {
  3.702375674039934*^9, 3.702375682134828*^9}, {3.702375735055586*^9, 
  3.702375736157865*^9}, {3.702376201968416*^9, 3.702376203789081*^9}, {
  3.702380845837489*^9, 3.702380884705967*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/ap/GOPR5082.MP4\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/ap/GOPR5083.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.702375677394177*^9, 3.7023757159903793`*^9, 3.702376200787383*^9, {
   3.702380838458352*^9, 3.70238085306249*^9}, 3.702380887192053*^9, 
   3.702380960321558*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{799, 847},
WindowMargins->{{Automatic, 1}, {1, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[675, 25, 466, 7, 32, "Input"],
Cell[1144, 34, 76, 1, 32, "Output"]
}, Open  ]],
Cell[1235, 38, 170, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[1430, 44, 175, 3, 32, "Input"],
Cell[1608, 49, 255, 6, 23, "Message"],
Cell[1866, 57, 76, 1, 32, "Output"]
}, Open  ]],
Cell[1957, 61, 283, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[2265, 70, 151, 2, 35, "Subsubsection"],
Cell[2419, 74, 414, 7, 55, "Text"],
Cell[2836, 83, 343, 7, 57, "Input"],
Cell[3182, 92, 1710, 44, 214, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4929, 141, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[5073, 146, 257, 5, 32, "Input"],
Cell[5333, 153, 208, 5, 34, "Output"]
}, Open  ]],
Cell[5556, 161, 381, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[5962, 173, 407, 8, 56, "Input"],
Cell[6372, 183, 14036, 338, 61, "Output"]
}, Open  ]],
Cell[20423, 524, 300, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[20748, 534, 244, 5, 34, "Input"],
Cell[20995, 541, 11929, 293, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32961, 839, 633, 12, 78, "Input"],
Cell[33597, 853, 6259, 169, 63, "Output"],
Cell[39859, 1024, 151, 2, 32, "Output"],
Cell[40013, 1028, 149, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40199, 1035, 301, 5, 34, "Input"],
Cell[40503, 1042, 236, 5, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40788, 1053, 89, 1, 93, "Title"],
Cell[40880, 1056, 324, 5, 32, "Input"],
Cell[41207, 1063, 167, 2, 32, "Input"],
Cell[41377, 1067, 173, 3, 32, "Input"],
Cell[41553, 1072, 144, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[41722, 1078, 168, 3, 32, "Input"],
Cell[41893, 1083, 211, 3, 32, "Output"]
}, Open  ]],
Cell[42119, 1089, 106, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[42250, 1094, 155, 3, 32, "Input"],
Cell[42408, 1099, 13888, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56333, 1441, 120, 1, 35, "Subsubsection"],
Cell[56456, 1444, 170, 4, 34, "Input"],
Cell[56629, 1450, 169, 4, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56835, 1459, 114, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[56974, 1464, 261, 5, 56, "Input"],
Cell[57238, 1471, 13839, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71114, 1812, 260, 5, 56, "Input"],
Cell[71377, 1819, 13811, 335, 61, "Output"]
}, Open  ]],
Cell[85203, 2157, 264, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[85492, 2166, 151, 3, 32, "Input"],
Cell[85646, 2171, 13814, 335, 61, "Output"]
}, Open  ]],
Cell[99475, 2509, 106, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[99606, 2514, 152, 3, 32, "Input"],
Cell[99761, 2519, 15037, 357, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114847, 2882, 122, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[114994, 2887, 154, 3, 32, "Input"],
Cell[115151, 2892, 14940, 355, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130128, 3252, 410, 7, 57, "Input"],
Cell[130541, 3261, 162, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130740, 3270, 364, 7, 57, "Input"],
Cell[131107, 3279, 137, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131281, 3287, 359, 7, 57, "Input"],
Cell[131643, 3296, 189, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131869, 3306, 365, 7, 57, "Input"],
Cell[132237, 3315, 139, 3, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132425, 3324, 116, 1, 65, "Section"],
Cell[132544, 3327, 192, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[132761, 3334, 199, 3, 32, "Input"],
Cell[132963, 3339, 13885, 336, 61, "Output"]
}, Open  ]],
Cell[146863, 3678, 196, 4, 34, "Input"],
Cell[147062, 3684, 202, 4, 34, "Input"],
Cell[147267, 3690, 257, 5, 34, "Input"],
Cell[147527, 3697, 258, 5, 34, "Input"],
Cell[147788, 3704, 223, 4, 34, "Input"],
Cell[148014, 3710, 125, 3, 34, "Input"],
Cell[148142, 3715, 127, 3, 34, "Input"],
Cell[148272, 3720, 126, 3, 34, "Input"],
Cell[148401, 3725, 124, 3, 34, "Input"],
Cell[148528, 3730, 126, 3, 34, "Input"],
Cell[148657, 3735, 127, 3, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148821, 3743, 90, 1, 65, "Section"],
Cell[148914, 3746, 349, 6, 33, "Text"],
Cell[149266, 3754, 1138, 42, 825, "Text"],
Cell[150407, 3798, 710, 17, 34, "Input"],
Cell[151120, 3817, 154, 3, 34, "Input"],
Cell[151277, 3822, 1050, 25, 263, "Input"],
Cell[152330, 3849, 1977, 44, 308, "Input"],
Cell[CellGroupData[{
Cell[154332, 3897, 634, 15, 34, "Input"],
Cell[154969, 3914, 248, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155254, 3922, 176, 3, 34, "Input"],
Cell[155433, 3927, 137, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155607, 3935, 124, 2, 32, "Input"],
Cell[155734, 3939, 274, 6, 34, "Output"]
}, Open  ]],
Cell[156023, 3948, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[156169, 3954, 211, 3, 32, "Input"],
Cell[156383, 3959, 199, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156619, 3968, 292, 6, 32, "Input"],
Cell[156914, 3976, 13814, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170765, 4316, 163, 3, 32, "Input"],
Cell[170931, 4321, 13815, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184783, 4661, 100, 1, 44, "Subsection"],
Cell[184886, 4664, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[185032, 4670, 165, 3, 32, "Input"],
Cell[185200, 4675, 13813, 335, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199062, 5016, 101, 1, 44, "Subsection"],
Cell[199166, 5019, 471, 11, 124, "Input"],
Cell[199640, 5032, 1747, 38, 308, "Input"],
Cell[201390, 5072, 662, 17, 78, "Input"],
Cell[CellGroupData[{
Cell[202077, 5093, 128, 2, 32, "Input"],
Cell[202208, 5097, 191, 4, 34, "Output"]
}, Open  ]],
Cell[202414, 5104, 121, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[202560, 5110, 163, 3, 32, "Input"],
Cell[202726, 5115, 165, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202928, 5124, 219, 3, 32, "Input"],
Cell[203150, 5129, 13864, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217051, 5470, 108, 1, 35, "Subsubsection"],
Cell[217162, 5473, 269, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[217456, 5481, 357, 7, 32, "Input"],
Cell[217816, 5490, 13875, 336, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231740, 5832, 93, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[231858, 5837, 311, 5, 56, "Input"],
Cell[232172, 5844, 115, 3, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232372, 5856, 99, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[232496, 5861, 134, 1, 65, "Section"],
Cell[232633, 5864, 294, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[232952, 5873, 222, 5, 32, "Input"],
Cell[233177, 5880, 948, 29, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234162, 5914, 400, 7, 32, "Input"],
Cell[234565, 5923, 13924, 337, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248538, 6266, 143, 2, 65, "Section"],
Cell[248684, 6270, 244, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[248953, 6278, 199, 3, 32, "Input"],
Cell[249155, 6283, 13934, 337, 61, "Output"]
}, Open  ]],
Cell[263104, 6623, 196, 4, 34, "Input"],
Cell[263303, 6629, 202, 4, 34, "Input"],
Cell[263508, 6635, 257, 5, 34, "Input"],
Cell[263768, 6642, 258, 5, 34, "Input"],
Cell[264029, 6649, 223, 4, 34, "Input"],
Cell[264255, 6655, 125, 3, 34, "Input"],
Cell[264383, 6660, 127, 3, 34, "Input"],
Cell[264513, 6665, 126, 3, 34, "Input"],
Cell[264642, 6670, 124, 3, 34, "Input"],
Cell[264769, 6675, 126, 3, 34, "Input"],
Cell[264898, 6680, 127, 3, 34, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265074, 6689, 102, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[265201, 6694, 185, 2, 65, "Section"],
Cell[265389, 6698, 294, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[265708, 6707, 273, 6, 32, "Input"],
Cell[265984, 6715, 782, 23, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266803, 6743, 497, 9, 32, "Input"],
Cell[267303, 6754, 14014, 338, 61, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281378, 7099, 93, 1, 93, "Title"],
Cell[281474, 7102, 243, 4, 56, "Input"],
Cell[CellGroupData[{
Cell[281742, 7110, 141, 2, 32, "Input"],
Cell[281886, 7114, 249, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282172, 7124, 437, 8, 55, "Input"],
Cell[282612, 7134, 13919, 337, 61, "Output"],
Cell[296534, 7473, 13919, 337, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310502, 7816, 93, 1, 93, "Title"],
Cell[310598, 7819, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[310800, 7826, 140, 2, 32, "Input"],
Cell[310943, 7830, 287, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311267, 7841, 730, 15, 78, "Input"],
Cell[312000, 7858, 14105, 339, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[326154, 8203, 98, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[326277, 8208, 367, 7, 78, "Input"],
Cell[CellGroupData[{
Cell[326669, 8219, 877, 12, 24, "Print"],
Cell[327549, 8233, 895, 12, 24, "Print"],
Cell[328447, 8247, 888, 12, 24, "Print"],
Cell[329338, 8261, 874, 12, 24, "Print"],
Cell[330215, 8275, 889, 12, 24, "Print"],
Cell[331107, 8289, 883, 12, 24, "Print"],
Cell[331993, 8303, 882, 12, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[332924, 8321, 98, 1, 65, "Section"],
Cell[333025, 8324, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[333227, 8331, 220, 5, 32, "Input"],
Cell[333450, 8338, 191, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333678, 8346, 324, 7, 32, "Input"],
Cell[334005, 8355, 387, 5, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334453, 8367, 97, 1, 93, "Title"],
Cell[334553, 8370, 4460, 111, 420, "Input"],
Cell[CellGroupData[{
Cell[339038, 8485, 106, 1, 35, "Subsubsection"],
Cell[339147, 8488, 906, 21, 123, "Input"],
Cell[CellGroupData[{
Cell[340078, 8513, 2394, 67, 282, "Input"],
Cell[342475, 8582, 513, 13, 57, "Output"],
Cell[342991, 8597, 945, 23, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343973, 8625, 590, 16, 79, "Input"],
Cell[344566, 8643, 89, 1, 32, "Output"],
Cell[344658, 8646, 222, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344917, 8657, 2317, 71, 284, "Input"],
Cell[347237, 8730, 397, 8, 34, "Output"],
Cell[347637, 8740, 372, 7, 34, "Output"]
}, Open  ]],
Cell[348024, 8750, 2045, 47, 217, "Input"],
Cell[CellGroupData[{
Cell[350094, 8801, 738, 10, 32, "Input"],
Cell[350835, 8813, 656, 10, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351540, 8829, 104, 1, 35, "Subsubsection"],
Cell[351647, 8832, 480, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[352152, 8848, 141, 2, 32, "Input"],
Cell[352296, 8852, 150, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352495, 8860, 93, 1, 65, "Section"],
Cell[352591, 8863, 177, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[352793, 8870, 163, 3, 32, "Input"],
Cell[352959, 8875, 87, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353083, 8882, 299, 8, 34, "Input"],
Cell[353385, 8892, 241, 6, 34, "Output"]
}, Open  ]],
Cell[353641, 8901, 363, 9, 34, "Input"],
Cell[354007, 8912, 115, 2, 32, "Input"],
Cell[354125, 8916, 149, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[354299, 8923, 624, 13, 55, "Input"],
Cell[354926, 8938, 280, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355243, 8949, 335, 6, 77, "Input"],
Cell[355581, 8957, 204, 3, 32, "Output"],
Cell[355788, 8962, 232, 4, 32, "Output"],
Cell[356023, 8968, 200, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356260, 8976, 209, 4, 32, "Input"],
Cell[356472, 8982, 175, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356684, 8989, 481, 8, 60, "Subsubsection"],
Cell[357168, 8999, 873, 21, 57, "Input"],
Cell[CellGroupData[{
Cell[358066, 9024, 126, 2, 32, "Input"],
Cell[358195, 9028, 283, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358515, 9038, 327, 7, 34, "Input"],
Cell[358845, 9047, 255, 5, 34, "Output"]
}, Open  ]],
Cell[359115, 9055, 3293, 74, 305, "Input"],
Cell[CellGroupData[{
Cell[362433, 9133, 611, 11, 34, "Input"],
Cell[363047, 9146, 14697, 347, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377781, 9498, 203, 3, 55, "Input"],
Cell[377987, 9503, 206, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378230, 9511, 137, 2, 32, "Input"],
Cell[378370, 9515, 400, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378807, 9527, 402, 6, 32, "Input"],
Cell[379212, 9535, 453, 8, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379726, 9550, 108, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[379859, 9555, 227, 3, 55, "Input"],
Cell[380089, 9560, 510, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380636, 9572, 287, 6, 34, "Input"],
Cell[380926, 9580, 13889, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394852, 9921, 1845, 42, 192, "Input"],
Cell[396700, 9965, 601, 12, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397338, 9982, 1285, 25, 57, "Input"],
Cell[398626, 10009, 14136, 340, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412799, 10354, 260, 5, 32, "Input"],
Cell[413062, 10361, 104, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413203, 10367, 135, 2, 32, "Input"],
Cell[413341, 10371, 105, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413495, 10379, 104, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[413624, 10384, 225, 3, 55, "Input"],
Cell[413852, 10389, 134, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414023, 10396, 148, 2, 32, "Input"],
Cell[414174, 10400, 172, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414383, 10409, 263, 5, 32, "Input"],
Cell[414649, 10416, 13817, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428503, 10756, 249, 4, 32, "Input"],
Cell[428755, 10762, 13796, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442588, 11102, 297, 4, 77, "Input"],
Cell[442888, 11108, 281, 4, 32, "Output"],
Cell[CellGroupData[{
Cell[443194, 11116, 258, 3, 24, "Print"],
Cell[443455, 11121, 276, 3, 24, "Print"],
Cell[443734, 11126, 269, 3, 24, "Print"],
Cell[444006, 11131, 255, 3, 24, "Print"],
Cell[444264, 11136, 273, 3, 24, "Print"],
Cell[444540, 11141, 265, 3, 24, "Print"],
Cell[444808, 11146, 263, 3, 24, "Print"],
Cell[445074, 11151, 267, 3, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445390, 11160, 219, 5, 32, "Input"],
Cell[445612, 11167, 163, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445824, 11175, 106, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[445955, 11180, 159, 2, 55, "Input"],
Cell[446117, 11184, 84, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446238, 11190, 146, 2, 32, "Input"],
Cell[446387, 11194, 193, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446617, 11203, 360, 7, 32, "Input"],
Cell[446980, 11212, 13919, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460936, 11554, 255, 5, 32, "Input"],
Cell[461194, 11561, 13789, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475020, 11901, 159, 2, 55, "Input"],
Cell[475182, 11905, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475326, 11911, 137, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[475488, 11917, 136, 2, 24, "Print"],
Cell[475627, 11921, 156, 2, 24, "Print"],
Cell[475786, 11925, 147, 2, 24, "Print"],
Cell[475936, 11929, 133, 2, 24, "Print"],
Cell[476072, 11933, 148, 2, 24, "Print"],
Cell[476223, 11937, 142, 2, 24, "Print"],
Cell[476368, 11941, 143, 2, 24, "Print"],
Cell[476514, 11945, 144, 2, 24, "Print"],
Cell[476661, 11949, 153, 2, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476863, 11957, 403, 7, 55, "Input"],
Cell[477269, 11966, 13938, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[491232, 12308, 109, 1, 24, "Print"],
Cell[491344, 12311, 129, 1, 24, "Print"],
Cell[491476, 12314, 122, 1, 24, "Print"],
Cell[491601, 12317, 108, 1, 24, "Print"],
Cell[491712, 12320, 121, 1, 24, "Print"],
Cell[491836, 12323, 118, 1, 24, "Print"],
Cell[491957, 12326, 114, 1, 24, "Print"],
Cell[492074, 12329, 117, 1, 24, "Print"],
Cell[492194, 12332, 127, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[492382, 12340, 93, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[492500, 12345, 159, 2, 55, "Input"],
Cell[492662, 12349, 186, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492885, 12357, 671, 14, 78, "Input"],
Cell[493559, 12373, 14017, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[507601, 12715, 159, 2, 24, "Print"],
Cell[507763, 12719, 179, 2, 24, "Print"],
Cell[507945, 12723, 170, 2, 24, "Print"],
Cell[508118, 12727, 156, 2, 24, "Print"],
Cell[508277, 12731, 171, 2, 24, "Print"],
Cell[508451, 12735, 166, 2, 24, "Print"],
Cell[508620, 12739, 164, 2, 24, "Print"],
Cell[508787, 12743, 167, 2, 24, "Print"],
Cell[508957, 12747, 177, 2, 24, "Print"],
Cell[509137, 12751, 161, 2, 24, "Print"]
}, Open  ]],
Cell[509313, 12756, 365, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[509727, 12767, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[509844, 12772, 159, 2, 55, "Input"],
Cell[510006, 12776, 133, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510176, 12783, 580, 13, 78, "Input"],
Cell[510759, 12798, 15059, 357, 61, "Output"],
Cell[CellGroupData[{
Cell[525843, 13159, 209, 3, 24, "Print"],
Cell[526055, 13164, 226, 3, 24, "Print"],
Cell[526284, 13169, 219, 3, 24, "Print"],
Cell[526506, 13174, 203, 3, 24, "Print"],
Cell[526712, 13179, 218, 3, 24, "Print"],
Cell[526933, 13184, 213, 3, 24, "Print"],
Cell[527149, 13189, 211, 3, 24, "Print"],
Cell[527363, 13194, 214, 3, 24, "Print"],
Cell[527580, 13199, 225, 3, 24, "Print"],
Cell[527808, 13204, 210, 3, 24, "Print"],
Cell[528021, 13209, 211, 3, 24, "Print"]
}, Open  ]],
Cell[528247, 13215, 263, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528547, 13224, 253, 4, 55, "Input"],
Cell[528803, 13230, 13813, 335, 61, "Output"],
Cell[CellGroupData[{
Cell[542641, 13569, 138, 2, 24, "Print"],
Cell[542782, 13573, 153, 2, 24, "Print"],
Cell[542938, 13577, 146, 2, 24, "Print"],
Cell[543087, 13581, 132, 2, 24, "Print"],
Cell[543222, 13585, 147, 2, 24, "Print"],
Cell[543372, 13589, 142, 2, 24, "Print"],
Cell[543517, 13593, 142, 2, 24, "Print"],
Cell[543662, 13597, 145, 2, 24, "Print"],
Cell[543810, 13601, 154, 2, 24, "Print"],
Cell[543967, 13605, 139, 2, 24, "Print"],
Cell[544109, 13609, 138, 2, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[544308, 13618, 121, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[544454, 13623, 159, 2, 55, "Input"],
Cell[544616, 13627, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544740, 13633, 855, 19, 123, "Input"],
Cell[545598, 13654, 13887, 336, 61, "Output"],
Cell[559488, 13992, 215, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[559728, 14000, 180, 2, 24, "Print"],
Cell[559911, 14004, 199, 2, 24, "Print"],
Cell[560113, 14008, 194, 2, 24, "Print"],
Cell[560310, 14012, 180, 2, 24, "Print"],
Cell[560493, 14016, 193, 2, 24, "Print"],
Cell[560689, 14020, 188, 2, 24, "Print"],
Cell[560880, 14024, 186, 2, 24, "Print"],
Cell[561069, 14028, 189, 2, 24, "Print"],
Cell[561261, 14032, 202, 2, 24, "Print"],
Cell[561466, 14036, 183, 2, 24, "Print"],
Cell[561652, 14040, 185, 2, 24, "Print"],
Cell[561840, 14044, 193, 2, 24, "Print"]
}, Open  ]],
Cell[562048, 14049, 237, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[562334, 14058, 125, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[562484, 14063, 159, 2, 55, "Input"],
Cell[562646, 14067, 132, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562815, 14074, 953, 20, 123, "Input"],
Cell[563771, 14096, 191, 4, 34, "Output"],
Cell[563965, 14102, 168, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[564158, 14110, 138, 2, 24, "Print"],
Cell[564299, 14114, 153, 2, 24, "Print"],
Cell[564455, 14118, 148, 2, 24, "Print"],
Cell[564606, 14122, 131, 2, 24, "Print"],
Cell[564740, 14126, 149, 2, 24, "Print"],
Cell[564892, 14130, 142, 2, 24, "Print"],
Cell[565037, 14134, 140, 2, 24, "Print"],
Cell[565180, 14138, 143, 2, 24, "Print"],
Cell[565326, 14142, 154, 2, 24, "Print"],
Cell[565483, 14146, 137, 2, 24, "Print"],
Cell[565623, 14150, 142, 2, 24, "Print"],
Cell[565768, 14154, 137, 2, 24, "Print"],
Cell[565908, 14158, 147, 2, 24, "Print"],
Cell[566058, 14162, 146, 2, 24, "Print"]
}, Open  ]],
Cell[566219, 14167, 192, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566460, 14176, 112, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[566597, 14181, 797, 19, 169, "Input"],
Cell[567397, 14202, 211, 5, 34, "Output"],
Cell[567611, 14209, 164, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[567800, 14217, 110, 1, 24, "Print"],
Cell[567913, 14220, 128, 1, 24, "Print"],
Cell[568044, 14223, 120, 1, 24, "Print"],
Cell[568167, 14226, 109, 1, 24, "Print"],
Cell[568279, 14229, 122, 1, 24, "Print"],
Cell[568404, 14232, 119, 1, 24, "Print"],
Cell[568526, 14235, 115, 1, 24, "Print"],
Cell[568644, 14238, 118, 1, 24, "Print"],
Cell[568765, 14241, 129, 1, 24, "Print"],
Cell[568897, 14244, 112, 1, 24, "Print"],
Cell[569012, 14247, 117, 1, 24, "Print"],
Cell[569132, 14250, 112, 1, 24, "Print"],
Cell[569247, 14253, 120, 1, 24, "Print"],
Cell[569370, 14256, 121, 1, 24, "Print"],
Cell[569494, 14259, 110, 1, 24, "Print"]
}, Open  ]],
Cell[569619, 14263, 188, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569856, 14272, 123, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[570004, 14277, 1098, 26, 169, "Input"],
Cell[571105, 14305, 237, 5, 34, "Output"],
Cell[571345, 14312, 192, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[571562, 14320, 161, 2, 24, "Print"],
Cell[571726, 14324, 179, 2, 24, "Print"],
Cell[571908, 14328, 174, 2, 24, "Print"],
Cell[572085, 14332, 158, 2, 24, "Print"],
Cell[572246, 14336, 175, 2, 24, "Print"],
Cell[572424, 14340, 170, 2, 24, "Print"],
Cell[572597, 14344, 166, 2, 24, "Print"],
Cell[572766, 14348, 169, 2, 24, "Print"],
Cell[572938, 14352, 179, 2, 24, "Print"],
Cell[573120, 14356, 162, 2, 24, "Print"],
Cell[573285, 14360, 168, 2, 24, "Print"],
Cell[573456, 14364, 162, 2, 24, "Print"],
Cell[573621, 14368, 171, 2, 24, "Print"],
Cell[573795, 14372, 171, 2, 24, "Print"],
Cell[573969, 14376, 161, 2, 24, "Print"],
Cell[574133, 14380, 169, 2, 24, "Print"]
}, Open  ]],
Cell[574317, 14385, 214, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574580, 14394, 130, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[574735, 14399, 1085, 23, 168, "Input"],
Cell[575823, 14424, 511, 9, 34, "Output"],
Cell[CellGroupData[{
Cell[576359, 14437, 303, 4, 24, "Print"],
Cell[576665, 14443, 323, 4, 24, "Print"],
Cell[576991, 14449, 314, 4, 24, "Print"],
Cell[577308, 14455, 300, 4, 24, "Print"],
Cell[577611, 14461, 315, 4, 24, "Print"],
Cell[577929, 14467, 310, 4, 24, "Print"],
Cell[578242, 14473, 310, 4, 24, "Print"],
Cell[578555, 14479, 311, 4, 24, "Print"],
Cell[578869, 14485, 324, 4, 24, "Print"],
Cell[579196, 14491, 305, 4, 24, "Print"],
Cell[579504, 14497, 310, 4, 24, "Print"],
Cell[579817, 14503, 307, 4, 24, "Print"],
Cell[580127, 14509, 315, 4, 24, "Print"],
Cell[580445, 14515, 314, 4, 24, "Print"],
Cell[580762, 14521, 305, 4, 24, "Print"],
Cell[581070, 14527, 309, 4, 24, "Print"],
Cell[581382, 14533, 318, 4, 24, "Print"]
}, Open  ]],
Cell[581715, 14540, 356, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[582120, 14551, 117, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[582262, 14556, 915, 22, 146, "Input"],
Cell[583180, 14580, 233, 4, 34, "Output"],
Cell[CellGroupData[{
Cell[583438, 14588, 183, 2, 24, "Print"],
Cell[583624, 14592, 201, 2, 24, "Print"],
Cell[583828, 14596, 196, 2, 24, "Print"],
Cell[584027, 14600, 180, 2, 24, "Print"],
Cell[584210, 14604, 195, 2, 24, "Print"],
Cell[584408, 14608, 190, 2, 24, "Print"],
Cell[584601, 14612, 190, 2, 24, "Print"],
Cell[584794, 14616, 191, 2, 24, "Print"],
Cell[584988, 14620, 202, 2, 24, "Print"],
Cell[585193, 14624, 185, 2, 24, "Print"],
Cell[585381, 14628, 188, 2, 24, "Print"],
Cell[585572, 14632, 190, 2, 24, "Print"],
Cell[585765, 14636, 186, 2, 24, "Print"],
Cell[585954, 14640, 193, 2, 24, "Print"],
Cell[586150, 14644, 194, 2, 24, "Print"],
Cell[586347, 14648, 185, 2, 24, "Print"],
Cell[586535, 14652, 189, 2, 24, "Print"],
Cell[586727, 14656, 200, 2, 24, "Print"]
}, Open  ]],
Cell[586942, 14661, 236, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587215, 14669, 253, 4, 55, "Input"],
Cell[587471, 14675, 13838, 336, 61, "Output"],
Cell[CellGroupData[{
Cell[601334, 15015, 110, 1, 24, "Print"],
Cell[601447, 15018, 130, 1, 24, "Print"],
Cell[601580, 15021, 121, 1, 24, "Print"],
Cell[601704, 15024, 107, 1, 24, "Print"],
Cell[601814, 15027, 121, 1, 24, "Print"],
Cell[601938, 15030, 117, 1, 24, "Print"],
Cell[602058, 15033, 113, 1, 24, "Print"],
Cell[602174, 15036, 118, 1, 24, "Print"],
Cell[602295, 15039, 129, 1, 24, "Print"],
Cell[602427, 15042, 109, 1, 24, "Print"],
Cell[602539, 15045, 114, 1, 24, "Print"],
Cell[602656, 15048, 117, 1, 24, "Print"],
Cell[602776, 15051, 113, 1, 24, "Print"],
Cell[602892, 15054, 120, 1, 24, "Print"],
Cell[603015, 15057, 121, 1, 24, "Print"],
Cell[603139, 15060, 112, 1, 24, "Print"],
Cell[603254, 15063, 115, 1, 24, "Print"],
Cell[603372, 15066, 125, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[603558, 15074, 96, 1, 65, "Section"],
Cell[603657, 15077, 264, 6, 57, "Input"],
Cell[CellGroupData[{
Cell[603946, 15087, 617, 13, 99, "Input"],
Cell[604566, 15102, 351, 7, 34, "Output"],
Cell[604920, 15111, 13993, 338, 61, "Output"],
Cell[CellGroupData[{
Cell[618938, 15453, 258, 3, 24, "Print"],
Cell[619199, 15458, 276, 3, 24, "Print"],
Cell[619478, 15463, 268, 3, 24, "Print"],
Cell[619749, 15468, 257, 3, 24, "Print"],
Cell[620009, 15473, 270, 3, 24, "Print"],
Cell[620282, 15478, 265, 3, 24, "Print"],
Cell[620550, 15483, 263, 3, 24, "Print"],
Cell[620816, 15488, 268, 3, 24, "Print"],
Cell[621087, 15493, 277, 3, 24, "Print"],
Cell[621367, 15498, 260, 3, 24, "Print"],
Cell[621630, 15503, 255, 3, 24, "Print"],
Cell[621888, 15508, 263, 3, 24, "Print"],
Cell[622154, 15513, 265, 3, 24, "Print"],
Cell[622422, 15518, 261, 3, 24, "Print"],
Cell[622686, 15523, 268, 3, 24, "Print"],
Cell[622957, 15528, 269, 3, 24, "Print"],
Cell[623229, 15533, 260, 3, 24, "Print"],
Cell[623492, 15538, 264, 3, 24, "Print"],
Cell[623759, 15543, 273, 3, 24, "Print"]
}, Open  ]],
Cell[624047, 15549, 336, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[624432, 15560, 96, 1, 65, "Section"],
Cell[624531, 15563, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[624754, 15572, 475, 10, 99, "Input"],
Cell[625232, 15584, 156, 3, 34, "Output"],
Cell[625391, 15589, 13818, 335, 61, "Output"],
Cell[CellGroupData[{
Cell[639234, 15928, 110, 1, 24, "Print"],
Cell[639347, 15931, 128, 1, 24, "Print"],
Cell[639478, 15934, 121, 1, 24, "Print"],
Cell[639602, 15937, 109, 1, 24, "Print"],
Cell[639714, 15940, 124, 1, 24, "Print"],
Cell[639841, 15943, 119, 1, 24, "Print"],
Cell[639963, 15946, 117, 1, 24, "Print"],
Cell[640083, 15949, 118, 1, 24, "Print"],
Cell[640204, 15952, 129, 1, 24, "Print"],
Cell[640336, 15955, 112, 1, 24, "Print"],
Cell[640451, 15958, 109, 1, 24, "Print"],
Cell[640563, 15961, 115, 1, 24, "Print"],
Cell[640681, 15964, 118, 1, 24, "Print"],
Cell[640802, 15967, 119, 1, 24, "Print"],
Cell[640924, 15970, 113, 1, 24, "Print"],
Cell[641040, 15973, 120, 1, 24, "Print"],
Cell[641163, 15976, 121, 1, 24, "Print"],
Cell[641287, 15979, 112, 1, 24, "Print"],
Cell[641402, 15982, 116, 1, 24, "Print"],
Cell[641521, 15985, 125, 1, 24, "Print"]
}, Open  ]],
Cell[641661, 15989, 161, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[641871, 15997, 99, 1, 65, "Section"],
Cell[641973, 16000, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[642196, 16009, 647, 14, 99, "Input"],
Cell[642846, 16025, 229, 5, 34, "Output"],
Cell[643078, 16032, 13845, 336, 61, "Output"],
Cell[CellGroupData[{
Cell[656948, 16372, 138, 2, 24, "Print"],
Cell[657089, 16376, 153, 2, 24, "Print"],
Cell[657245, 16380, 146, 2, 24, "Print"],
Cell[657394, 16384, 131, 2, 24, "Print"],
Cell[657528, 16388, 147, 2, 24, "Print"],
Cell[657678, 16392, 141, 2, 24, "Print"],
Cell[657822, 16396, 140, 2, 24, "Print"],
Cell[657965, 16400, 143, 2, 24, "Print"],
Cell[658111, 16404, 154, 2, 24, "Print"],
Cell[658268, 16408, 137, 2, 24, "Print"],
Cell[658408, 16412, 132, 2, 24, "Print"],
Cell[658543, 16416, 140, 2, 24, "Print"],
Cell[658686, 16420, 143, 2, 24, "Print"],
Cell[658832, 16424, 144, 2, 24, "Print"],
Cell[658979, 16428, 142, 2, 24, "Print"],
Cell[659124, 16432, 140, 2, 24, "Print"],
Cell[659267, 16436, 145, 2, 24, "Print"],
Cell[659415, 16440, 146, 2, 24, "Print"],
Cell[659564, 16444, 137, 2, 24, "Print"],
Cell[659704, 16448, 141, 2, 24, "Print"],
Cell[659848, 16452, 152, 2, 24, "Print"]
}, Open  ]],
Cell[660015, 16457, 188, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[660252, 16466, 138, 2, 65, "Section"],
Cell[660393, 16470, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[660616, 16479, 125, 2, 32, "Input"],
Cell[660744, 16483, 13817, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674598, 16823, 129, 2, 32, "Input"],
Cell[674730, 16827, 13813, 335, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688592, 17168, 92, 1, 65, "Section"],
Cell[688687, 17171, 198, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[688910, 17180, 139, 2, 32, "Input"],
Cell[689052, 17184, 208, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689297, 17193, 128, 2, 32, "Input"],
Cell[689428, 17197, 13813, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703278, 17537, 321, 5, 32, "Input"],
Cell[703602, 17544, 13967, 337, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[717606, 17886, 134, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[717765, 17892, 110, 1, 24, "Print"],
Cell[717878, 17895, 128, 1, 24, "Print"],
Cell[718009, 17898, 121, 1, 24, "Print"],
Cell[718133, 17901, 107, 1, 24, "Print"],
Cell[718243, 17904, 124, 1, 24, "Print"],
Cell[718370, 17907, 116, 1, 24, "Print"],
Cell[718489, 17910, 115, 1, 24, "Print"],
Cell[718607, 17913, 118, 1, 24, "Print"],
Cell[718728, 17916, 129, 1, 24, "Print"],
Cell[718860, 17919, 112, 1, 24, "Print"],
Cell[718975, 17922, 107, 1, 24, "Print"],
Cell[719085, 17925, 115, 1, 24, "Print"],
Cell[719203, 17928, 118, 1, 24, "Print"],
Cell[719324, 17931, 120, 1, 24, "Print"],
Cell[719447, 17934, 117, 1, 24, "Print"],
Cell[719567, 17937, 117, 1, 24, "Print"],
Cell[719687, 17940, 113, 1, 24, "Print"],
Cell[719803, 17943, 120, 1, 24, "Print"],
Cell[719926, 17946, 123, 1, 24, "Print"],
Cell[720052, 17949, 110, 1, 24, "Print"],
Cell[720165, 17952, 116, 1, 24, "Print"],
Cell[720284, 17955, 125, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[720470, 17963, 93, 1, 65, "Section"],
Cell[720566, 17966, 198, 5, 57, "Input"],
Cell[720767, 17973, 1665, 44, 236, "Input"],
Cell[CellGroupData[{
Cell[722457, 18021, 180, 3, 34, "Input"],
Cell[722640, 18026, 225, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722902, 18037, 1069, 15, 77, "Input"],
Cell[723974, 18054, 218, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724229, 18062, 453, 9, 34, "Input"],
Cell[724685, 18073, 14166, 338, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738888, 18416, 68, 1, 32, "Input"],
Cell[738959, 18419, 296, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739292, 18431, 295, 7, 55, "Input"],
Cell[739590, 18440, 145, 2, 32, "Output"]
}, Open  ]],
Cell[739750, 18445, 98, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[739873, 18450, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[739997, 18455, 629, 14, 124, "Input"],
Cell[740629, 18471, 14142, 339, 61, "Output"],
Cell[754774, 18812, 395, 9, 34, "Output"],
Cell[755172, 18823, 316, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755525, 18833, 139, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[755689, 18839, 211, 2, 24, "Print"],
Cell[755903, 18843, 186, 2, 24, "Print"],
Cell[756092, 18847, 204, 2, 24, "Print"],
Cell[756299, 18851, 197, 2, 24, "Print"],
Cell[756499, 18855, 182, 2, 24, "Print"],
Cell[756684, 18859, 200, 2, 24, "Print"],
Cell[756887, 18863, 193, 2, 24, "Print"],
Cell[757083, 18867, 190, 2, 24, "Print"],
Cell[757276, 18871, 194, 2, 24, "Print"],
Cell[757473, 18875, 205, 2, 24, "Print"],
Cell[757681, 18879, 190, 2, 24, "Print"],
Cell[757874, 18883, 183, 2, 24, "Print"],
Cell[758060, 18887, 191, 2, 24, "Print"],
Cell[758254, 18891, 192, 2, 24, "Print"],
Cell[758449, 18895, 196, 2, 24, "Print"],
Cell[758648, 18899, 191, 2, 24, "Print"],
Cell[758842, 18903, 195, 2, 24, "Print"],
Cell[759040, 18907, 191, 2, 24, "Print"],
Cell[759234, 18911, 196, 2, 24, "Print"],
Cell[759433, 18915, 197, 2, 24, "Print"],
Cell[759633, 18919, 188, 2, 24, "Print"],
Cell[759824, 18923, 194, 2, 24, "Print"],
Cell[760021, 18927, 201, 2, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[760295, 18937, 100, 1, 65, "Section"],
Cell[760398, 18940, 428, 10, 101, "Input"],
Cell[760829, 18952, 200, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[761054, 18959, 131, 2, 32, "Input"],
Cell[761188, 18963, 186, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761411, 18970, 183, 3, 32, "Input"],
Cell[761597, 18975, 13838, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775472, 19316, 126, 2, 32, "Input"],
Cell[775601, 19320, 13838, 336, 61, "Output"]
}, Open  ]],
Cell[789454, 19659, 144, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[789623, 19665, 128, 2, 32, "Input"],
Cell[789754, 19669, 93, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789884, 19675, 165, 3, 34, "Input"],
Cell[790052, 19680, 75, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[790176, 19687, 101, 1, 65, "Section"],
Cell[790280, 19690, 429, 10, 101, "Input"],
Cell[CellGroupData[{
Cell[790734, 19704, 151, 2, 32, "Input"],
Cell[790888, 19708, 248, 5, 34, "Output"]
}, Open  ]],
Cell[791151, 19716, 550, 11, 56, "Input"],
Cell[CellGroupData[{
Cell[791726, 19731, 147, 2, 32, "Input"],
Cell[791876, 19735, 14960, 355, 61, "Output"]
}, Open  ]],
Cell[806851, 20093, 145, 2, 32, "Input"],
Cell[806999, 20097, 111, 1, 32, "Input"],
Cell[807113, 20100, 94, 1, 32, "Input"],
Cell[807210, 20103, 270, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[807505, 20112, 144, 2, 32, "Input"],
Cell[807652, 20116, 13815, 335, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[821504, 20456, 241, 4, 32, "Input"],
Cell[821748, 20462, 13910, 337, 61, "Output"]
}, Open  ]],
Cell[835673, 20802, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[835792, 20807, 167, 3, 32, "Input"],
Cell[835962, 20812, 107, 1, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836106, 20818, 189, 3, 32, "Input"],
Cell[836298, 20823, 136, 3, 34, "Output"]
}, Open  ]],
Cell[836449, 20829, 563, 9, 32, "Input"],
Cell[837015, 20840, 174, 3, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[837226, 20848, 91, 1, 65, "Section"],
Cell[837320, 20851, 92, 1, 32, "Input"],
Cell[837415, 20854, 355, 8, 79, "Input"],
Cell[CellGroupData[{
Cell[837795, 20866, 398, 8, 55, "Input"],
Cell[838196, 20876, 158, 3, 34, "Output"],
Cell[838357, 20881, 143, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838537, 20887, 135, 2, 32, "Input"],
Cell[838675, 20891, 160, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838872, 20900, 135, 2, 32, "Input"],
Cell[839010, 20904, 524, 9, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[839571, 20918, 355, 7, 34, "Input"],
Cell[839929, 20927, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[840045, 20933, 243, 5, 32, "Input"],
Cell[840291, 20940, 99, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[840439, 20947, 92, 1, 65, "Section"],
Cell[840534, 20950, 147, 2, 32, "Input"],
Cell[840684, 20954, 298, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[841007, 20964, 91, 1, 32, "Input"],
Cell[841101, 20967, 140, 3, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[841290, 20976, 143, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[841458, 20982, 386, 8, 78, "Input"],
Cell[841847, 20992, 204, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[842088, 21000, 138, 2, 32, "Input"],
Cell[842229, 21004, 152, 4, 32, "Output"]
}, Open  ]],
Cell[842396, 21011, 173, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[842594, 21018, 333, 7, 34, "Input"],
Cell[842930, 21027, 500, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843467, 21041, 186, 3, 32, "Input"],
Cell[843656, 21046, 247, 5, 23, "Message"],
Cell[843906, 21053, 217, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844160, 21062, 133, 2, 32, "Input"],
Cell[844296, 21066, 617, 10, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844950, 21081, 482, 10, 34, "Input"],
Cell[845435, 21093, 250, 5, 23, "Message"],
Cell[845688, 21100, 686, 12, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846411, 21117, 165, 3, 32, "Input"],
Cell[846579, 21122, 188, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846804, 21131, 143, 2, 32, "Input"],
Cell[846950, 21135, 157, 4, 32, "Output"]
}, Open  ]],
Cell[847122, 21142, 92, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847251, 21148, 102, 1, 65, "Section"],
Cell[847356, 21151, 340, 7, 78, "Input"],
Cell[847699, 21160, 129, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[847853, 21166, 143, 2, 32, "Input"],
Cell[847999, 21170, 121, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848157, 21176, 134, 2, 32, "Input"],
Cell[848294, 21180, 79, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[848422, 21187, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[848539, 21192, 418, 7, 77, "Input"],
Cell[848960, 21201, 550, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849547, 21214, 127, 2, 32, "Input"],
Cell[849677, 21218, 13822, 336, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863536, 21559, 130, 2, 32, "Input"],
Cell[863669, 21563, 429, 8, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[864135, 21576, 261, 5, 32, "Input"],
Cell[864399, 21583, 909, 25, 123, "Output"]
}, Open  ]],
Cell[865323, 21611, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[865440, 21616, 219, 5, 34, "Input"],
Cell[865662, 21623, 1000, 26, 123, "Output"]
}, Open  ]],
Cell[866677, 21652, 142, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[866844, 21658, 417, 10, 57, "Input"],
Cell[867264, 21670, 327, 7, 23, "Message"],
Cell[867594, 21679, 330, 7, 23, "Message"],
Cell[867927, 21688, 328, 7, 23, "Message"],
Cell[868258, 21697, 403, 8, 23, "Message"],
Cell[868664, 21707, 326, 7, 23, "Message"],
Cell[868993, 21716, 185, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869215, 21725, 249, 5, 34, "Input"],
Cell[869467, 21732, 375, 7, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869879, 21744, 196, 3, 32, "Input"],
Cell[870078, 21749, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[870189, 21755, 292, 6, 32, "Input"],
Cell[870484, 21763, 126, 2, 32, "Output"]
}, Open  ]],
Cell[870625, 21768, 102, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[870764, 21774, 91, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[870880, 21779, 250, 4, 77, "Input"],
Cell[871133, 21785, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871277, 21791, 132, 2, 32, "Input"],
Cell[871412, 21795, 129, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871578, 21802, 151, 3, 32, "Input"],
Cell[871732, 21807, 126, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871895, 21814, 215, 5, 32, "Input"],
Cell[872113, 21821, 1110, 25, 80, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[873272, 21852, 90, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[873387, 21857, 576, 10, 78, "Input"],
Cell[873966, 21869, 334, 5, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874337, 21879, 2229, 37, 540, "Input"],
Cell[876569, 21918, 188, 3, 24, "Print"],
Cell[876760, 21923, 576, 11, 23, "Message"],
Cell[877339, 21936, 616, 11, 41, "Message"],
Cell[877958, 21949, 616, 11, 41, "Message"],
Cell[878577, 21962, 576, 10, 23, "Message"],
Cell[879156, 21974, 576, 10, 23, "Message"],
Cell[879735, 21986, 607, 11, 40, "Message"],
Cell[880345, 21999, 607, 11, 40, "Message"],
Cell[880955, 22012, 573, 10, 23, "Message"],
Cell[881531, 22024, 573, 10, 23, "Message"],
Cell[882107, 22036, 571, 10, 23, "Message"],
Cell[882681, 22048, 572, 10, 23, "Message"],
Cell[883256, 22060, 575, 10, 23, "Message"],
Cell[883834, 22072, 575, 10, 23, "Message"],
Cell[884412, 22084, 556, 10, 23, "Message"],
Cell[884971, 22096, 556, 10, 23, "Message"],
Cell[885530, 22108, 568, 10, 23, "Message"],
Cell[886101, 22120, 570, 10, 23, "Message"],
Cell[886674, 22132, 565, 10, 23, "Message"],
Cell[887242, 22144, 566, 10, 23, "Message"],
Cell[887811, 22156, 570, 10, 23, "Message"],
Cell[888384, 22168, 568, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888989, 22183, 133, 2, 32, "Input"],
Cell[889125, 22187, 524, 9, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889686, 22201, 494, 9, 100, "Input"],
Cell[890183, 22212, 89, 1, 24, "Print"],
Cell[890275, 22215, 338, 8, 23, "Message"],
Cell[890616, 22225, 336, 8, 23, "Message"],
Cell[890955, 22235, 352, 7, 23, "Message"],
Cell[891310, 22244, 338, 8, 23, "Message"],
Cell[891651, 22254, 371, 7, 23, "Message"],
Cell[892025, 22263, 360, 8, 23, "Message"],
Cell[892388, 22273, 360, 8, 23, "Message"],
Cell[892751, 22283, 373, 7, 23, "Message"],
Cell[893127, 22292, 325, 6, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[893489, 22303, 549, 9, 100, "Input"],
Cell[894041, 22314, 257, 3, 24, "Print"],
Cell[894301, 22319, 1255, 25, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[895593, 22349, 131, 2, 32, "Input"],
Cell[895727, 22353, 412, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896176, 22367, 536, 10, 100, "Input"],
Cell[896715, 22379, 113, 1, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896865, 22385, 243, 6, 32, "Input"],
Cell[897111, 22393, 910, 16, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898058, 22414, 434, 9, 57, "Input"],
Cell[898495, 22425, 912, 16, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899444, 22446, 166, 2, 32, "Input"],
Cell[899613, 22450, 388, 8, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900038, 22463, 632, 13, 102, "Input"],
Cell[900673, 22478, 428, 6, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901138, 22489, 65, 1, 32, "Input"],
Cell[901206, 22492, 363, 8, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901606, 22505, 186, 3, 32, "Input"],
Cell[901795, 22510, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901931, 22516, 264, 5, 32, "Input"],
Cell[902198, 22523, 914, 16, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903149, 22544, 233, 5, 32, "Input"],
Cell[903385, 22551, 279, 6, 23, "Message"],
Cell[903667, 22559, 220, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903924, 22568, 215, 5, 34, "Input"],
Cell[904142, 22575, 262, 6, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904453, 22587, 97, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[904575, 22592, 1143, 19, 123, "Input"],
Cell[905721, 22613, 440, 6, 24, "Print"],
Cell[906164, 22621, 293, 7, 23, "Message"],
Cell[906460, 22630, 291, 7, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[906788, 22642, 67, 1, 32, "Input"],
Cell[906858, 22645, 355, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907250, 22657, 180, 3, 32, "Input"],
Cell[907433, 22662, 314, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907784, 22672, 128, 2, 32, "Input"],
Cell[907915, 22676, 45485, 1253, 2022, "Print"]
}, Open  ]],
Cell[953415, 23932, 276, 4, 55, "Input"],
Cell[CellGroupData[{
Cell[953716, 23940, 611, 8, 77, "Input"],
Cell[954330, 23950, 604, 8, 24, "Print"],
Cell[954937, 23960, 1429, 24, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956403, 23989, 144, 2, 32, "Input"],
Cell[956550, 23993, 13815, 335, 61, "Output"]
}, Open  ]],
Cell[970380, 24331, 183, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[970588, 24338, 166, 3, 32, "Input"],
Cell[970757, 24343, 996, 18, 80, "Output"]
}, Open  ]],
Cell[971768, 24364, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[971885, 24369, 445, 11, 56, "Input"],
Cell[972333, 24382, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972469, 24388, 142, 2, 32, "Input"],
Cell[972614, 24392, 307, 7, 23, "Message"],
Cell[972924, 24401, 100, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[973061, 24407, 308, 7, 34, "Input"],
Cell[973372, 24416, 109, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[973518, 24422, 475, 12, 34, "Input"],
Cell[973996, 24436, 103, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974136, 24442, 338, 7, 34, "Input"],
Cell[974477, 24451, 381, 7, 23, "Message"],
Cell[974861, 24460, 176, 3, 34, "Output"]
}, Open  ]],
Cell[975052, 24466, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[975169, 24471, 214, 4, 34, "Input"],
Cell[975386, 24477, 83, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975506, 24483, 847, 19, 80, "Input"],
Cell[976356, 24504, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976472, 24510, 365, 6, 77, "Input"],
Cell[976840, 24518, 163, 2, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977040, 24525, 130, 2, 32, "Input"],
Cell[977173, 24529, 135, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977345, 24536, 181, 3, 32, "Input"],
Cell[977529, 24541, 14983, 356, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992549, 24902, 348, 5, 32, "Input"],
Cell[992900, 24909, 453, 12, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

