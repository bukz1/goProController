(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    589593,      11907]
NotebookOptionsPosition[    576247,      11453]
NotebookOutlinePosition[    579026,      11522]
CellTagsIndexPosition[    578944,      11517]
WindowTitle->HERO3 & HERO3+
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["GO PRO CONTROLLER TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Downloading and deleting files from GoProHERO2HERO3 & \
HERO3+HERO4goProSetup\"\>":>Documentation`HelpLookup[
       "paclet:GoProController/tutorial/goProDownload"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"GoProController/tutorial/HERO3\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["GoProController/tutorial/HERO3"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/GoProController/\
tutorial/HERO3.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$15264], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "GoProController/tutorial/HERO3", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["HERO3 & HERO3+", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Package setup"],"paclet:GoProController/tutorial/HERO3#1147065604",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Controlling the camera"],
      "paclet:GoProController/tutorial/HERO3#2020261348",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Setting camera parameters"],
      "paclet:GoProController/tutorial/HERO3#1610906309",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Downloading and deleting files from camera"],
      "paclet:GoProController/tutorial/HERO3#889545618",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
This tutorial will help you to understand controlling of GoPro HERO3 or \
HERO3+ cameras. It is highly recommended to read the manual for this camera \
model, it can be found on GoPro website.\
\>", "Text",
 CellID->591812887],

Cell[CellGroupData[{

Cell["Package setup", "Section",
 CellID->1147065604],

Cell["\<\
Before controlling camera you need to set the package first. You have to do \
that because package need to know which files have to be loaded and it is \
impossible to control goProCamera without WiFi password.\
\>", "Text",
 CellID->1127271971],

Cell[BoxData[GridBox[{
   {
    RowBox[{"goProSetCamera", "[", "camera", "]"}], Cell["\<\
Sets camera generation to parameter given. You can use goPoGetPossibleCamera \
to see which cameras are supported by this package.\
\>", "TableText"]},
   {
    RowBox[{"goProGetPossibleCamera", "[", "]"}], Cell[
    "returns possible cameras for this package", "TableText"]},
   {
    RowBox[{"goProSetPassword", " ", "[", "password_String", "]"}], Cell["\<\
you need to call this function to set camera WiFi password. Without that \
package can't control your camera.\
\>", "TableText"]},
   {
    RowBox[{"goProSetCameraModel", "[", "model", "]"}], Cell["\<\
Specificates camera model in generation (Black, White,..). The package needs \
this information.\
\>", "TableText"]},
   {
    RowBox[{"goProGetPossibleCameraMode", "[", "]"}], Cell[
    "returns possible camera models within generation", "TableText"]}
  }]], "DefinitionBox",
 CellID->932885528],

Cell["Package setup functions.", "Caption",
 CellID->492680226],

Cell["\<\
This loads the package GoProController and set it for usage of GoProHERO 2 \
cameras:\
\>", "MathCaption",
 CellID->1825449234],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGetPossibleCamera", "[", "]"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->1373894796],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"HERO3+\"\>", ",", "\<\"HERO4\"\>", ",", "\<\"HERO2\"\>", 
   ",", "\<\"HERO3\"\>"}], "}"}]], "Output",
 ImageSize->{232, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[9]=",
 CellID->1150631099]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<HERO3\>\"", "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->222653374],

Cell[BoxData["\<\"camera: HERO3\"\>"], "Print",
 CellLabel->"During evaluation of In[10]:=",
 CellID->916688877]
}, Open  ]],

Cell["\<\
Without set camera model package can't work properly. Some functions need \
this information.\
\>", "Text",
 CellID->479826094],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossiblePhotoRes", "[", "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->289713918],

Cell[BoxData[
 TemplateBox[{
  "goProSetCameraModel","model",
   "\"First you have to specificate camera model! Call \
goProSetCameraModel[_String]\"",2,11,1,31795784851746103925,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[11]:=",
 CellID->1154940287]
}, Open  ]],

Cell["Listing camera models.", "Text",
 CellID->451072549],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleCameraModel", "[", "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->1453594133],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"White\"\>", ",", "\<\"Silver\"\>", ",", "\<\"Black\"\>"}], 
  "}"}]], "Output",
 ImageSize->{179, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->254642332]
}, Open  ]],

Cell["The camera models are different for each camera generation.", "Text",
 CellID->490632353],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->342547117],

Cell[BoxData["\<\"camera: HERO3+\"\>"], "Print",
 CellLabel->"During evaluation of In[13]:=",
 CellID->1988807061]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleCameraModel", "[", "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1604500669],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Silver\"\>", ",", "\<\"Black\"\>"}], "}"}]], "Output",
 ImageSize->{124, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->1559618771]
}, Open  ]],

Cell["After setting camera model the package will work properly.", "Text",
 CellID->1377125043],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProSetCameraModel", "[", "\"\<Black\>\"", "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->1537297477],

Cell[BoxData["\<\"Black\"\>"], "Output",
 ImageSize->{45, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->729303512]
}, Open  ]],

Cell["\<\
Now we have loaded the package and set it to HERO3 or HERO3+. The next step \
is to set  the password for WiFi which the camera is broadcasting. Without \
that camera can't be controlled.\
\>", "MathCaption",
 CellID->147134958],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"if", " ", "the", " ", "password", " ", "is", " ", "12345678"}], 
   "*)"}], ";"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->1582738395]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting camera parameters", "Section",
 CellID->1610906309],

Cell["\<\
For setting camera parameters we use functions which names starts on string \
\"goProSet \". Those functions can set only one parameter of camera at time. \
For example function goProSetVideoRes[_String] will set video resolution of \
camera.\
\>", "Text",
 CellID->287586024],

Cell[TextData[{
 "The second way to set camera is to use function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["goProSet"]],"paclet:GoProController/ref/goProSet"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". This function will let us specify many parameters of camera at once and \
it works through ",
 ButtonBox["Options",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Options"],
 ". The default value for every option is  the value on which is camera \
currently set. If it wasn't this way camera would be set to default options \
with every usage of this function (except the options used in its  use)."
}], "Text",
 CellID->1758738144],

Cell[BoxData[GridBox[{
   {"videoResolution", Cell["Sets video resolution.", "TableText"]},
   {"fov", Cell["Sets the field of view.", "TableText"]},
   {"fps", Cell["Sets frames per second.", "TableText"]},
   {"videoMode", Cell["Sets camera to given mode.", "TableText"]},
   {"photoResolution", Cell["Sets photo resolution.", "TableText"]},
   {"timeLapse", Cell["Sets Time lapse interval.", "TableText"]},
   {"volume", Cell["Sets volume of camera beeping", "TableText"]},
   {"led", Cell["Sets number of flashing camera led makes.", "TableText"]},
   {"spotMeter", Cell["Switches spot meter on or off.", "TableText"]},
   {"autoPowerOff", Cell[
    "Sets automatic turning off the camera.", "TableText"]},
   {"protune", Cell["Switches protune on or of.", "TableText"]},
   {"bootMode", Cell["Sets default boot mode of camera", "TableText"]},
   {"loopVideo", Cell["Sets video in loop.", "TableText"]},
   {"burstRate", Cell[
    "\[AliasDelimiter]Sets rate of burst mode.", "TableText"]},
   {"continuousShot", Cell["Sets continuous photo.", "TableText"]},
   {"lowLight", Cell["Switches low light on or off.", "TableText"]},
   {"whiteBalance", Cell["Sets white balance.", "TableText"]},
   {"photoInVideo", Cell["Sets photo in video.", "TableText"]}
  }]], "DefinitionBox",
 CellID->565688341],

Cell["Setting camera parameters for HERO3.", "Caption",
 CellID->1466032346],

Cell[BoxData[GridBox[{
   {"videoResolution", Cell["Sets video resolution.", "TableText"]},
   {"fov", Cell["Sets the field of view.", "TableText"]},
   {"fps", Cell["Sets frames per second.", "TableText"]},
   {"videoMode", Cell["Sets camera to given mode.", "TableText"]},
   {"photoResolution", Cell["Sets photo resolution.", "TableText"]},
   {"timeLapse", Cell["Sets Time lapse interval.", "TableText"]},
   {"volume", Cell["Sets volume of camera beeping", "TableText"]},
   {"led", Cell["Sets number of flashing camera led makes.", "TableText"]},
   {"spotMeter", Cell["Switches spot meter on or off.", "TableText"]},
   {"autoPowerOff", Cell[
    "Sets automatic turning off the camera.", "TableText"]},
   {"protune", Cell["Switches protune on or of.", "TableText"]},
   {"bootMode", Cell["Sets default boot mode of camera", "TableText"]},
   {"loopVideo", Cell["Sets video in loop.", "TableText"]},
   {"burstRate", Cell[
    "\[AliasDelimiter]Sets rate of burst mode.", "TableText"]},
   {"continuousShot", Cell["Sets continuous photo.", "TableText"]},
   {"lowLight", Cell["Switches low light on or off.", "TableText"]},
   {"whiteBalance", Cell["Sets white balance.", "TableText"]},
   {"photoInVideo", Cell["Sets photo in video.", "TableText"]},
   {"colorProfile", Cell["Sets color profile.", "TableText"]},
   {"iso", Cell["Sets iso.", "TableText"]},
   {"sharpness", Cell["Sets sharpness.", "TableText"]},
   {"exposure", Cell["Sets exposure compensation.", "TableText"]}
  }]], "DefinitionBox",
 CellID->188903013],

Cell["Setting camera parameters for HERO3+.", "Caption",
 CellID->923594839],

Cell["Setting package to HERO3/HERO3+", "MathCaption",
 CellID->441051913],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Setting", " ", "the", " ", "package", " ", "to", " ", "HERO3"}], 
    "+"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"goProSetCameraModel", "[", "\"\<Black\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{"if", " ", "the", " ", "password", " ", "is", " ", "12345678"}], 
     "*)"}], ";"}]}]}]], "Input",
 CellLabel->"In[16]:=",
 CellID->1211772279],

Cell[BoxData["\<\"camera: HERO3+\"\>"], "Print",
 CellLabel->"During evaluation of In[16]:=",
 CellID->1199642347],

Cell[BoxData["\<\"Black\"\>"], "Output",
 ImageSize->{45, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->1045176390]
}, Open  ]],

Cell["\<\
It is important to turn on the camera before trying to control it ! Otherwise \
the package will not work properly.\
\>", "MathCaption",
 CellID->2011084192],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProTurnOn", "[", "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1341113980],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "1"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "1"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "1"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->1586005692]
}, Open  ]],

Cell["Get possible parameters for some setting", "MathCaption",
 CellID->1353514701],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "possible", " ", "parameters", " ", "for", " ", "goProSetPhotoRes", " ", 
    "or", " ", 
    RowBox[{"goProSet", "[", 
     RowBox[{"photoResolution", "\[Rule]", "param"}], "]"}]}], 
   "*)"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->1387146263],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5M\"\>", ",", "\<\"7W\"\>", ",", "\<\"12W\"\>", 
   ",", "\<\"7M\"\>"}], "}"}]], "Output",
 ImageSize->{138, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[20]=",
 CellID->43751577]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleBootMode", "[", "]"}]], "Input",
 CellLabel->"In[21]:=",
 CellID->915282352],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Video\"\>", ",", "\<\"Photo\"\>", ",", "\<\"Burst\"\>", 
   ",", "\<\"TimeLapse\"\>"}], "}"}]], "Output",
 ImageSize->{257, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->1439268646]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->199735315],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"60\"\>", ",", "\<\"120\"\>", 
   ",", "\<\"300\"\>"}], "}"}]], "Output",
 ImageSize->{151, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->2024954867]
}, Open  ]],

Cell["Get possible parameters for some setting", "MathCaption",
 CellID->1245402537],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "possible", " ", "parameters", " ", "for", " ", "goProSetPhotoRes", " ", 
    "or", " ", 
    RowBox[{"goProSet", "[", 
     RowBox[{"photoResolution", "\[Rule]", "param"}], "]"}]}], 
   "*)"}]}]], "Input",
 CellLabel->"In[31]:=",
 CellID->1664779243],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5M\"\>", ",", "\<\"7W\"\>", ",", "\<\"12W\"\>", 
   ",", "\<\"7M\"\>"}], "}"}]], "Output",
 ImageSize->{138, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[31]=",
 CellID->433984472]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleBootMode", "[", "]"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->257847417],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Video\"\>", ",", "\<\"Photo\"\>", ",", "\<\"Burst\"\>", 
   ",", "\<\"TimeLapse\"\>"}], "}"}]], "Output",
 ImageSize->{257, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[32]=",
 CellID->547561335]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleAutoPowerOff", "[", "]"}]], "Input",
 CellLabel->"In[33]:=",
 CellID->1468055911],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"off\"\>", ",", "\<\"60\"\>", ",", "\<\"120\"\>", 
   ",", "\<\"300\"\>"}], "}"}]], "Output",
 ImageSize->{151, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[33]=",
 CellID->1947882005]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetPossibleVideoRes", "[", "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->1702277935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"WVGA\"\>", ",", "\<\"720p\"\>", ",", "\<\"960p\"\>", 
   ",", "\<\"1080p\"\>", ",", "\<\"1440p\"\>", ",", "\<\"2.7K\"\>", 
   ",", "\<\"4K\"\>", ",", "\<\"2.7K-17:9\"\>", ",", "\<\"4K-17:9\"\>", 
   ",", "\<\"1080p-SV\"\>", ",", "\<\"720p-SV\"\>"}], "}"}]], "Output",
 ImageSize->{354, 37},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[34]=",
 CellID->1588924759]
}, Open  ]],

Cell["Example of setting camera parameters.", "MathCaption",
 CellID->388558967],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vars", "=", 
  RowBox[{"goProGetVariables", "[", "]"}]}]], "Input",
 CellLabel->"In[37]:=",
 CellID->940580666],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "videoResolution", ",", "fps", ",", "fov", ",", "videoMode", ",", 
   "photoResolution", ",", "loopVideo", ",", "burstRate", ",", "timeLapse", 
   ",", "continuousShot", ",", "photoInVideo", ",", "volume", ",", "led", ",",
    "lowLight", ",", "spotMeter", ",", "autoPowerOff", ",", "protune", ",", 
   "whiteBalance", ",", "colorProfile", ",", "iso", ",", "sharpness", ",", 
   "exposure", ",", "mode", ",", "bootMode"}], "}"}]], "Output",
 ImageSize->{523, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[37]=",
 CellID->1684890504]
}, Open  ]],

Cell[BoxData[
 RowBox[{"goProSet", "[", 
  RowBox[{
   RowBox[{"vars", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[Rule]", "\"\<1080p\>\""}], "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->251470906],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"goProGetPossiblePhotoRes", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSet", "[", 
  RowBox[{"photoResolution", "\[Rule]", "\"\<12W\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{"photoResolution", ",", "videoResolution"}], "}"}], 
  "]"}]}], "Input",
 CellLabel->"In[39]:=",
 CellID->274056890],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5M\"\>", ",", "\<\"7W\"\>", ",", "\<\"12W\"\>", 
   ",", "\<\"7M\"\>"}], "}"}]], "Output",
 ImageSize->{138, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[39]=",
 CellID->21669456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"1080p\"\>"}]}], 
  "}"}]], "Output",
 ImageSize->{379, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[41]=",
 CellID->210415814]
}, Open  ]],

Cell["\<\
Next example will show you how to see which parameters are set on camera\
\>", "MathCaption",
 CellID->1445740488],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGet", "[", 
  RowBox[{"{", 
   RowBox[{
   "photoResolution", ",", "timeLapse", ",", "videoResolution", ",", 
    "videoMode"}], "}"}], "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->1967973851],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}]}], 
  "}"}]], "Output",
 ImageSize->{341, 37},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[42]=",
 CellID->1487701802]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"goProGet", "[", 
   RowBox[{"goProGetVariables", "[", "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "list", " ", "of", " ", "all", " ", "settings", " ", "from", 
    " ", "camera"}], "*)"}]}]], "Input",
 CellLabel->"In[43]:=",
 CellID->103095197],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"videoResolution\"\>", "\[Rule]", "\<\"1080p\"\>"}], ",", 
   RowBox[{"\<\"fps\"\>", "\[Rule]", "\<\"60\"\>"}], ",", 
   RowBox[{"\<\"fov\"\>", "\[Rule]", "\<\"wide\"\>"}], ",", 
   RowBox[{"\<\"videoMode\"\>", "\[Rule]", "\<\"ntsc\"\>"}], ",", 
   RowBox[{"\<\"photoResolution\"\>", "\[Rule]", "\<\"12W\"\>"}], ",", 
   RowBox[{"\<\"loopVideo\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"burstRate\"\>", "\[Rule]", "\<\"3/1\"\>"}], ",", 
   RowBox[{"\<\"timeLapse\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
   RowBox[{"\<\"continuousShot\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
   RowBox[{"\<\"photoInVideo\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"led\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
   RowBox[{"\<\"lowLight\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"spotMeter\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"autoPowerOff\"\>", "\[Rule]", "\<\"off\"\>"}], ",", 
   RowBox[{"\<\"protune\"\>", "\[Rule]", "\<\"on\"\>"}], ",", 
   RowBox[{"\<\"whiteBalance\"\>", "\[Rule]", "\<\"auto\"\>"}], ",", 
   RowBox[{"\<\"colorProfile\"\>", "\[Rule]", "\<\"gopro\"\>"}], ",", 
   RowBox[{"\<\"iso\"\>", "\[Rule]", "\<\"6400\"\>"}], ",", 
   RowBox[{"\<\"sharpness\"\>", "\[Rule]", "\<\"high\"\>"}], ",", 
   RowBox[{"\<\"exposure\"\>", "\[Rule]", "\<\"0\"\>"}], ",", 
   RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Photo\"\>"}], ",", 
   RowBox[{"\<\"bootMode\"\>", "\[Rule]", "\<\"Video\"\>"}]}], 
  "}"}]], "Output",
 ImageSize->{540, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[43]=",
 CellID->399318827]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GoProController`*"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->1524235264],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["GoProController`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["GoProController`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["goProBurstMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProBurstMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSet",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSet", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDeleteAll",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProDeleteAll", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetAutoPowerOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetAutoPowerOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDeleteLast",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProDeleteLast", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetBootMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetBootMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDownloadAllFiles",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProDownloadAllFiles", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetBurstRate",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetBurstRate", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProDownloadFile",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProDownloadFile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetCamera",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetCamera", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGet",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProGet", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetCameraModel",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetCameraModel", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetFileList",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetFileList", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetColorProfile",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetFileURL",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetFileURL", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetContinuousShot",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetContinuousShot", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetModel",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProGetModel", "GoProController`"}},
          
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetExposure",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetExposure", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleAutoPowerOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleAutoPowerOff", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetFOV",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetFOV", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleBootMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleBootMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetFPS",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetFPS", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleBurstRate",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleBurstRate", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetISO",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetISO", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleCamera",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleCamera", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetLed",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetLed", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleCameraModel",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleCameraModel", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetLowLight",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetLowLight", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleColorProfile",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleColorProfile", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetOrientationDown",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetOrientationDown", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleContinuousShot",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleContinuousShot", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetOrientationUp",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetOrientationUp", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleExposure",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleExposure", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPassword",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetPassword", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleFOV",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleFOV", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoInVideo",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetPhotoInVideo", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleFPS",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleFPS", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetPhotoRes",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetPhotoRes", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleISO",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleISO", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetProtune",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetProtune", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleLed",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleLed", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSharpness",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleLowLight",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleLowLight", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeter",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleModes",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleModes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeterOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetSpotMeterOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoInVideo",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossiblePhotoInVideo", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetSpotMeterOn",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetSpotMeterOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossiblePhotoRes",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossiblePhotoRes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetTime",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetTime", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleProtune",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleProtune", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetTimeLapse",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetTimeLapse", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleSharpness",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleSharpness", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetURLBase",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetURLBase", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleSpotMeter",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleSpotMeter", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoLoop",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetVideoLoop", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleTimeLapse",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleTimeLapse", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoLoop",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleVideoLoop", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVideoRes",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetVideoRes", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetVolume",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProSetVolume", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVideoRes",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleVideoRes", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSetWhiteBalance",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSetWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleVolume",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleVolume", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProShutter",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProShutter", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetPossibleWhiteBalance",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetPossibleWhiteBalance", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProStop",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProStop", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetSettingReport",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetSettingReport", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLowLightOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSwitchLowLightOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetSettingReportAssociation",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetSettingReportAssociation", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchLowLightOn",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSwitchLowLightOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetStatus",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProGetStatus", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchProtuneOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSwitchProtuneOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetTime",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProGetTime", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProSwitchProtuneOn",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSwitchProtuneOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetURLBase",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetURLBase", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTextModeOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProTextModeOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProGetVariables",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProGetVariables", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTextModeOn",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProTextModeOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProLocate",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProLocate", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTimeLapseMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProTimeLapseMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProLocateStop",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProLocateStop", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTurnOff",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProTurnOff", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProTurnOn",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProTurnOn", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProPhotoMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProPhotoMode", "GoProController`"}},
          ButtonNote->"GoProController`"], 
         ButtonBox["goProVideoMode",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {"goProVideoMode", "GoProController`"}},
          ButtonNote->"GoProController`"]},
        {
         ButtonBox["goProSaveSettings",
          BaseStyle->"Hyperlink",
          
          ButtonData:>{
           "Info443702658119-2685981", {
            "goProSaveSettings", "GoProController`"}},
          ButtonNote->"GoProController`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellID->1026690036]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controlling the camera", "Section",
 CellID->2020261348],

Cell["\<\
We can control camera via functions for shutter and for changing camera mode. \
\>", "Text",
 CellID->933781132],

Cell[BoxData[GridBox[{
   {
    RowBox[{"goProTurnOn", "[", "]"}], Cell["turns on camera", "TableText"]},
   {
    RowBox[{"goProTurnOff", "[", "]"}], Cell["turns off camera", "TableText"]},
   {
    RowBox[{"goProShutter", "[", "]"}], Cell[
    "starts recording or take a photo (depends on camera mode)", "TableText"]},
   {
    RowBox[{"goProStop", "[", "]"}], Cell["stops recording", "TableText"]},
   {
    RowBox[{"goProMode", "[", "mode", "]"}], Cell[
    "sets camera mode to parameter given", "TableText"]},
   {
    RowBox[{"goProGetPossibleModes", "[", "]"}], Cell[
    "returns possible modes on camera", "TableText"]},
   {
    RowBox[{"goProVideoMode", "[", "]"}], Cell[
    "switches camera to video mode", "TableText"]},
   {
    RowBox[{"goProPhotoMode", "[", "]"}], Cell[
    "switches camera to photo mode", "TableText"]},
   {
    RowBox[{"goProBurstMode", "[", "]"}], Cell[
    "switches camera to burst mode", "TableText"]},
   {
    RowBox[{"goProTimeLapseMode", "[", "]"}], Cell[
    "switches camera to Time lapse mode", "TableText"]}
  }]], "DefinitionBox",
 CellID->1458783392],

Cell["Controlling the camera.", "Caption",
 CellID->521916346],

Cell["\<\
It is important to turn on the camera before trying to control it !\
\>", "MathCaption",
 CellID->210530946],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goProTurnOn", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"goProGet", "[", "mode", "]"}]}], "Input",
 CellLabel->"In[33]:=",
 CellID->799893120],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"mode\"\>", "\[Rule]", "\<\"Photo\"\>"}], "}"}]], "Output",
 ImageSize->{114, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[34]=",
 CellID->1009206690]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->1221517305],

Cell[BoxData[
 TemplateBox[{
  "FetchURL","httperr",
   "\"The request to URL \
\\!\\(\\*RowBox[{\\\"\\\\\\\"http://10.5.5.9:8080/DCIM/100GOPRO/\\\\\\\"\\\"}]\
\\) was not successful. The server returned the HTTP status code \
\\!\\(\\*RowBox[{\\\"\\\\\\\"404 (\\\\\\\\\\\\\\\"Not \
Found\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"",2,42,8,31795708714802873645,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[42]:=",
 CellID->891684298],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","empty","\"No files on GoPro camera.\"",2,42,9,
   31795708714802873645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[42]:=",
 CellID->1614285412]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"goProShutter", "[", "]"}], ";"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->925523387],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->881838120],

Cell[BoxData[
 RowBox[{"{", "\<\"GOPR5096.JPG\"\>", "}"}]], "Output",
 ImageSize->{118, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[44]=",
 CellID->1294965508]
}, Open  ]],

Cell["Switching modes", "MathCaption",
 CellID->1728828580],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProMode", "[", "\"\<Burst\>\"", "]"}]], "Input",
 CellLabel->"In[45]:=",
 CellID->195503368],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[45]=",
 CellID->1809788781]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->130790836],

Cell[BoxData[
 RowBox[{"{", "\<\"GOPR5096.JPG\"\>", "}"}]], "Output",
 ImageSize->{118, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[46]=",
 CellID->1176852258]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellLabel->"In[47]:=",
 CellID->836854765],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 2}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 2}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 2}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[47]=",
 CellID->885345438]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[48]:=",
 CellID->693477158],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5096.JPG\"\>", ",", "\<\"G0015097.JPG\"\>", 
   ",", "\<\"G0015098.JPG\"\>", ",", "\<\"G0015099.JPG\"\>"}], 
  "}"}]], "Output",
 ImageSize->{451, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[48]=",
 CellID->32104324]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProVideoMode", "[", "]"}]], "Input",
 CellLabel->"In[49]:=",
 CellID->983308975],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[49]=",
 CellID->1194694328]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProShutter", "[", "]"}]], "Input",
 CellLabel->"In[50]:=",
 CellID->703823027],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[50]=",
 CellID->848968121]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProStop", "[", "]"}]], "Input",
 CellLabel->"In[51]:=",
 CellID->465212027],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[51]=",
 CellID->1479156966]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->1474418717],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5096.JPG\"\>", ",", "\<\"GOPR5100.MP4\"\>", 
   ",", "\<\"G0015097.JPG\"\>", ",", "\<\"G0015098.JPG\"\>", 
   ",", "\<\"G0015099.JPG\"\>"}], "}"}]], "Output",
 ImageSize->{562, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[52]=",
 CellID->1774491508]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDeleteAll", "[", "]"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->553190623],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[53]=",
 CellID->1302060245]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[54]:=",
 CellID->1863964437],

Cell[BoxData[
 TemplateBox[{
  "FetchURL","httperr",
   "\"The request to URL \
\\!\\(\\*RowBox[{\\\"\\\\\\\"http://10.5.5.9:8080/DCIM/100GOPRO/\\\\\\\"\\\"}]\
\\) was not successful. The server returned the HTTP status code \
\\!\\(\\*RowBox[{\\\"\\\\\\\"404 (\\\\\\\\\\\\\\\"Not \
Found\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"",2,54,10,31795708714802873645,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[54]:=",
 CellID->1578550671],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","empty","\"No files on GoPro camera.\"",2,54,11,
   31795708714802873645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[54]:=",
 CellID->1485434089]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Downloading and deleting files from camera", "Section",
 CellID->889545618],

Cell["\<\
The downloading files from camera is quiet simple. It is possible to download \
it manually from http://10.5.5.9:8080/DCIM/ or by using functions from this \
package.\
\>", "Text",
 CellID->377864662],

Cell["\<\
There are three functions that are made to make downloading easy.  Functions \
goProGetURLBase and goProSetURLBase will let you know or let you set the URL \
from which data will be downloaded. The default value is \
http://10.5.5.9:8080/DCIM/100GOPRO/ \
\>", "Text",
 CellID->419917810],

Cell["\<\
The function goProGetFileList will return list of files at the address  which \
is set by goProSetURLBase or at default URL ( \
http://10.5.5.9:8080/DCIM/100GOPRO/ ).\
\>", "Text",
 CellID->127719993],

Cell["\<\
Finally function goProDownloadFile will let you download file which name you \
give as parameter. You can use it for downloading single file or list of \
files. To get names of files you can use function goProGetFileList. Function \
goProDownloadAllFiles downloads all files from camera which are in folder set \
by goProSetURLBase.\
\>", "Text",
 CellID->443817208],

Cell[BoxData[GridBox[{
   {
    RowBox[{"goProSetURLBase", " ", "[", "url_String", "]"}], Cell["\<\
lets you set url of folder from which you want to download files. Default \
value is http://10.5.5.9:8080/DCIM/100GOPRO/ \
\>", "TableText"]},
   {
    RowBox[{"goProGetURLBase", "[", " ", "]"}], Cell[
    "returns String of url  from which files will be downloaded", 
     "TableText"]},
   {
    RowBox[{"goProDownloadFile", "[", 
     RowBox[{"name", ",", "dest"}], "]"}], Cell[TextData[{
     "downloads file named ",
     StyleBox["name", "TI"],
     "  from camera to the destination ",
     StyleBox["dest", "TI"]
    }], "TableText"]},
   {
    RowBox[{"goProDownloadAllFiles", " ", "[", "dest", "]"}], Cell[
    "download all files from camera to destination given", "TableText"]},
   {
    RowBox[{"goProGetFileList", " ", "[", "]"}], Cell["\<\
returns List of file names present in folder which you get by goProGetURLBase\
\
\>", "TableText"]},
   {
    RowBox[{"goProGetFileURL", "[", "name", "]"}], Cell["\<\
returns string of whole URL to the file which name is given as parameter\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1978788228],

Cell["Functions for downloading files from camera.", "Caption",
 CellID->110642876],

Cell["\<\
For deleting files we have two functions. One for deleting all files from \
camera and other for deleting only last file captured.\
\>", "Text",
 CellID->438773335],

Cell[BoxData[GridBox[{
   {
    RowBox[{"goProDeleteLast", "[", " ", "]"}], Cell[
    "deletes last file taken on camera", "TableText"]},
   {
    RowBox[{"goProDeleteAll", "[", " ", "]"}], Cell[
    "deletes all files on camera", "TableText"]}
  }]], "DefinitionBox",
 CellID->1287667594],

Cell["Deleting functions.", "Caption",
 CellID->1083167274],

Cell["Example of downloading images", "MathCaption",
 CellID->1771579100],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Setting", " ", "the", " ", "package", " ", "to", " ", "HERO2"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"goProSetCamera", "[", "\"\<HERO2\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{"if", " ", "the", " ", "password", " ", "is", " ", "12345678"}], 
     "*)"}], ";"}]}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->210546345],

Cell[BoxData["\<\"camera: HERO2\"\>"], "Print",
 CellLabel->"During evaluation of In[5]:=",
 CellID->1027641970]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[26]:=",
 CellID->1761096403],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5085.JPG\"\>", ",", "\<\"GOPR5086.JPG\"\>"}], 
  "}"}]], "Output",
 ImageSize->{229, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[26]=",
 CellID->2117699633]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"path", "=", 
  RowBox[{"goProGetFileURL", "[", 
   RowBox[{
    RowBox[{"goProGetFileList", "[", "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "]"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->608573309],

Cell[BoxData["\<\"http://10.5.5.9:8080/DCIM/100GOPRO/GOPR5085.JPG\"\>"], \
"Output",
 ImageSize->{386, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[27]=",
 CellID->2059838879]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "path", "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->1308078202],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJx0vVmvLGtyHUZbL370T5D67srM78uh9u2mh0cbftJA2BpsmS03zW6xm6Ie
aJCUQJA2DNkA4Ser7xn2WHPtfW6TtAWY/9ARsSLWF1mnCSQSubNyqtpVMaxY
seLv/ex/+Se/+I9/4zd+40/+E1n9k5/+6X/9x3/80z/7p/+p/PHf/+Gf/MHv
/+HPf+/v/+G/+fnv//yP/8uf/R3Z+X/+R7/xG39Hjtftz93f/Tz0n/rNx9J9
KkWWD30vy3fd3Xf93afafxg22POp7z923ce+/yzHDN2n/u6hdJ/LN1g+Dd98
KnKRzedaZZGzHkqvBwybz76ty+dxkGvK7WT7sfRPpT4O5XPXP/TDQ9899t2D
HNxvPneD3O7zMHwahodxfCjlYRg+6zHDY60Pdfhc+6ep4joPpT4MVV567oen
0r9M/UvZvNRvnoa/91J+sKvdq/zZd6/D8FJ82Y1V1s9DL4tujN3LdPfU/92X
4Qdy8OvQv9bhtRZ9qevk3J2c0vcvtvh1+n5fq+yU5dWO2dciCzbkLDkMZ+2G
zWHs5TH2Yy8Xl41D7fdlsy/dod8cB/3ztf/BbvjmUDfHsT+Ow77opQ5jPU4j
Nl6HzeV+kiMv03CaNrIc5/4wdftJ3ksvVz5N006uNg5yDN7ycS6nuZ6n6VjK
SZZxxHKsdT8Msj6Uoo9X9DlxF1nLAXhT51qPfTn0eu6h749yyjDIKaepyF3O
tT+N3XG4u4y9LKdydyqbc9mcimzLu+vsXdzpkWO5TlWWyzie6yCvnmuRjdju
LmORD0EOk0e92rLvOn1p6OPgKsul1lM/yM5L8bUs8mzykjzzRd6mPLAu46Ho
WveXIjc92duXy8ong4eX9WWZ9NOYiuzEw8iN5BjcyxZ9Ktmjtxj6t1Hu3l3H
Xt7j29RfR3lpkDeun4M+5PC+yLmDvhFZjwPugmNkLR+UnTjIcqndu/wf5Y3b
8oZjxg02ZI9cEJ+DPIZ8bmfds5G1XFP+PMmjziP+g/IWzvLeZZGPou/kOa+1
yKO+zaOeOE14+/JIF/svyIb9IwrWuIJ+GrJHn6F/K/pIV3vmt1kO05fOs56o
R8qnWvSDlSvz68Qv1Um+rvrGu8tS7F339h+3h7Tj5Tpyr3yKfL19mcthGvQb
OJRdkf/Rsi/Tvk5HOVE+B/nfjXodOVI29HexyB65iFxW/u/yG6n7se7GIj8H
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
kETGvre537mqCNK2oCPZczH49Kg49vXDanGU1cmwH9XY0pKpoe33FbqOvHRe
Pqvnz+v592XxvFU+L8vnjfr3hV0qr9E+E5jN/Pt67XmreFrPaD0riu+L4mmR
P60XL1rN7xvld7Ra9W9b9a9b5TfDzW+G69+ONL5u5V+/WX/2Vuu7C/Wnb7S+
f/MCHfy22Xjx1sj3bw4/fWv465H6Nxca379N/7zw7K03/twa/vbNN/78RvPp
GyPfjLToyDcX6t++dYHW07ea3/209R2d+fYwnfz8nbe+ebv53dsX6Mynw3KF
t956/sbwizdHnl9oHL7Zav/0Ddq+fHP42cjwywsjLy+8Qet45EL7rbdPRt5g
HOFVP2rxOh5uvCREICN/4UL3wltk84/Y4SfgIFhpneYUR4iVro8QQLTJRFMk
0iJkGQGyEMqQrSarrhxUo37SJHhqEBL1DDXoiR22/2z8cQRQQpEISDBChHaT
rp/WieEL40UpMUKzAXKMdpgUcgVUS1Kggsj0oEotQBLWqB2GhQ2ARc+KSL0u
C7MVQNq8lp4CGzfj7b1pukEsIu1FCkhiAcaCQit+z8qUhlYZ+UyFULznCzun
Is8Fgst/5g4Ep7mmJzRTEIVNLPs8EHScWoMMefXwME9s+oy7dmhogveO2iG0
njmxQ5EXjkT6+lR0sPmXntU6WlemXTYMPTYBAeGGE1AEAaChyL3568YG/R6/
r9a+O39OuKA+TbmBTLF1kFX7qkYpoBA2CcllTKV3/mdAsBTFSKJoOuRjaLy8
J2aZfbgYWKMkSWd9BB4pHAfFUeSLn577HwAQh3JxDotMaEJr4yvnFQUyLyvl
FoOUuIH7XS/0Q5GILJQWZ/D/2yZVfZKl2n7vF0juepbFvJL1GgydSEdbVAc6
EUnqdr8MkadxsX80NIRanZRsVQ4n88nOx9X8qJKUGVDMeWKzezS8CnqAhz48
1II1rfUSS/58qHo4VKN1XNV1kpX0Ei+rOUBHAYgcePK0s/xZrfZtWfu6qPy5
XiObTOvft4pv3hr+6s3yH98ufv928Yf3mr97f/jX7zb+/uORv7/49m+vvfmH
tRu/Xrv6h+3bv9+986fH4/+wO/b5+PVP79/8bGb8yfjY4+l7e2N3nsxMfTY3
/Wh2/MnC1JO5hUcz858vr3y6uPTp4sKny4tPVpYPFhYeLi09Wll+sr726fra
w+Xlg6Wlg9Vl2tmj7cbqo43NveW1J5sbBytr+2trB+vre+sr+xurBxsbtPN4
c4sOPlp98Ghz8+H62uPN9d21pcdbm48fbD7a2H64vn2wvkFPebK1/dmD7S92
dj/d2v78wc6nW7ufP3j4ZHPrs62tL7d2frG78zc7Oz+n/c2NX2xt/u3G1i83
t365sfV3O5u/Wl//d6tbv5ld+e3C2h/XHvx2dfO36xu/WVr57dLyP6xs/HF+
4/dTc3+cnfxqbvKr5emvF+b+cXL6nyYm/jT2yZ/uXfynWx/9+fb7f/7k/T/f
+uCfbnz0uw8u/OHi219f/elXH7/5T++NfPtO69t3mt+8RXhXHr7VfD5SvrxQ
nl5otIc5MKHFNn945BVX/rB4HW0hfP2q+QaZ93bRAIgwbdUcobjmuCDEuXBc
El4MnzZGXuYNwpqTogFEYK6PzimbwPSXdFrJUEJfALqUqz+16wXQgeuvUDFb
oAtbOvWknxpaQxEOtI4IahUSFOioNak1EvOeuZSoG/w0JCIAQeogrnH3sTYJ
ZrlPuhEsqHVdpbzMWOwUBy1BgDM7YSKJKLpbdq9MLQOnNtcevp86eyEoOJUc
sWgEVT0K8BxB2wqKNPowo31apOGV3lCWnpX31V2f2ox7hRhBGW+MSvjCVUlK
H9FTyJH7y+ryi6wukwXY7PtkARtDpligTJEpSz8bOvdcmJ8jQYFYbsp0kCSC
xdT3TTfz67DoXFGLLcZJfbpWtQH0IhZqnQLIJoAawglIExwHYVL1bwVQjmtD
jhQaJbkSWq79IKem1Ub/PKqcE4GIJCHuqlBIqQDBoYdgRJ8S9Wgb133r7XV5
N3zWfSU6/QuxiZ+fhuNkeDlUSNI3MPj2eHOUPdNSfPpZHVVq5HKzd5fXj9lK
a3RwQh47vRtZJkKvFR39XK0+GwrzJoraszJ/SqsoafttXv06z79tNP880vzT
m63fvj38m/cu/Oq9kd989PavLv3051d/9sX19z+/+d6TWx88uX95/96He6PX
d+7d3hz9ZGfm2s78zfWJ+6sTswtzi9NziwsLq/Ozq7PTy0sLWyvL2wuL8/Oz
Swtzq4vza4uLG/Mzi3OTU//Lv/z1f/zhr92vvz97+uI/HHf/73/974szS2vL
WyuLG2srmytL67S/urC2sby5sby1ubJN2/Ul2n+wvri9sbS7tbK7vvRgjU5e
3tpafbC9trO9RtsHD9Z3dzb26HzaoXNonx6ifd3S2tjboofWdx9s7tP+g82H
OxsHu5v7+9sPd7cf0nHaxzp48Ghv66H+c+Ph3uaj3a3H+zuf7m4/prX34NHj
vU/pWXtbB3Tm/ubB3ubBo90njx48frj96NGDRwcPHu5s7+/y9mB35+Hug4Pt
rT3a2d/m8w+2n+xsPtrZerKz/emDrScPth7T9fe3H+3tPNx5cLDz4NH25qO9
B5/ub336ZOvLg81PHz548vnBZ5/u7j7Z3X208eTzzS8/X3vyy40v/nbt0a+2
tn+1tU6gQ+vv1jb/fn35d2tbv1ka/2pt8h/np/8wde8PY1e/Gr/6p9Er/3j3
0tHNq//44Tv/8O5bf774/lc/e/O7n731/O03X77108MLbxyOvHk0/MZx643j
5oXjeuuoZJbspDly3GxKAn34pBg+LSlYoKihdVo0TyhmKVonOTdBowGEfpWd
RvPYYo1eSGefjQxr4jvEBZ5m1X8GqgfKHpCScIVqDwp6ISPMZ5YJHXo2wM6C
hfKsSO0JbuRlfAYbfx//5LorWgRYwvc71ynpN5sIXikv7BtwLH9CnlIYceql
1RmyNQ65SC9JTT1NAB1VmU6TCBgFGjkGFjtB1DPn31kC50lOTEkvNUOFij4l
mpj5bHzz4R950Nj5IZcPep5pnadAQIoInomynCgLVYACZP81EdBfcYp/ujap
q1Uw0cQlQ/SoNpep8z/E/QK0VUYoVAEhI3BYNdqnyF7miRo6RmWRVZJIbdJ5
zLuPieaTMF2FogAMrKf3EC49JMRlJHGihhS+pZpLW4m1xCtHNT6v0jpE3ODn
aRxMu5aKlIJccxS443AANTlQKJIvDHvvR+Rg1/LjamrOEiMvTVgo/qlmPL6T
1ZPyTjVr82JX53SoPDlXHFaqnSHy2Gsv8uxpVvmW3PLh6tfN/E/D9T+8++av
f9b6+/ff+NuPm3935Y1fXHvr4Pa7+7cu7o9ee3D/9sbozbXRO6ujd1fGx5Ym
bi9NjM2NT8xOjM1Ojk5Mjk3OTEzPzk/PLs7NL87OLE5Pzc9OLc1Or8zMrMzO
rk5OzM1ML85MLvAR2k7Nz8zMLcwuLM3ML80uL0wvLs4uL8+trsyvLc2u0JGV
+VUy9dhfnVv6j2ed//LDP/+XTu9//uu//E+v//r//T//78LkwsrS2uryxvLi
2uL8ytLC6vLCOl2BrD2AgKFhaXN1aXt1fnN9aWd9ZZf2cZBOIDiQtc0osLa/
s36wvbq3vb4v62BrnWz+AZl62P+t9Z2drYPtjQMCAtrubpNN5kf3d9jU05lk
5+mfu1u8I+sJGX+y29sbjx5sPdp5QEDwhI7T+bxlgHhMoPBo79OHe5/uPWBM
sas9JnChg/RPvAShwONdRhN5XQKCJwd7nx3sfvZw5zPACkPSxgG/0AbBwcPt
LV5bdPLWwc7mPiMd/rS1vY31vc2N/c21g206vkV/F2EN/YGPd9YfbdNaPdhb
3X+89uhgfY/Wk43HTzYOHm3sP944+HRz/8nmzhfbjz9f3/nF+trfbW3//erG
71fX/7C29oelxd8tLv7D3NLvJqd/N0U4cuMfRi/+4eo7X1//+JtL73313tvf
fPDTb9658M2F5tM3h78baT5tNV7Ui+MWGfmCZ8NxrQIZXnLphzt5yfPXGixk
etZktupUCqU6IRBIqhTm28edTs48j2sNdSUZHVXpMFwV6qNi0guXG+raHIQe
8shh9quXDLXz6gC4JJ7WKCNCgXZhAz7qSiDg5h0LOoXnFJKWxWmms5nQc9S2
AQcdmxUYs40SEWRw4JMeXZZFzz+oTOiZaMDB+TgTzcsvZcwK3W3SBFNp0ww9
yCfFG6/HdykceDpUUSCoJaFpePgpQJDhAhgrybngTDuLQ7NwxetCmSwyUuhQ
CAeXIfKSIQoKUAiqItLY9wDB1CSOpE3MC03dvKObWB6qOK3tPJLT4AIEgy1j
p3kaVX9q8+uRSzV2qIqOGE7flxmU6xARsH8u5TeSu8d4l5SGjlCCnKzXsUeS
Bzp4XpZjgUAuRr52zPdcnuT100wHkp7mxTEPUKO4rziu5Ud58X29+Ha4+Hqk
/oc3yz/8tPXLD1q//PCNn195e/uTtx/curR59+Ot+zeXx+/Njo5PTdyZnb07
MzVJxnlycnZyfHZ6cn5ifGZ6am5uZmFmcmZ6fGZmnI7PTE5MTU5MTk1NTU/R
/vTExNQUnz8zMTY9PTk3MzU/Pjo1O02mfm5+ao6eMkvGf3JhanxOLP+iL4GD
hbmZxYW55fnZBTL4C9NL81OLtKW1OEO4sLS6sE5bAoK5yXlar7vd//5f/6//
9n/863/73//1X//X//O//m//dWpilu3/4vriwuriwtrSPC8KELDWV7bXVnZW
lh6sLpP9JxTYo+3ayt7iHMUOD2itr+yweVzdo0Bgc22PFp1D5nRr/SGZyq31
fbL5tGVruXGwtbFPVhQ2lo4DDsi809rf+4y2uztP9uD877D/z+dsPd7aeEQO
/PbmY/LhGQvInu88ebj3OT1KlpwQhLZ0/MH2I7ossAPHEUcIdjzZJc9fzuSD
Dz6jCz7c+3J3+9OdrUe4Ddk+2lp7TJZ8fXV3a5NvTO9244D+ro2lB/YH7mys
7mIH+7R4H9uVnbWFLT55eUfWHp9A4RW9V0ub6ytbDKNLm8uL66tLG+uLm/wO
r27Tm7+xtrm1urm9tL67/GBv4cHe0s7+yt7jpb1fLOz8cmntF8urfzO3+sv5
9V8sbvx6ZflX8wt/O7/8q9mJfzc7+tvpO78du/LV9M3f3bv8x9tXvrv83vcf
vv3i3TeOfjrSefut7oU32s3h00Yrzi+AKlFbJIaimpD15TVlgpvGBahBBRsf
lKs5IjgrTBQoUPcdG08ZBhbYBExpDxeCCAmINN3AZeXEttcECEI7QGrbTCUZ
ytjbQU/wwaTAt3TllphndN5YG5SEw0lNBPlgO5h59TXoiDpq+Io1jVrcYmll
NPiwb5mXh9nI8fjBC+P/eeiA5YgZF1BHKp6/qAlVwtCZIV+aILDMsv+TUMD1
KGKXmXaTFTWUj4Ks8FnDSb8OLn3ISkcNCmeKPI+pGnS1auxXPURnQbUib3jh
WeBjptmH0FTllb3ecayfkY8VsCbZNsKBAsY5s9Q/S0ih6gYNIDEEsEaqGpvx
SrVLX4lqtVfNepUarbNa9gN5NeTq12vPiqEXReW7Vu1rJtJbf//T+m/fe/PX
77//5ccffHHp40c3rz64Rub9vdXxq8uTN5cmbsyPTszenSYrPTo5PjYzMzY1
PT49Oz4xQ/+YmCA7Pzs2OjV2f3zs/uj46JhsJ2iN3hu/f5cOTo7zo5Nk4Wk7
dn9q9C4fmZ4k939yYmJijP67P87QIChANnlybHZqYn5ygraEIzMECrwm5mfG
5+ih6Yl5WoAD2sr+vEAGw8Hc9BIdnJ9Znp1anuN4YWl+ZnV+cpmggYCAcGF6
bHb03sQnV2/fvHzn5qVP7t28Ry9KKLAgQLCyvLm8tEEowBHBwvrK4ubK4tby
Ah1komllaZsMGqEAIQIBwfra7uoKAwGZNTJ6FAtsij3EIgigRWeur+5vEiLY
2iBo2Hy0SZHCxkOy20wQbT3a23lChp2hYesJHcQ+bckOH+x/IQTOEwABbf1R
mHe+gth/nL+38zmdQ94+WXgx8k92tggIPgWm0D/5+IPPFFPkmo4yOMh3vs53
wjdM9n9jf2vz4d7OZ3RjZPmBZYQRa6ts9mVLsIhFWKnI6Iuutr64s77IwdTK
wvri3Kq8sRu0XZrfIFxYloMLBNMzi0vM7C1JELe2NL08P728OL1KHyV9Iguz
azMTi3NTi/MM7gsLc0sE/UsLK/Mzi+szq1vTGxvT65szG1uzm/tL2w/XNx+v
b8ta+2J9/e/mF36zOPf7xal/d/NtyMC6WpF3B78KQx86UCgq65b5lUlAotB1
lmZcat9ZL1epWAeCvqQthijZxNW2zZQ5zfsmycZ6P8kXS7FonRChKh0EqVzE
OQEZbS/Xgfa4wIFnyaFj46Y+tS95Y3JodDq1yTJaMpQSvtYmEBRUdDyB1QVh
v9cqT0RFExdh0yQxBQpQrQmI1Vpelhe6Y78mI+8OvNI4FbHw53+ivQAVX0MY
Oub1QjDaMPg+qt7HDT89f86PUKiI8zWC0MqiypHVBcVJNOgUgEuPXMBJmVqG
XVzIFqTnOEZ4icFk1oWK5LI3ApwE1TXP/rjZ99pRh3IuzrcCS373MhH9qNIH
WkctpcsWCc4qXU/oo4npGvKq9MWgj6B43qz/+UL9m5H6H99t/Oaj5q8+Gv7y
xvt7Vy/v3ru+fvfqzN2xqVGyzmOTY/fGyS6TeSVzOzk1Mz49Ojo+OTrJtnx0
9O7d+/fujd29Pcr2/O7EvTv3R+/cHb13n0w9be/fo0fpobF7d2h7b+ze2Civ
+6P3RoECZG/J8o/enQAEjI9N0xF6tbF7U7TI7BMcUCBw//4YvSidQ3cxMTpD
27HRaQKXSQkBKKAgOCAg4HucXDDLz1uy+bPTi2Q9pibmCAXoHNrScQIIeojs
PxkQWgtTK2RMCAs4QJhdIYMjMLFIoMCU0fwKPZFMCgUCC/OrhAW8BAXI+KyS
/RcgoIcIC2iRzWcHmCBgmVGA0EEt/1KyfuT8k3ncYnblMSwq7SsEkL8d95ky
ekxAQDvbm4/c1D/YJNP92f7u52TVaW0xKfRkf/cLeoiiBoQDCCKABXSQTtjb
+2J7+wldgc4EHODpZPyZtJHtngQCbvyBTfRcoMAGIID2Nx4BOLYFCDYpnBGm
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
wf+KCrFyeaiyuhqwLz9VVVXYc62trdWl3llNTR2strquvrb+8MHG+voDsAMH
DsEA3fV1wP8jDWCBg4cPHz6CQ6ywQ3jz0NHDh3DnP2Zh/+SRI8eOHTtx8qRo
O586ee7E8TOyP3Xm1Kkzp0+fhZ07d/Es0PLkmXPnvj1/DkAKFrhw6VuA8KWL
335/Cs+cOX/6zIWz57699N2PRHtgOJD80nc/Xbj4Pezit5cvfvfjhe9++Pb7
n767LPb9Dz9f/l7s20s/XLh4GR/89tKP312WlzjkMz/8eAWfxfnl73/BW9jj
Cy9e+vEC7MKP4AW8xV+B3yX8oiyDQxh5RB5TasBboBI+KVR19luwCQ6xwQou
kFW54PQpuDkSxTp+4izsKLyhY2eOHz8HytAC2hN0lLA/0ngKzkKjKi+xrMh1
HzNxQCLACi6Aa3Cg7jjVJwT8lQiYMmZ0iDkC3BD0rUPsNeaqZcaSHQDyS0RI
W4yr99ez0QBEUFNRt6+08lYGiOCrTn9ql0wTM2F/jjNo13F74hf8H90JTQEk
d6/1K9iu6fI4BRT/pOyPmzjgmrnilMGvEmoQLdN2O7jWgbMrNPJGkxwjeC2e
Rxb+SuSvlt9uf5eJDpkvX+OoocMX9yM61SthxzE9BQ6y8QZ2eKXnfDG3afOv
mmW8Ko/g6oVkOIuv1Q21NBO9k5/7v+qovNiEG35yIohAPIKEBGUBRv7XeGVF
RXQ6Kd5EwHC9JxGwxttiYA7XiD1b859mDQq5+TKrVEYTmQXQyM8nehH2Ydcp
II8JFyQ+Tkq6/2VKzeaCkuzMvMyNeZmb4BSACMQ1yNpE2E9PW5+Rvh57EEG2
HtILUGpId5YFmshJh+XkZZILQA0wvIXnXZpAfId88R2kiHRzLrPDcASwSqfY
lsLiEqkLkvJRcQeKtFlAUgTFW/BCbMs2+ADFQHuTKdAcMbgASF8ipULfMDSE
dceunTBmjbFRR0BOhA527NqhsSCsu3bvgV8gpUAiNrRX1IZUa2jfvrI9e0r3
Edj3lgLqqR1E2N+nJkmDUgD9fjkrZfinrLyyAhtc/7mWlYkSKX90W8nrfUUF
cL4aS7X9qauvr6uvqwW019bIy7o6rDirrcWDZQ0NtdU1FTU1lbW1lQcO1h09
egQ/ly7hFn3hxx+BiheuX79+5cqVmzdv3r1753HTXw8f3n/67NGLFy1dXV0j
I8Mjo6MjoyM9vd39A32jY6Pj48FgMDw0PBqLzYyMjgeC4VA4MhWdDocjE5Gp
QCg0GY1iE5uJYQ1HIpNTMTwQmZoIR8aD4SBe4wFZYjP4FFY8NjU9MxmbnZic
jkRnIrG5qemF6PRCbGZxdn5panouNjcbnV2YiM5gnVlYisbmYtNzk1MzM7OL
0zMLsen5qejs3Pzy7NzS8qu3s3Mv5+aXpucWY3h4fmlx6fXCy5XllXcLi69g
03NLk7H5+ZevsZmefTkz+3J6ZjE0EcNvhMVmX0aic3hgPDQ1GZubmJoNT8Qm
JmeGRoIDg2OdXX3PmlufPmt93PT88ZOWPx8+uX3v0ZWrN69d/+PHn36FgSnE
Ozhz8fiJ00eOngS7gSlOnT534uQZ7PHW8RNgyXOn4ASdPHfs+Jljx8/CcTh8
+AyMrceuAZkUUFdzjE7BAa0vqq850lB7VLigSsJ6NJvikaxxRXmt9iNL0zEI
gvVjMKtGAtivrhT8r2OLceneChM42l91Mz1TZnH611KJ1MRtZK6ZDJRhaIjm
MNklYW3eFvd5s5eLfYrP6yAQV1m0352a4o0jdZhpMnZ0oEdZ1EkQuNEzzk2I
1xqxUlQhXZp5/XEROe+d376UCYmqaOFrjw9J0Uu+mK/N0wQR/6WeuBP/qa3u
tBWvE/mgROcsuJJRxwWaF0gWFvAna3OurUQCrfh8zX7/6OF6bRz4XJ2CNU3a
Xwz7y8ysXC0xvUpT4gur+bPGdRaoSKm7wxsiaE74jJU/RHXlDpMd9jKCqzhl
77BRqE4C8ltVoiSTLJAcRGLSna+S9hdmFGXBI9iYnbY+J3NDZtqXOUIBG4H/
Av456UR+7OEgYMU53ATLBZmZGWmZmZuyLQtwzVWTDEJOhvUI4A5k4ubPQFDh
ZikTLZCSIXEHNmummFxgcgTSLyBxoSItGgIFAP9LtpZIg5nc9reKa7Bd4j8S
C9K8MECdsM9V8X/Hdvzfrh0Uk8ADsB1SOqoNxHv2frNTSaB0z659u2B6qd+j
dLAP+M/7/L7S/bItKy/dv78U/1em+F5Rtb+ivLwa1/ny/eWlldUVe/buqaqp
BhFU1lTvK9uPfW19HS7sJ06dPH32zHffX/rh5+9+/uXHe/fv/PngXlt7W0dn
R1dPd0dX5zAQemx0dBzoPIb9WGB8CLiNk7GxYdkMDw8Pjo4O4dXo6PD4OM6H
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
vr16u932eEgxrH8snGhuSPeBB9euPWADAranbG68hQ3i5luXmmhe6NINiKZG
5AWQ/2XUVV/mkaHamktsUlld1VSDk0LAAhpxiYAWygAImmsv1Z2rsR84GNBB
0tay9UA4R9R/gjpNRHgQZPOOAAOB5ALwfvgpzPZKqSdEt2VGAdFHZp1q1X6B
rOf8pNgv17WYIOC3NDuKNmFtpiMQ02U0KHD0CK2TVVOpOVJrVKOmDErpXlRv
/n0vQFXez1a/roYkLm1xDSos1hw0Qnpak+kv0EG4m6n3C0SvAUtDB+Yujfiy
xOCoojut7JTRirHasFK9U6DWo1NiF1MDtSoFbxAHlCU19jjw7XxlpxhFZmVA
7WtD3QQt/WLZChDoHpYXnzpaXlqYJ1YJ2KeYmgWsO8fPgwX7C4ppaqhYoQml
eXJ8lPoFhbKJzAKkDASMAhDoZX+0hGZKi7hBAChw9MyR2pbK1MoMYAEAAZOC
9BLWgoAFzK4K6VGiAwtMATj/SzNiOPcO98fSOxwHlN2BqEz+ahQIJgK4QUBa
o7xBwDZkKiwQKADhi0zzjJB6ZJRiCiCAn9wasLgmeJKHROHG1CiQsRgg37GJ
yV6qDhVf+rXuxu0mGhMd5HKQsoCGEGADFsDm9VQUQqJhGzdZx0bGu+HybzTD
mycmJvsttnH95NDgUJd+csRsmXzypOPMmTPnz1dWVByFOHbs+NlzJ2vrKkfH
esmbGEkBcAEAAkQBAgLCArE4ICaFZuMzC2kIAILk7BywgCgg7eoa3PZTc/DK
QnxmzuH2MSMAIHC4/L5w3BuKzcI7Xr5eff6mb8g4NG5MzS+nF1dD8dTGm3fL
a+vvPm1vffzy/vPXrU/b7798+7D9nZ4/ZL2Fd3WxFP/9j09fpbs96lSj5ueP
P/kq/vXH35+2/+ELpCHz2xwxiz1qm45PexLTrtj2t3/+/o//9Z0GjVy+JHAH
63Tw3TYPC/1z+ekrvcnx8esfPBQEvCCamAfg//bb399/JxHsH8gC4AyZHw7c
GoADdweUJeIfH758/7j9/cOXb/B3effxK1CDN++2gRE87hxhh0rO/EAE5HLx
9esPWXSa/MiAC4hmMZaGqDvc2Hi1qekaRGPjdZ4Xhair+RWAAEeGqCJUV31J
oEA1t4mFylB1ZX09bRNUn7poP5Dv0+UGc5AOUGkogwURUQPR8foAogNSA63C
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
lAgoClwQwQkHIQt/WUfsLNBr6I8rjvH8GdjsZzLXTCM7E/wl4Esqka0Xw3on
m+FUMsYLKATABT/l8z/mcreyWYk7ZzL7meS1TOrpX9+2p312mYi6qQRaO5xw
Ph+3FwqIRRwvWDkQZscJxoWXjiCtJiBrSKPpSMhFirVGgA0l4jjkO/xnaYn6
iATwbSdSM6fYdZw7HQ6dCq1s62yyUxENEJiCMvEOHY2EIQcOr4QOFWO1WkYD
xCYibDb5hFjRKxS8YtFnjIAcoYogaTrUUSAQtHFDMWPryDLutJ/XOys48zsS
yae0f1Ga+6CmyOZ8mHNAcZPN+I4OMlnckATmZ7IeOEhYIJvM5zKplJ/JCEHo
N/Jd4QXeXFBZIZtCDlYs5nU1KqNQACvlYeVSoV4DSRTL5XK1Wq1UZM8NrlQq
tUqpWi1XGrV6tYz/b7Sb7VajXa+1q5Vmq9lrtTq1Wq3VatXr9U6n06h3arBa
r1JuDwezSrU5na11e4NWuzsaz/vj2QTIunFosbp56OBLr7+GQ/Irr77yxquv
vfnaa397/fV3Xnv9ry+/8gbWza0XJtO1tfVDm1svdrojYPJ4tMARGmu7M5zN
tgC//cEUb3V7Y9hovBiP16ezjUF/CsiF1Ws9YPJicQjn6tl0vdXs61tz3DaZ
bPT788FgMRivdbtT2QwWvd5MN3M8Fnfix0/GgO4pvhSfgnU6k15vAcwHvHfb
M1ivMwe297uwhWC+gLlAOnAbGwB+tzUddGedFh4yA2v02hO8pA17s35nDKgH
C+DOfod0MO+1R7g+6E4m/dlY3pVnggvw1nSwZsHfTIfEPUoBYJPZYroxG69D
RwDzaY4FXPtQGOCdDn8YiIAufQA+9puK/PpweT4H0JvOcmNpIs0ysYUlgrXB
QvC8Z0ZPus5yZIQ/MIg4kYZT/BsA/F/0ZiIiJDogguLgbH3RBxeM3prMTvtK
BHFlgZhvEkVsxyFdPaYUMpXIDSxwjYt3whGqBm1V7Zgi5mapMNDsxtOYWrOE
LTSWNkRJ10ifwWK+1JiCyAEYIFSDCGLXPdPRmv4flhIHx9mwZpkHe80XSgRD
zDbL1HOSIdhujtKA7v1gibF8JO2TBQDm15PGXHMJBoVZrUCHjyoF3MC5A8oF
2ZR8FjIknRZFoJlFUn2cSl9Pp35569WLcdNKlMNogmuw16hbBepjEGgxS5ps
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
7mR0OYxA+lGHw0dXVly5GSsLjoYjR5Qmfgit/BAWLvguGgILfBtZ+TYS+jp0
4KsVSIPQN7Hwv6Phb8LgiBVhhIgYFQFY4AsQAVgg9OcvIs9BKXyy8ud/hQ98
ElkB+P8z9Jd/rPwJ9q/wn/8Rks0/I6CAP/0j/OePVv5LN3/i5sOV/4L9HewQ
fu795/70wZ//9PGB5z4+8Oe/P/cnEMffV4REsH/vwH99sPJnUMb7kQNvR557
K3zgr9GVNxIH3kiHX/Gee7MU/2sj91a/9nq/8lq/+uqg8eqw9eq4+eKottYu
rLUq81Zp1i6NW6V+O9usZtvNcrNZLJfSlUqu2SjUqtlGvVCt5OrVEnND69V8
rZqp1bONRq5SztWq5Wa10sU5v1zs1SqdSqlXr7RrlV4TMFvuNRqdWrXfxJG4
Adjv1HCxBgro1htY+822rp1hu99rtHuN1qjTGXW6w7Y06Bn3+/12i0doMAK9
5X0pIuhPB5PZcApE7TSkM1G30Xj5+UPr0/lsMNqYzlZHk+fXN/vtrp7Ae4vx
bDacDdsTDaSOged4goJ5ly4XOYrjLZZoaWUujt8D7Luj0WA87I9Gw/FwIOto
OBxjK32kJ4PBbDyeD4ezDhB+OJlOJ5PpfHU03JhMt6bj52fTlxfzl6eTN2bz
d9cW784n70xG709n7/Un73f779Xbfy83Py3VPitU/pnOfZrJ4vT+hZ/5Jpn9
dzL9bSL1nR7Uj4ZTx8LpI2H/eNg/EUkdi8gZ/kg0eTia/D4OFkgD2GGHAbkC
/gL1APzjiRShHnus9N7gYC84DwCPe2LizzHwLhZLnPSSivxxEQLhxJFIjC+P
hnGCShwJRQHmJ6IJ+nmOx8AOHvYndBW3f9QjEQgjiFMIRCAEQSEAk5utZNBI
sTiCpIMEkF86y3mM+pEatsORnZgvXBCJgwhMUNjUn8aI9mxWv6NDDM9FYywl
05qyZLAx9f8j6z2YLDuP5NB/scRMd997vLmue0CQWK3WECAcraS3j9I6UlyS
IIDxtqe97/F+BgB3GdLbfdqN0M9UVWZVna9HEV+cOPfcc830dFd+VZmV9QxS
IvDITVodirEFPOHwdMogOXJRq0DgEQwUIC5lT1nSRzBwxJop+MUXzTC6hRE+
Wm7fTCc0MvXpZkYHmFh0NpfFBIQeR6+BAtFEgJQB4v8Fueahp1hzgZkNnWFI
d78gNBEg4NNf6Gt9IeBjMowq+4MbEylAXFhYu5l2KE++XV17M1/94y/+5rnX
0Ia+gAjyPoCY56z8RNjXiTMdh4rqXDOqhsJxggoi5AIFN/lR/5Gwj+sNUSCm
0tNoiDbUp2VJpsDif1HSgFp2GodlflQVEeFhNFpy8ZzNZXSfoAcdoWG3yCVf
YKVotyw2x6Pdutyqyi2P+YoIdX63zDbl2boUXBB0EFy4VeRKKJeZJAt3BBSK
EY9MDW5W2fUik7zgqiQIla4rxfI1AYJ8SU6uFAITkiDIQwn15wEE5y8VigWC
CLIEIy5J2JfgX0iCoOjwRXb+i2z5i2JFUECBQM6zFckdfj9e+X02+hzH32sq
sfJlIdeXv9JnJcsYXyyyr4rii7z4PCu+rMovqlrLU2XxZVNfbKsv2/LypPl1
V/5mtf/1vP/N6vR337/wuz/97m///Lv/+Ffv/eov3v/7//jurz78/q8+/NNf
f/yX//DRn/3ysw///tMP/uGzT/6fDz/52ac/+Pln//E/ffrBzz75QAc9fvzB
Tz99/7Mf/plqUD7+8Ec//Eg2vZ9+8MGPP/pQ1qcf/sWnH/7ZJx/8hx/9UDbG
f6mzJH+o84A//sGff6ozJnXY2Gcff/jRB8CFv/rw0x9+qtMoP/zk4w8++vgH
H8nDTyQyf/BDHTPz4Q/khT/75KNf/OjHfy3f5OOPfqHK9o8//PO/+vhDieOf
fPbxZ59+8PEnP/jssw9//NmHn/3005989vFHP//sZz//7NOffvLRTz/78c8/
/ZEO3vrsZ3/90//8i5999Dd//YP/97Mf/vonP/7Nzz797z/6y9/95IPf/ugv
Pv/o57/98LMv/uqTL//8z6/85Z9d+bPvXXr/wqXvff/qe+/feO97NxertySA
T9a2Jxe2+ws7k+9udav7kwsHkwt7/UKWxO29dnW7mu/Wi61ag/xurUF7r9Wo
vqv7eQnyc63SyAa+W/BEr9davdHdezvnyW6jJ7vtZK+b6pI3qa2wIxAgR93S
I8irXKeZculOnijQdEedZA1WwCEK6MO23y3r3UrL/ofyJnJS1izyM5hHqZ+B
/dBBIRIBLQoVZ6I9S0PxMDgCfVi2JIu57Rc4uF+3liBUbimJpOBROwmiMOwo
yQ6H84DyyC4rilmWISJic5nWhazg30bxP51lhg1/46N1OX69fZ5MwLSu5LZ/
XtdpLShekvDCg21digIR/Hnx6/nildaRptYvIGEfKPDSjO86DkRmOvAG52/k
HPQuuxLQm2a0MlvJzDjCRw8jU7DKj1WBaGpNbyKWldBcQFWSjifzlmR9t9WZ
9i9IbrJ64d9+97laNqEFgz+fEI4SOiX+y/FJJUBQP6mqZwDHGEDPIfVaESoL
Bn9DAeQX7C9jOqCALsldK78A1UNPDXShRqSmo0AKziOwnQNEpIADywjYPhBT
KRHhq/AgDSyI2TRHTc1RNft5sZdlvGG/yHeLTDICSQ22y0KJ46qUyL9dlxss
E1VQFuWqLJIlcHBbgWCoF93MV26X4ztWKVIgQI1o5QaA4HqdXStGV/Ol6+WK
LMGCAIIrmiMsKRxI/BeYULDQrOFysUJc+EqgoRREsHzhi2Lp9/n5z0fvfJkv
AyNWfj9ekqUQUI4EIwQCLlWZYsF4RZ69VGZf5flXhVwZfZnLefFVkX+Zjy+W
+dWqvFIWeizyK3l+rayvZuXNsrlZ1Nfz6kZR3yirG2XN69fy5nrR3iq7W1V/
q2yuV+21qr5et5ea8lpTX+nkpLnSdde62cWmu9xNLnWLi93qpeni8679cnX+
+7X5xe+ufrm2+tXa4qsL84uri6/W5pe/e+GrCxcufff9Ly/86Rdr7/5uvvji
3e9/8e57X773H7567/tX35fjhS/f/f6X333/4vvvXfzeu79fW/vq3XevfO97
V77//m8Xi9+8d+FXFxa/eff937574bcXVi9fWLu8uHBxunpl8e6l2er1xfev
z9+7Nlusr717YzK7M19szC9sTOZ3+9l2P93qphuTbnc21X21xuHpoe7AF8fN
4riendTTI+1+mmsDVDk5bfXkREsis+N+dtjP9ycL2ZbLFn1b9ur1XGL+XrvY
axYavTuBgLlEdUb4vWa2386P+jn27bMdCaeCBe1kv5fX9ocCGZVu6Xdln19P
dhH55bbDbhE7fDnulK0kAnso1+/XEsBbreQ30528kZh/1M60sIM6v5xrduDR
Xrb9RIEjDe8TxnMt8lSNlXpAJRwi+J/InbVE/u6otvjPwD6cYPN/kNdeFxJQ
aBjn5aFcJArIucT/e+1UjrJQGlIgkCMbBxQFEPwfQiyqEhHlB7VSdFooa8Am
4uAKNVYosdhZLUh7im1OgWJBPUy3DyCwGcfaQQDVim5ovazhcECziHQIr2UN
WgyRENeF48SLxGvajek0kuuJlow68sVR8OG7oXFgFldCF8STr1EIUjyazggH
csVUo3MbQDNgQaI4DQ/qf+a4gVWrEeGFU9LK3859rqUaFk2+1g7ixT8vLigc
6EvmeHPJJuZJx4GpT19Plbb+enX+//3j3z5nJmXTx0JB2jxLikJETC++NbQb
Ugioq9Rr6FFVPCiySAeeWgdBR1EQCQJjAdrGNaV6pNec3IA+MnYWNzaAxiaX
6UNyxAQC5AKFrMPSjvt5Hu3GGv9r9SA91OxAHlZMFnCP3Jzv5IoFO0UhWLAB
LNgoM1mKApXE/0yvFLnAgQJBPhYgEAgI4oDrpoqIlDsQCLiaLV8vRgoHTS4P
BQKuSV5QLN+oRpfGS8wLLmWaI8hR1sXxeUCDYcEVYIHCQbkiC0BgKQNLSV/x
HE8JUvx+fM6wIzsPAkLQZHylzLSgVIwY/GVdrsvLclG+XpXLs3K80VZXS4BC
UVwrSzler6prpawSJyUgo7xWNxBH2fFO09+omxt1fbVWMdXtur5Td7erVo53
KlnNRt3erbqNZiIL13s53m37jbZbr5u7db/ZTdfrfr2e3qkmcryrd84229nd
enK3nm42s+1mvllNN+RcQmu3Ks9uNXPZbG810612uo1QrHtsVMJlL61Rt1vb
qmayCd+dLDabyU6H++vJluzJdXetYVlDdKVxVXbCrJkg5M4O+lUJ3RKWZUno
5jru5iyq6E4bO/CDyXyvn+lR9u39KsP+nsbwKSszGrTbGaL9jMFcNufYt3eH
3fR4Yrig8b/qGOq59M2b2VG7OOpXsdW3nf+e13CivBMMr5fxbR1amqAbfoEA
WRLq703mp/3spFMyF6ul5ofP6htabb/Z1z8l+Ttq0ImvSUHkBSkvwHtOdBps
reeeJhAIhsaBdmqpQdU97OegCVoJ9QCClp5yDxoDglMQx6og7abROOBMsQYZ
cpSPqpppwgOcMGtIbCVgUk25kQ6mmUYgIhEsYU2iEGtEIIjbWKEpSq3nEic6
sx597ghCIACUxM0tg7wNOPOCzysvBL2cDjJRe+HEkgKljNFTLCH6VQ9VkteI
9H6fXxPu09ZTkLSJ6YmjQwAEq0Dwo1h8M7VQT4dS1oWiOqT+EmCrv17MlLO+
sPjXv/tvNgbaRhVX0VamdX5kAXJ85tyB1u48+OuqwRrr5r/2qfSkCez/lNHe
qZ/JA00JZTOgFBLsZ+UhOssqGkpoXYgaUcpHY0IlhUOHeSFPqUxI9/wS2POD
IiMcoFgk6UAZo8pIGR82NbgDNakmCshL9kElC0zsluVWnm3m2ZamAOO7xZhw
sIFGg/VsLECwhRoRIQClIWWTDQiKMZMCpgM3QBBcK0coFo2uFys3y9GNUtFB
loT6NOyjUrRkGYGtpculkQi6shUJ8heBDnISWQNxgeeXyxUCAZkIRYRsdK3K
BRQu5yNdhSQpufMXkq0UVwUOyuxGU9pJLXCQ3aiKm7UAgaz8eqNwcKMqb7WQ
zgpAlOXtprnTtrfq+mZdyznXnaZdb9rblYBCc4fHurvbThQdmv5O28uzcnG9
ESDo7ja9rnay3kzuSvxvBQj6jaYTjNioJ5vNdKOabDe6JOxvVq0G/34m4X2j
ane62U4rT/Wydrt+t+1QOREgWOzUiiCCEYIFO/18b7q20872+gVq7JoCHHRz
1lUk0h4hth/1s+PJgif7TS+B+qCx7fSRRHvsrhlXD7te75HFF0o857GZCmQc
6dvKPRNStBrYQcLGzlwRQXbjrYT9Vr6AbvUlhOoLZ17AF5ASONAN/0GDOI+X
H2rERqnfgz9xAVodeZWyvVYRImqA3rWvjTCuS/5pWAIHGtiBC36lPZL4j7+L
AzTdSGrARCCqQ14XAlIQAnD/YVHLzl9gIkWB6CA4KhrJBU6rRiBA1r2yoUDo
Puo//GN/gHrvfTjOaXWo7h/WHQtEFivUeazSHiIPHXYCgOBW3xpXa+tEftJ0
9EyziVpWsu6e+4nrgjo0C5h2lKrRxKquDVvpVyyPQCfDpMDjuY0kixEGzAgG
vmDaU4n00ieXIR2YESkUVjR3mL728G4xf9a/nlj1xohmdhl44qAOpRhhr+bS
EvDlfG488re6859+OxvG1tiwGxgKwVxiSAG+gR8dk5Q/rK1qTrGYvV6d/9vv
fqnb+5hEjP0/0oE2urOfVDU1RU+CUPYetDghufNAa0euO0pGzwigs2UY5tIN
yz6626801D/C/7WkA+SImQ6AGiBZUJwUuTYXlwWbyOgsKkAgUf20rQMO5ASr
ZO8A6QBtK8DDYBB2Riv7hQLBbpELEEhSsDPUiDQdIBwILuh5Pl4XgHCCgNUh
SQQEBdh3YAyynFQqIpL4f1WDv5LIqizKV2wVoyvjpetACiLCtWpMICAoSILA
klEwyxdz55cdMpg1SMzX4O9AIB8nAd+rT7JUsCQRnkey2Hx4HSeKC/JPqAqB
gNtNJeu6wFxT3apLe1hKRpPrDWV+S6Wz6Keo6xuAA8UCPLT4X1frTX2rrLDt
bxn5ZcmzG52E/U6OEu1lbba93KD3VHrndj/d7mSf3zPC78qGuZtuVe123e0m
12Vt1d1m2cj1PQm5/WSv6+W4LREJ22zZkMtTB5M1QRB5yU6rpXXZwMtiACcE
SJjVCOzbZoneupHGw5PJzFBA3p9xGBGVkZz0q0b7xjfVXoeRo7z2qJ/y3bgz
l+sHtZXl96jPwf0HHtuNri1VkHNArSaKPPL19LUekD1oT7VCJcBR2bmpdPAN
WfDRL9/KqxoW/IkCkhRYDb+b8t3khKCguND0J9qDo4sNmPEUIYAtA0c6EFyy
744ZAdIBi/n3u1lKDRg7gFYybRxDhGcuIFggiOCtoyz+tKwOGUdQdw+rSAra
GFlyryi0z9QHGTPyp7ogVn6oI3qiPHI7uOgnfPFLjFx/2aOPzBOB1IYocSg1
p01ohCYsDcnLWSSn6w6iPTyrJ9FHwJ3/LBGUqsTUUUB9PqkXimdfpb3GE2OK
k05kda6Ttw3J0Ntec4ADOtR9gyHFzCYwoWDKt7JsQiDANaVmXjFpyUTAdG4B
IJi/nE//9+/+G1EvnIWQNzX8IbM725b//PV/xHlhhYC6igYETdwSo2lmARQG
60nbsbskdGVkCmgrRMqAMwg4gwYEQSkocJSNQRyUVA2FDTVJYYUDAQVAgBpQ
V0oKUy8aNqT6247rmhfgConjfcGISpdgAeAgl4XW4/GACKXSBOtDIjAiFiSC
Us0IbtZjxn+tAmXLN/GUwASAYPlmbTwCK0hyFFy4mluCgJLRCokDLRwBC1Dt
WRGA8FTCb/Z04KKS0SvOPqw4xIwZ+dN1rVCNK3ofdCVBvuC64cH/ljVNlLcq
baADOljwt0SgMgiQmC9xXoBgo23W68oifNspKCBTkHNGfqLAVicpQHunrIkL
2x3jfCfbe4nqOxInJ1M532laOcr5wWS2W/cS1XdbVcLvWSKgJxJ75YjwO90H
qSr3cJFj3cc2XhGhm1Jmo6UeVNcjeh95wN+zPXwnK3KBASD6aQR57reNY2XK
gOu8YRdSHLsC0ja263Hz6XQukV+fqmQTrjt8DdRACp2mh0jO+gx7tTz4T9jA
ZUWbdtjqg9Wtj1t5VjbzRvIeCViA1SUE2EXeX1as9mhUlwgvL1TpdReJgH1E
3UlsJxBwCRwcljXfNhREjP98CAiAWAgRnijA8weI82SEZZ9P8jfusRpR298r
KiLFg1wZw8dNtJq2j1DhSeN/qhcd2p08Lj13XajGfw7bSn2H0D7AFW7VEng1
+mn7mE23p1jI6eA2qSz1Ly0p6IfYjuDvGqHZK283oNCU6xXcraNrOFqPU20n
xUKqF1pde+NqT63qgyYOoekfoBQabKVnZjEH1pjAAbmRmpdiEtl0HtCgaQIG
Fn+N5rJv5msvZ+8+/PRppDahraJ8iDnUUwOCOnqH00VemCWjpy2qfEX5uG68
g7hxBwm1Fmen4TCHQrkAG1If/nJQkFbeRFagUpQzU4CaCMPr0VZ8mBf3205J
Ye8vkysxnixQgOlAdBbEFU0HkBHI2syzbZWSlmw6NppAIABAsC6bf8kLCiUL
bmUrN3Nbxh0nLQYKB1V2Dft/ZgfegzZCpchqRDwXILiSLVNlRCyQXf3V0uAA
a/lsKWmE3b5G/qgpIR0wYRI/ER8xhoQpk/sFFK7Xxc264LM30SKnIFVpOnBT
cE3ymrK4XRkowGRDH0qE9+vD/l9i+82ijG3/3abmEiyQCC9AgFKP7fkVAqpm
s1IgkF09479CgO/zdzvd3kvk3ywrnnAJLshiwGfwjysAiKnsseW2Q43hJqcM
LaWkACzXs4bPrIFqeaVZdWOvWsrD3jbtkQvIosYSYss+tv1xwwFI1dhyhxoH
NzcKLoj8GvBdzAP0sU9hAOcbatgvG8TbBjv5LiI5VhfROGo1R17n0dgugKIb
/uak6xmiT+QPajrjq9jYpaQtjvEmfOqAZf+64wtP7XN7uU4pafSIQSlaO79W
IynQXMB0RKCDnTtQjRDdhNg4pq0Eng5o+4BARlYhznutuJdEYOgp4ORiRoBB
XgJPOUaPx61Ryel4GjYREA7YwcQdKSISpxv3g/TFoSEyheduSfoKbAI7CzCV
xixG1ZsI7EDaLOAnkwCCFyZMbVE1okBo7lnDNAYfvERb8TC8AEpRs6rrG00K
fCQN6jaaR2gNH1t3VPUnPoamD/En9/nhPofwbs1iuJ9IsXAgQK+BUgMzjK2f
v55P3+jM4nefT9998V9uRV0IQFDqhOJOmYLnkAzJsmShN4uJaBkw7ZC3dXAJ
EGhq0MR4epUB6y9AAgH3KnpNV6nF6L3KbIUECwQCQBBX95rqpC45wl5ehRzB
WwnYU1Bbo/FBnrtkKNuvZLdfWkOxL0CAnGTb2VgggApSdSIqiu08Zy6wVWRc
kQ7IyZ18JEnBHTDFdyoJ/mMupgZWLAIWXB0vRTS27be3HlwrJD4vX8mW+Ox1
Cd35kiYIxcAdoLyzTNHppUwrRVCfLqeIAG3qwDXwVdfrTI9456uoCF0cL8uy
QpBgQZnfdMCSdacpbte5QZhE/gJYYFUgBQJBgQCC25ILVLUEf9nqS7S/Xejm
X4L/narkUZYAAYM8sUBTgLrTOj+OslC0mchDOW7K/h8PWe3XFED20pIaqLjR
Kuo8crE+cziZyp1bkr5JnOynzsZqYA8t5fFkgTRhgvr/nPUWQoAWXuRcQjo2
/4etlYC4e5cwrlG6myLId4yxh00f23hNEBDMI0Rb7aiu5a3kDQULYmO/Lztw
VWn2e5DrECACEeTdFFxA18pnyQfJoh1KlGuOvDqUNm3F9h6I0BIFGM8lUN+T
f3LpBaXSaFw5CfjgkRclyDOG39M3MeAgWRw+EkdKxpVyjyYRpcKBfJDcTyLg
MK/vaTpgY0FIDatMSFKPotLzsjnJK9OOFs2Dsk09hRgKWChm+q+BAoNp0Ftq
vcZP6u5RZb5DaEA2l/vgCCR0W8mIlKVXLXSWMWs+min00U3AG9hfoIbVHFLQ
m/qUlAEUpGZPl0pDU8XRy34YZ/PKuQA6jr72VoLwlAgdUVRs4EcNfwl2n01a
6IX0Tkb+ODe7CTQgu7l0F3PK/unCWnQZsFvZd/uEgzm1SXTD9iVJwYTvrMAk
WDBffTV//+nPvjJnuU4dJAQFIByyiTPqwjftJeBjZrGgQx1NBI/KXJuIG1I2
1kQ81I6QIwDEO8sENR1oLbxXaCXmJHokBcd5pm7VnaHDaQOM6OoHbS3nsk6K
/NQs6SRHKMkas0B0UJXH8J2gUlSAIAiCPVSBtvOMQICK0JiZgslHi0xbCSQ1
qKsBCIAC6/lIlmYEAgQSPIsRbCgytSeqcwGCdRyxwqcoZ6WIKcBNAwJtPZN1
PV/mujo+fwNAoBLTaoREYMR9Po7nCQexrhoRsBzZgUR1YgEpiava0SafmJEL
uOZcgOQCN5pSj2UeKMAvqVv9Up005ES7JORYFusS2D3+EwsABOV6XUmE14Xa
Du9fR1GIdaHttr1blrLPZ9jX/X+pucB23fGcELBVt7t9jx1+x6VAUNaU2UT8
Z7hm8GQgPZnO99tGtvFy3G/bKN3vI4azWm6FGrC3ByzjICwzAqdL9vCyUAua
nHRT3V2j2HICIGAtnQGfb275AutCeEkAgbyJv1UXzIJlH43K9YdKUSO5RiPA
wZsl8jMROLSqi+66H0ym5GT1Cvq8yPMG+sgVQgaqQA1PWJzRIK/+Dx2jPWN7
MLzc0ktgt2pPpdiR9gLoJp8AJzBRGS+gLywqbvKPYShNHzm9mNDH6jLq0wOR
Dui4EA4g0IxA8g6VibZsGpKAcJqX2P8bKKiOCCNow22AZQRlgYkFTZfMLx5q
1M/MmFodJ0IsijbYxnoEcD6MKnNeIMyF6DURHWfEAptH5pv5EIim1DDHHPsE
ZBMFORbMorlYrSomhgWs+UdAftVPmCAYNEBopLSygsIwlca2+u5BkcwXmNAm
SN9Eew0k8q8GiHyNHgFYXvdIAVa/na/ClWKhQyrpRKeloRlUQ4s3a+//y1/f
F9A071aMJ+ailSizKrDJZjf3zCWjyMWsLkS5F/liYrTkBXyKwlH8v6P+g64x
6gGYAnBmJUwn6gc1/eUQ7evyXlWcVsW9Vn5jVRF0T1kD1ovqsB7lhGL2DlA+
ytk0aRVoj+wAjgIEzAX0ovUXn0kH5ERQgByBQkCpEEA/Ip4QCGSxrUy7CVAm
YqQlNXwDRSGslVjXsiVZxAWFAwcCMsXGBUNfisiv63o9TopFy+QL5ERyjSvj
JeYdmgiguOQpQAZkyST+Mx1QaRAygvDKIBAwW7ldFrKll+PdtmFqQCzgkdAg
N9zMCskFJCmQdECusCK02bWKEXW1WdeytppGj3XDsr+igICCwwHDPuiAFomA
FnwIAZIIbBeVpQBVw3BK81jrgZXI37UC1ijpyA7comtwpmyeJRAcOJNL7jUq
NhLVZTd+0usOXKM3gq1JKxsDgjixrTiKMG9hRLwE1Z6W+cXJZAAjQQFd/rk8
QcpgjriyJJ5bUQgpAKs0vkXHJj9R+6RbegIBUUBeLg9DvROsgbK37UTeSpaG
dInheFuBm4NCEUejPbSjTAFCJqSfJdBQVFY10j+0+jCXfVcpwf9B3ckmX6I6
gzwHzRAgkA60DgStQwZmjlv9By3GdYvWUXSS1hxHmA/+86U5z6AWNEwlCx5Z
q0a+yUR4MQUpRxgTHd4eSYZtv1vlmF6IrcT0lBimGyc6Ir7qpQ+vVw56Yo3J
VI1670AfTWpEgfCgM/9SvCoayjDpoGfhSI7KKcDOKMaHvUEfgYX3XmO42tPB
MshaDBDbJc7/YW2VbK8EebXCNiCQvGAGkVLHZjFtWJub+/Q3GEbGpIBW2EAE
LWS9mF74H784DL2obPh129/Jnr94Whfyb3yYZ1RkwWiu4FSyYGSIBYGnKRzw
f+opCkSOBU34UQsQqCSgYeNweV+AoK7uo0zEtuJ7tVaETirlCAQFOI/muBza
yuhETbKYvcNsImN1KDKCXchHd5ARCArIyeZohQ+ZEaCV4GxRKNeKkBqTFmPa
k242hWUB+cqtbJlJATuLY2mliH50ZSQCY8b/W9X4RjWKdOCaBP98mS0GV1EF
uuycbzSdMfhfsbWcMgKytGfN6ksjss9ON6tAlJwygcBWkd2sFAhuDYspQK4Z
QW3eSreICNz/I/7fxM5fAr5ckSxAc4GyAlmswZ/XmREQAogFkh1s6ZxoQYGa
JgkCAX60Us9ODS6gqGTJw8gIKLNhbN+T/9nWdtEowk8shCKWIsB2fHhQ854u
5EBWq4dUJtjVE6v8yLLSSrTW6qY6AQKGU4UD35BTmZ9uzhmfyRqTFHb86lJx
kdEHDZORlumA1p0g4z/AvppRl5GZ57p798gcH+RSopZ5hFvs6kUr3ddqE3HS
TE6aPiiAY+7PvRHAi0WtdQe0XXDEdJkgBeCkQMs8QoBAAz70P6clEvPmzNAx
SjjiolMGqv1Tr+maljLaX8w9P4M/qz3hRc9o/8CNqbkEDjiwzAYWmLMxpYnW
UPaobNhozLFlOrmMzkJuH/EiUQe9OJsOWJEfqs5Ua4oEoXs1m1CGBEOJ+v9i
Cjru5DngPj4xWOC4QXf7YHVf9Z41qPucDrU0MzpiB2tE086sR0kroyKkzhIL
reqw4JM41wEL8G44zuhcIYtMAeBg8o11k63yna0lAc9+u7r2arH2h1/816d9
G7PGQA2gOtRIMFdZ6RPvLIiZBSwNPSxzLRBVRUrchMsczyUveFhVNJTg2DKd
XMyG4tZqg9gYDM4SegJbOQ37eq6/dRLz78Fojp3FRAHGfPaOhcsEUQDsQHbY
lAct/IW0X6BQaoApACBgF97UfEgs2KkKTQ2qItgBHqMcxKTgThr8JeDnCPUe
8wdLOoiFkAgsw6FuhZFfqYFi+Up2nufc+b/VUwDyl8tKRqQGgiMg6RwyJADE
mOWgG2WGetEY57pUL4T0RL6SUgNFxoIP6j8l61pa2vLOCDzks1VkBKCDNSOA
NLTis5IRSPC/W5a7fU8g2KgqcrubZYVtvyYFggJy5M5fFrEgiv+BAjtlzRhO
VSTK+FF1aY+1aM/tNNMBCnIaua776m5Q5kTxP6QypttBqEe0b0975QIYotNE
gAGfD+WeE755kjU4TLSGIN3AJlsxnyjAIpWRCMFK49+CRGDf1Psta+zcsbOk
QylOigJp2y8+tz2o60CEY5ACqA4ZXug/IYnkEpOPsMm39jH0AvOGmOJ0AKbY
bIVcLMQMhS5eJILZGnCvslzAU4OYJ27zaJgXcIaUWYzW8BoqlS++V1SEAJpI
RPzXyF91wSOkQ2oUERrOpmkeDwoiM6l+XLVsNAZr3KQZQQTnl54pWMmI7kNK
6XYxrn0wLNUikgopX7oeFeNXNCNIG4qZF7C/wNRE/cQml3k2EUZDbEwmCjAd
kA38a5uGPHUNqm77NW67xTQZBOsgm2s8t/jPZ6eUAK0GsngLW8/0QV6CN9S3
DXAxxWmiIHqz+u6//Po38i+12cRd42OLIRBCQxmTBbMYihuAHRw6FmGf6QAz
ODYJ3i+Kx3UdecH9MtdCkPlLmJSULQOBC5xEeWph3zrLdO4AxEKRGqRAcMZx
CEQAgWC3yraLkQT8LUDAUAuSsK/jCfS6XqwFAjQRUAM6Two22VYG4dDdcrxe
yBpJRiCIQM9qAgHlQ2o9p1WXMRcqPyvODoxCQSQROxIBritOB4MXWEmBwLnj
twVCvKhyIxcgsVXtWplj51/w42T/fzUbqXV2Il56ix2+kWsWQA8lDf5NsdHK
Vl8N9wgEKBDVzBQICutNcwtwoBlB25As3qjrna7b0KFvjWQEG0oWKBBslnVw
ATtlC2FPR5klQYHBPzgCHn073QgKRArAoHeCK5T0JNtvXZERRKcAyvKTqLHj
4VDh0cr8dOq3DakB5fce81uyxswdYmduHIGfMyk4dCghDMU3RLKAYhcEQkfO
C+zmxZHX2JkIsGk3yvtDV1cCQO4LVCnXgPcBrPTRKeCAZaQzAzgr9iEEBWVg
235NSfx9wkdaEgrJAoJZIH8R+3+eaKhHukGY4J/tMUbHxp2BEa4Vb81ryApE
NRDBtIU2pLKZBE0QdSG52SYX1yYKeuRMMatDzAWABU4WEAvq9mllqcFbBSJu
X43wRbTHpMvu2fBU9wqBkSjwPJGPvoJN0Mu+kQ28LBaLUCPqvb+Y8qEpCIJ5
SEltMIH1DmtbGcYcm0kpJhT0Z5hcdpw5Uyyf9bV5lk6SiQMzlIMWb7gsU5jJ
zd9gw8+ugdcsMa0umB2wLsTS0DfaRzD/l3/8pXrHuUcTBxM8jxMQBDHI+LGr
RgMdNEcIyVAzDKaMSTTsEHyQF+QC1HEOHQFpW1k0EYSb0JAUDGMrTSyE3zfN
AvayjOaibCLWkQQoEAkEKAoU4/0ql1wA1tOGAnvOEe+CJhA42NbIP5LF6pAe
cbIB4ZByBGCNKShV+vitpMDzghvZ8i3dcmsKcBM0AUvxoRrVrgHZumcGBNfL
FaYGV1EaulbRfcJsKM6kBtmZTmTeZtmBA8H1Qj4o45IE5LorVKkXpahVLkq0
p1hIGwQAB0QHgQC2S8sRKJBTERQtA1YgQnaw0bXKHSBNUKagqjawJPJLasDq
EMVCgIDWSIGzuQBlQsEO7yhkGDo45dpy7QrcswUMiAB00HxhT96taqD2aQEE
bZJK9GRsj9uZN2QZFnDPz031ABCdxfMI74CPnugjeYGsSBnCpW1o4HU1adSU
WAjSElbDADtU9ePI8v6Rl4ZCh0npjrtDDB1eOgXe+WJs+2tG76CM+SxBKgWX
0xoiH9mlVw2pBOtTABCENJQhXVBgP9MKlbxEbyjkjw5AUMDXBTv8+63t+c8i
S216p8ooA3kh5EMNBxOQC+Z02gdVSSJg2Ae6yNwN6M5Mq4zCEc3oHDVaNJpN
CBluOjGYCzFlAH3Qhi8Ec4RnblKtcQ8DGckOSOxirqGZQsT/3pRC1lAmW/2u
ll16AgR1kiOwrWDiOqI+GGTNAqaDQzUJ4mEYGb3mZtNXswk36rG3j9JQAATp
Bq01IUFQQAEKQALkLDBbkn04MjlrSlK54rY/rF14vbr6b3/7t5wp8NwpEgx9
QGLV9cYIAAK4nnsdiZIh0gEmFqrVM/x+XamnUH2GF7Zl/WLQi2rCaJIhtg8f
VwWLP6EOjXmUp0UVdSEyAmwcg5XQ0DVGjpi8MMVCggL76BrTXCApBBERJOBL
FrCZrwgQbGQjSQQUArIRr0cfQaQGcryVLTMjuA1EUNbgLBZYmmBMgRVwrH0M
23iiwDXYk/L8CnOEzKpDZITZVpBwB3I+Ss3rmBekZMH1bCybfJWwysNs+Yb3
NcjDEIuSEdDOaGDB7QrWSaqJHQYxICmolUQuHQgQ+WUpp8wsoG0IBJoIUDIE
akCTgrqFdqgmBOzUZ+I//Ha6wAXLC9A+wNtYFNqrKiozo9NWG6zkrST76yeR
DqSUcRytBaClIYOVg9gdxlpQRPXAhaAPHCYMBTwdOFOuZ8CPRl2v/w/kAgM1
OnYl5CJWU7RTWecXoSGJ/zVj6VE9tBXbZ0norrvQghpqVLwHoRvSU47nPnI7
IB4ZkDWko3Bk4qK8pjSUO/kgJtgywERAyQV7YZ0kBci7KRnCtyWI8B3iQ5ky
6EdXLXlklJJqCkThM1ySL9ZBJLAaQPCvgkROUcBVoy4caidRNXraT1P6QE5C
IJoOW0y7z1640Wj0HcfRXjiRN3RNEWtBalvUuUm1C4c08kteoEAggVqAIJiC
tLmYbWVxRENZT38hHUzZDybVDNdfr6r5mwCBrLj4DWRCKPLMOHTA9vw+mFI/
WrBjMZPXyvGNqYYGIGDAJwqQR/h2dY19BCYxWqy+nK/+6+e/YqeA3GCsuqZI
dcyAfjbpnigWdI8TjuBRWUTvhndwdEwH6CznhnJVakCddo3ZeBqHBtWLQh3E
RIAxX+s/eRHQoOln197v24PaRlKGmxBB4YBNxLU1lKFNoELLmI0nsywAdIAs
CEf14bYkBYCD7XIsF3cqw4iNfGVbUMA9iCQpSKpDKwQFucIEQeL/ukuJSBaE
XsiYYo3PmgWEH52iAMgCrRGNl96yHoqwz+7gK8XQO3YV8BEKUranaS6QjWXJ
Vp+gw96xpJ0B1SH4Y8BAr7idWGfQUu+27/bZICbrdlGxWWDdxULRRBC8AEkB
HgUIVEfq6qCQBlmcHxChYUaQNg7sm0lm40pL7cD10SedBlUyxSp3qaKxNyVn
h/bbpLp+1AwYETX/e5M5sUC917xkJBfl5nvt9H4/Oca+XdIBeQdejyzgMERK
3iPGnGWAhihJIWKb0hJ1IfIOBx780yh65OUgJgXy8j0v0bBcT+yg8hNb+o4/
imgui0TgBM4/sABlw28XrqFpCqAbeH/hIDTFhp/9Aid1e2SZSwNH3zp8hyhG
5Tlh5X7bE33oPq0Di6EgvVdUsduPQhCbCFgQQEzogywgm/y4HXSkVB6yWMQy
EWVFEv+51ImCwb81O4iYTRNjK585Clh2MHDEWlPSdoPJ5PnUe9CcTY7cIRqQ
NYAjF5CkgCvUQfSUiBSARz58Cb0oVaDGCIfptJvUEQUY0nkR4XpCdkDP6SwN
RECmgA0/UUAu6kdP4tNVdDSdSZyX66ogXV1jn1qiMkXDguDObPXff/c3AgSP
ivxZ5/lULSDYDtZzJAI6DftKInRn0HaAA581IHnf47ahFtQcxfEfTZsIifwn
Ra7S0LZmp5iyw62uB33LiywNRQoQ1ABfdVSp3dxRW9FESII/s4OkiThnBxmH
kdlsSh1PpvtJHUZTFOgmHgcvsF2Mt4ECWwXXaKPUcpDaTTgKsEwki6Wh2/kS
OwsIBGlqcKswgeitSmkC1QhlSwMilCtBGcv55fG5q17wDyAIZ6ErZjEx5mL7
cDgaRcpAyliwQItR2ShM8FgauuntA+wji5jPWZykiTfaCklBSTUpGweIBWoK
AWmQCoeACLd1WIOWgKwWVNU606GqNwo9skakCUJt2iHrC/a8QGK+8gLJQ+YI
9hARVf6nTH7j22MKZmJxo65lltAIwTsiijyM2IztPKEo1MrpNUmBlozwSWtq
nJO6o6OyeWn6TN7o2H3QLyRrkEUc8Rp+R/YZicAZP39uv62cPpRxTPYT0ZiZ
QnDQUUFSfRFpX9Te73XdYVHR80cHBLCDTJuCqyjph9T/IKuIBQzpriwaEocU
DriSIn9nUMJvnpdkAbTgw5vL4SWRTZA7YEGJQMCT+0XDtmIGed3Dw0aG9eGg
C9lZkAwurAkZIUEPCIhiEZY7V/uoMnoms78sRhK8QMqQtgwkPQUzrIl5lkIn
yTr5c4cSFpFi4jDrQs/byuEgxtDMoqGAAZm4IO+gUXo6pSWpbunX5swIVJjk
8iSN/3M0eS1YtFn1dgAjdsOYgmoiC+Z81UwNriXOM+Abg+yjcOT4telLzbya
HqT6cL54Nlt78pN/cdPp1j36WnYW8AdCqc+TmF/fdu7716Q2gIIjYAcEBST+
F/zf0blj5iNX+f6/uFflsv+XsK+LdSFPB3i8LzuBfpKmBto7VuZaO6plg1Qe
yjlG1adjaCIjGAwlNJg0EvO3c/aLqa3cjrLD6iykjqPaRwZ/ITnPxiQLrFJU
jkgNRFHIWszQU5bqSOWcxAGHFPi0Ggn7EvyXrufnudhBwPYBCf5Egav5clSN
rqpx6FKKBalPdTSUpbWgKBwFI3AFrc3pIndsNLFXgSgWvZFn8NbOdatfalvZ
rTxfL0vLCJAUMB2gUjTyAjlGLgBSuNppagZ8zQisQCTBv5brzBS2iyo4gl30
29Lub09rd/VBJ9clZajBCHSuC+0O6pYqd2zFPXiawVpnRZu6PZ3Ooy7kgTQI
36GvNgRCJGQl1Mf73J/OTpEChJLTumhppEMccT1PijIoLimjoShgpPYk9KWm
7aw7YgG/fxAEqb2z0wcgDvQL19zny52SmyBraMiOnWKLTqufg7xmtceEPa01
fIWeh8EcY2ImTCL4NWyiX9WlRZ7BUEKfYlNYFzkCt2R8W+svKKv9cb6fF2ZM
Rx1RqZGfDcU8OS0kgEyCBTDHObAGwSAjO6jYWaAVJHYZDMIhlhS6AAhMNJuk
FSQsK/hQrpPG/EFWaic2y9g7jrt0tCVHtFMOGu+giYOmCR19R8Ea1LGMI5j0
Pn0sbCUwEBkvhx+pRnvu/CV06459pk+9BBwQC+S65QXuCPTatu7QBU1oRjTh
DHobfLyYDaWhmWUiKkmS++drstsPOJCLZB/Yj/xGkotVFS+9WKw+/PGuNxFY
YqVGEz6qTOkA2fk7WYwEoQ0ICDPSoIkFMlQgilxA9aLdhC3kIRl91Enk13gu
wV8C+4NOZ5uewkeCF62PGCOJ9de+NRHacak3HMNiVB2nG+smC+HodjbWsfX1
MJ5Y/jBpKypHCThhJRQXsYptUAYsDcm6W6wIChg7UOW3sxXakHqL8QhSUkkE
liT+y8mdYvlWdl7g4PrKOTIF2PxLOrBys1wmCgARrKFY8wImArmZkSL+y85/
+avRuaAJ3molJmugxIGnD6m1NS9G5HcT7DN+R+qSJ9+/KW22joR9TNvhPn8D
rQFkAZgUECAUC5wgsN6xrpW14RyxZAEa6uXnWRoWwAii3ut6SRO2a8GF8qDv
U3UQ0oGatgzkAtgpEI236LeyTbiNQXRTBcbGNDWQp0gQ75b14MamfhEu7/QE
4YSFncr2/GqbiXSA73yKeGsuPZoauOFD3cf9XKetaUrx5lABAQg0kdFa/cDz
agEKY3xh0dm7OEexQFGmaYd9OD4rTRnIMhxC6k8g4KylKA0dubKI2lGFNl1d
qvAHLmi1H2zv0LZG4BgqRb6NZ4/wkCkUlUEG2soCYigi4rkpRVvzGpL4f5Lr
/XISilMMrET8JxGAcwpF6Dnz0OrGbQoNQSJH8DfHaW80swShthzB2wqasKd7
bvqf6YtWO86e1brkPJ1WzNRg8J2wQWbWgDAISqc9xxzEyEsfWGMC0Rd9b9bT
01l6wt04JxHoEXGee36eAAgMHeSi5h0LY4E1/uNOvR+7/egIiz4CvooUM91E
jXHw3f63a98VONB0YLHKZ+k+HVIlZZkX7z388X9/PlMiQDb/VvxpzVyO02e0
+JbMpkSZSH8gMTZa/YV0CKlel4xAgCAdPE1bCZACkhSUsk7LQrb3Eu3v6y9P
I3nB/c6wgKmBPGSx6AhlnxPYR8hLuOS2gyKXPwqiwNBWrBajxg7s5KodpTQo
coHN0uym5Qqpgc18TNZApaT5yka2vOkx39xH2U1caAfBXUkWKg37yRrJETWi
5fVyZdCUlsoFXM+XrmXnkAucE1BggYiyIpePLlNHRB9p9IItsxaU6kVDJpSq
SaMuRJvTqwlrfMMnpt1wzZJ1E4MakCOJAE0H6CwHRJCMIIpCZh9UGShE+zBh
gkzBVlNxvjOKQjrBh/UflImQKVhFqFKmwNlhWTscmFhXe0BqQIAuzQ6QwemC
DfKwo0ZU5A45QiUpV1zpqCCiZIh9ZC4WZR5hg1SG+I90IKSbwQhz355W4/FQ
gSDV9kQdPnQ7hzbbpbaJYEAuq0H5uJajsjn2gs9+aQE2VfuzQGRBuG72wucH
v+EPJhNgQTsEavksnyNpXHBhDb8s1Ed4l3WQFfIwqvpMBw5RL9rPKtpEyM3y
Qu0jdhZYNvy0G5Kn4q10NWgrTkSqh6CkzWtoXFA4yg+95/t/qsRpL3xGOt6Y
4zTnFZI7MFMaLwc5UzAMrCQcwIZuePjE5toPEyp1q1/DgK6ZPK06OT5vBj/q
gINgmV/YPPrJ47LS1uNOrgytBGFDEZbUHD2MdGASKQaB4IVPovF0wLb6jP8K
AZ4aeDCn7H9KFLBa0KoVdtSMdAbjuNk8yvtIBGbUiLIN+WtNHCybUJmo5gKr
gIMLEszls/hCfm1NIlbn36wtXq2+98f/fPist90+5nhiJBnUs0OtLOxG+xaV
IrN+ioHRj4fRMx05BfIFsJxtYSou/+N5yguTBWDAfzjpZMmJ2ke0dlE9JTr5
25QEAd3rlcqKzGUUnkJJXUj/mjhx4LAiR6DyUcECcsSQA+Vb2jVWAAhK8sXK
Dhej/abYxkn4S5AXpjqIS7OASrBAov2KJAUI+yukjP2KNZelzkJoNJajOktE
OiAnOrZMrYFWrLkgtyAfVqKxoCY9z+mWegLPuuAFNAuoRjdrTEPLVyJZoF7o
mqtYb5WFMsh5hpjPIWs55aNUB8mSZwkB5I436/pOnsdTLA1JNhFzeTYqneks
x52mRl1IZ32+BQfQAikcvCUcVSKgw0JGcACN5b5vgCP+s8buBgg1W5/IjaKj
luWUwWP5zOYfXWPh7WmbYdrvcIfvXbeM+SwEBW1KLKDzD5+KHa+ER3lIjpW3
HeFre4MYtUP43HoY+MtNu4569PbeMHCmFohzAY683i6LJRcsdVbUfb4DEAvy
LCLZQHn3kdNQD8833ZO3Pa0hwssI4b2xalLR8IVWWcL2nprPE7xPSIksZXC7
iYEXKNv4p+mcGoiFWBF6ALsJhYC2T/f5DyEUvO+acDk5zgvXBTUPdcx9F8QB
uQPrIMAsy5AM+UUVqDyDc6kSxw0dR6dQjQ5xXoBA+86AAi+72fO2j4Yy2cab
0zLH2SQdx0ABssnWTRCk83N42REdaC5hs708p5ATxn+JwIEIigXY+VurMgpB
LwUOsLilZzvwNwu2BmPA5Xz6x/e+9w1QIHb70QUgMRw0MUcPR2tA5AuLSEYo
Lg0aQhKNbyR9eHf1Dd7h+ezCH3+x98TLPtSRcgwxfSQMCwgT4AuYEbiIV2dG
oIJXBUDISSiFiAIPG0hP+yYsRs1WulZEsDQBGYEiRd9amaiVrYuql1EmKuA4
odqhw2LoI47x9Pt5vpdltB7VOTW1dxNAL6QUgJrLVcwRTCmkSzli7TvLM3LH
kRFoIQhE8NBWpmuFucCt0pICloYkKbgJslhQAA1l1lDgeiFWh+yhgoJ3k6l2
qBqxU4BzaqI0xHM8DCmRnkvkp8uQRX6oj3QUQjU4XZMUuIamtlCN3gbJK1Fd
FglfgYM4j6IQYr7EeWUNuAQRIv7zSCAgFujScc8VC0FYDSljGkrvIAsIBwlJ
BPQ/ghlB17IuRDggif+Wfz4rP9EAG84MLAodJcPWgwjQl9d1yPVjm83YpbkA
ikuGBfRSqy343+8nprrBw9j/s1g0JBFNaGlwjs9ShQ/8K1j/OYAsX3t4k4DJ
EzOI9lmQfFvE3jZVk7KAc2xkmRf2macghdkva2KlNhfwDZ0v1rkAbW9Nvi7s
Sd9ZdaQABYVa4AU9hVj8VxuivFBzCf2Ssur4dMKQnO+NS8km0k+U18ac2Yj2
UQg6KUpjChDnfRAtDCVaDrGtKSh93E/kqKBQ2ihbn2LZUy/qzsZaguaVJ2gx
Zn8ZewpoQ/0EBnR6HUBA/pdMaDhUP/eJNpCADr4Tg44U0ZsPWe0JY6IhR4j7
Pey/mM6eT6fBNacEgSxiQTACZJCtX0y391OYBekQ5K9XV8ECJwWf2ZRsgtHK
qxQCTaL7gNJQ2lmTJuadbxaD1vR1FJ2ULJ7/z9/+o27jW504yaQghKMxccAn
V1ZPOJ64VxQI23A5By9QsaH4kcuHbNgo4vz9unjU1SwTcdaAuUm0gguVPCUn
AIWaiGD7fx09WUQucFSUe6PxofcUs6eM1aH9xIN6DzbUzAhktx+dxWwo3tEZ
BAXVoYICe3W+I3AAIJBMgUCwVRcxv5gGpDiXp0gNrEQiwOxAsCBajBHwByBI
+WL6zl0ZnaN8lECgPhJJB0GQxS4THaVDZy67VZ1iQbEcM5EVBcqVwALOTbsO
T4kb/pBcwE0QxKEOYvD3QcyWApA7lqXEQVHI8uYCDfvrRcajJQVFzonPRAEB
hd1oKEBeYJ5yZUGaJo6KBfKsPJWX7BRzvsDFk20fwpvd3IDAJTdtOpaXQGDV
JJSb5K1O+0lkEKnxjvYU95MjXJGwb4rHyBocBWJuSwIEiHUeS+Mlxw4ERKgo
YR26HVxMdWfYV4pBxTldNBEPOKUvkahbwh0u6e3NXZCTqH1QjGqO8BGHtXWH
8VVRvecu/aisA18GXrhs9wvNC5hEMIZDnqdJAUO9vifKR2FbOmBBHhJW5Qjw
Da1xjBAQQMBuUDoIhd1cChAPvaXIVSU2uIpYYNb0KC/otALBiEGgqEQky0Hp
OPvoNXYzOjzrjhNuQ3QGBXjixf9wJWqjbcoEpeFQ6hTwi8StLh4+13606XMV
o1pR6C2ymPRuVIdezTqL81Pr/0ptguhKamMlUfNR1zu8kH0H4J35kum3iyEp
eDU1JaqLkXpfWhSSbELrUVQWXXj333/5S/kJkwJIDYXQbtyrlAi5wFPd56si
6Nmk4/5f4MAZAV5kr4FTA01zryioI7pX5cQCxPw2UOC0LOQiV6QJcqIucyAR
NEeQzRv0QodFJg8Pc/MaPWlscrFqR910lOmAwIeVhoqxBHldCP7EAmsf5jFf
CRS4O15hRsDNP4K/yoQ2smVwByvr+TJLQ1zOES9RRzoIR/MRe3ujOsQs4Fp2
jiu0oxbS4S9BwY96ChVnOOJ0lqWhQ76U+lQQCAIUQECvBFlAx2nvGlCx0PXx
MvMC0sG3MItZq/0cuwOjIc0LSgn1BdOBu6UupgPaesx5bUXG6xsgX7zmpnIs
IELNpGC7qukseth38ux+2zhHX5IvUBEReGTFC2pKsWjaQ1BIFKTBEfQSoGQ7
qnEsbDNNctN6stCGRDN28vEOhy65N7e3evD2jwKR3YzyUWhyGIeZOAz7cycs
Im3hN+F4F0745f5fV0IQn2JGfOAU6WBuyIcKjBfnSctyZ25Kfv2ULu0j0zQZ
kTnso3nCGxjeAwswegDvZlojjHaShbDPrMGnj/VHuI2JAwVF95UHb4aCEmaT
ncIZ0scLIiPwvoAHlRnKSWqQTqcKHam3FbT+bMuGI3AHqmBHg1LnDkU+A7Hp
UqMJUgZvXVF1qHeT2YmLYeKoy0dS+s1WIX+iivrJQDokRDOXlqH6PhKEV9Np
5A6U6wALkBQwv5hPX0hS4Eoh1oXoR0SCQKABGcGUw2uCHcagAYntkxCa+lZf
b/6a8Z921mAQohil91yYvVqdvFoIcFiBSLBAa0eyVtf+9deaETyu0SDgdkPA
Ah9V2dkAuCddg51/GY3GMZX4Sdd67oZaUF0RIO6X7BQoGe3dXMLm0XAAQfhO
K31cV1YFQlJw2lgfmXLEKBAd5OPj2jgCFoUIB3iok4sFBST+ozQkwV/XZrbM
6pBEqo3MyAI2EafW09o+lml/MVBgJGFfjpAPrWzKSb4iJxQU3cmWiALOFI/u
lONoK5ZYalWg8ZKbzi2F7yjJggjmMX2GLIBkB1+NzqWRnyJSm1Og5MLojD0F
KkXMBSLFuF56jQh4RL3ojWzFg7w1DoTXnFZ7JJ6j1MM7BQh00IBWhyzmy1Nm
QMHgLw9xXTICJYsTFp7q3F1s+DfLktSwAIGe+LOWFMAmQoL/npPIJigKzhcN
AsoCD8WfYAr6UOawiOSKzcb9KDgCrDO5JiOttoY1RwnbGx1Y7NXFLr257zpS
WpKG/D4o3YjSsTk/OUteu/6zDqt/joyBybNWkI68PoOm4zPpgL5nKQlyF52/
EcxNye8srY0MAPOrW/SsSPpuKn+JfHQV5K99qC+yxodDhLe8e7Aq9YxAv39e
anKBdyYckDKIVmI+1HlkPqdYg7xqR601QDOCsrmX15ARdhH5ea5s8oAOoJXV
lLiG1BCIoE71BgTpRHuJ83QflSMrQlpBatMC0fSFS4CeBRBg0n3YaTIpYCim
fZx1E/dt2O88m0ydp+5kq89N77PJhP3ILJW/lRoIBATRoE0EE6UDnk97osBL
LxApEHhVhxy0ucax5g+96KtJR1LY2tBY1XE4sFJP2kcMdAh6+s1CrigEfLMm
LxHomUWy8Gax+mJt/v9//stnk1kIaIM3oShIKRXPjJ4CCNBlrNWhx70xBYQD
niCDy+XZR0gWtHMcm/wHWvkpUSaqUyCQ4P+478JlQpECPWU8ESAw92n9Pc/3
xiuH2PMfScogoFDkqibCIihosagoKBzal7DjbhL7GDpDyahgAbavbC7O9pqK
nhJhN4cTRPtsaRMEsQtKV+TK3WpEdoB5gcDBRp1rE8F46a1usrcygjQRMANq
gQAQwTGVLEYPgA5eHkYY28AaBQVlBwqQwtnSrUppYq6hSa1YYQdxGM1RLEQU
kByBDLINUJBkAfPXbuMoER4sgFaEqAvizl+u35WnMK9Tgv9dBw655854tAVR
lqUDZSEJwhYHQKMEpN0B8pTKh+rtFAV8889EYNdAod4pKjlxD/+OQLCTlYcY
5hvBn+JSH+zLTgHaE/V0pQh7T9K7aXmfe281z2m9zOKzvXQPHOUXwM0pJKCB
AsnemzVz3cknFSGfOw/3of3SJZr2/i3tIPaTyBw7/xMfRsANPOU6x7VvthEn
2VxpUs+kt8tUney79AExjgVNyEEp44kwHv8Q++fkkOGVFQutzCB0fgGSAvDL
WjKyGQTyX5CVka2QoVbZKiZU6syCvOI8YnLHsdWPzT8t5e8nBaUkL/AyUTUo
zxUdOPge3jXEApDFE2IBS0Cgkju3HuqDLBimFeA8NvnGKXsL7avJJGbZ04/O
PCi6PkwtBAWIBWZJgRN0JetTLxjwB47YqkNagVkdJP0pX2A0rs8yG0RBM5tu
TONQp5LnZ2o7qPwzR7AhZYjwxiN7XejrVQWCN6tTYoGcy/EP767xnhcX5v/+
+a/kX0dWJYpCg/V0M7iSPvbqEOtCzAueTXoyBbGYNQgcADW0TIT/U60LyZKw
f1LkQROkM8s4pz7IYqyK2gPuVQQLtGTU1sQCNR3SouiQGtCD2gZTusWQjier
LSMw7RCYgm2QCPAaGtNoKBIE9pQxKSAKWF3Iq0OUjN7KltbDcSg7H67UkgtY
Q0GmEHB55Z0o3Qzu0w4EcvLV6B1JBy6Oz0nwlyNBQU6ICxSa6oBjX9ZEUCyH
JFXf3PMOQoCkA1fRaEwgiNLQ7SqngpTHO7DL0EGc2YqqZBH5Zd3ORtz8W13I
C0FkB5gjEA5UL1Tk0ZcBvWjNHIGkMKtAW1omaraYEdRmSW1AkFcHdbdb0gxE
F/0imA7QhC3oYHrBvWUfsS/RbzKhB+neIN1som4TmszDwVehUykOjrhu/j8B
FhaEm/6ksREt7DILIFAJENvNuL0H6HBAgNKvpXV7BRHM8tG+O/NAC9TExj5U
nSoWKsPkoXExj6nszHQxCfKM6nhYqUMvouupRvVymB3jDK/3CFvKILhg2QRq
Qai48p9TnUkfAGTkhVmq0q+HUK8jovLiXtDZxBd0MfBbEQ5Y8ycRbO0DEJqy
KMQj7iE1YLt9zKyswo5GTqLszFzAe4obsgMPqyZ850LD42Mrpwj4EuisesPb
Hle1YQHygjCXCPJX5fFth53/FBAwlyUxXz6aKEDBDHHBgADx34Bg2qccQdpW
8GKG8/k0FETRUEaa4NvV1Zhxw/6vb4w10NTg1axz0WknsT3IAqYGsr69sMqL
AIIe5SDgxaxPJayEDEGT//3bvwcQTHWUTFOFE3X0ESsowFaC2lFmBL66QIGg
bx5UBbkDHM1ynPkd4/8wrdI7jmlGyqcECwgKSg1gJCVRIAZTQi/KjECphMOy
YB8BB5PRaIh0wL7SkbL5NNNpaIc0EUClaLSJ4j99R9lTIBBwd7yyXY43c8sC
uO1nOYipAdMBAgFNh9hlzBzhRn7+VrksRy4BhRuZhWvWcFK9EE8uS/wHClAm
KqAg8Z8lI1aNhgxCIWDZBhBkA0dwrZCj9ayheXmFk3FUOKQFK7SSFWY0BDjw
MQo+VYEhfVOpgaH4w/0/2QFGflaEcKWM1GA9z8gXbwrUJgUiZgcE392qDqMJ
7TvLS1aBWBfayordvNjJ8t1C3T84d0bygmQmVyzrxjpSyyCYP4BiEBDBq+A7
1EbVyM2rkw38oYdlajJpXWvxuTPZJ9sKAg6i33bwVUNIN5FSaXTDiVMSxnRT
z1l1UYdhLhDvgI8eNEKcL2ZKoaS9y7bcjWUEcpQ/h1OfIAmdT8EGTLpynToc
8IXsCMPGvhzIBaMDjCPG3xQE2EhVgiYOClt54ahl+ddjkOesEFASJRKW9kE3
SRvNJGvQhjKnj1kC0iMqSKnEKIpFnF8fQBDh5UHV0G70EWztvQotkQo9regj
0NkEXtOOnf8gH0rH1jtSWGHf5aAR/5kvsOYjwZ/pgLIP2PmzKBTBPwpEaR9B
dIqZ0NTRIZBiuE3vnPrWfU6xkDlFJIMJNP7D5s4WhxcgyEf892qPZQQkAogX
YVUR5AIzkReL6ZPZ4umP3ji3ghn0Pp7ymXtKPKVMyHvKbCqNpQaWnfm4gVKu
cxEI2CcSQ2eCEYhp9ZEtMh9kbZDpwFFJvSh/Cat0Bo15ShQZ4CAjR4AxlFYI
Yi6wlYEmlm0/GOFdVIS0KATu2HsHrC4kSQFVplEd0nSgspaxISlwIJD4H3Zz
2kRWLN2uDAiuZ+cUBYolWdeVINYQHbnAoBfy1OAysgCBgMgFvGtgSB/MpxTe
dIIFNKlAPwLrQucgTFqOipBOogEvwIZiXqEHKX1T123a8vh2MVaBaKGRnyE9
TQSMIEDvWJSJgjLW21w1FKxxJAKRJuhDMMLBFLA6xCxAuwkQgmgehcbAmmrM
oF/ZOIAu47NzFdWWTatJEAt5N1nVuvlnFTvw4I6Nya0qbVpv23iWgsy0R0zl
oIlM1NIKjnGxJVf6KOkMd2ohpQxeOIo8qZPDifv2mJIzrzEIwEtVUdVx/09r
KHAz9mOLwMPISN3qezpg8/vkpzrOiAJsTLAyVFHJdQCH5hr4mxp+XMF9yP0E
kSNIYYli7C9QSl2ytixns2eYBp9JGbBYJnpQd6EUYs4iAKElo9rGGbM0FDMI
3IbUjOsZYayb2JWlDxvbij9R4ZAE/PZxZRNtookgBhmHJWbYjcbyLb1GuedT
+s5NGf/lHM9KkJ/Joscpraq1d2wykV29LN55xrk0VKYhPdXZNxOVEk3PwEFQ
yTQXYlIAaoDucBg9yQE06h3RB00Qi1dik29dxtFuNp+9cR1RNCCw0ezrhTpX
s+P4yWzt8U92XX/bkhFIafQnPoOAXcZkjWElVHm0r5EX1FE4emQw0cZUSl0I
8rLbD4KAcyrl/5RzK7BhqMgUGFmM3+dTE2/XEf/TpAAFopzpwDCtPvoFHAj2
myK0Q1ojQt+xekrkI7Oe0yxgTCAAd6zVISYCjP+kDDQpcGiQLIBYcBsWQ4IC
AgGyJPjzSBS4OchHl0M1GicBBBL2o0B0CWkCr/PIIpK/xF84Ps8hyJx9Rj7i
dp3FuGSJ/6SwOZss+osjkbmLaZtQDRUQixZ3sb3XqF5ZdqDlI0DAIBPy1MAw
IhtvghcgNRCNe5uoxUXYp2SIvQNyXWfQQ+RJcwk54SBRDhWS/8GjszocggLL
RDFjN/gCfdg0aetx+Pm4xiwavoLSbQgE2F1Ux24N/dbggGMWhbgxxkr94ljM
sdm+HDScmLAdO+Ualg5RJmLtJcQ/R7CJiBssZ+GG39/fI3nYs9cnpRbtw1yI
+/wTCHXo387gzMp/dF/SOMLzhfLIu3KCvNgDXhAFrJWA5aOzRDNSA1usXGny
DuErO5GJAlwEgjMtBmVjSUHdcRSyZgQ+vDicqLG3tJ7imGj8EBok0647lWm+
Z95oFlcS07nBZY7rSd2F7xA2/xLnuyj4RM0HUvmeWACnU7voMCEn8qr+xWyq
RzLLTBbwns9IvMrGm4gw1eD/HBLT0BS9ms5icABaBmgK5ONjaDQHHem3Oq1y
QIFIEIIU5vr2wqolCLOBUI5GMzjUzQfmQmcWf++ffnrDnZcG0SzJgmdeAqKO
iMs96PSH9ripvF4HEZFAQ10+EURQgkBzhNNcwKI7VS2B/I+r7yipYbaVhcaY
7ecCAZ4mqLTYf5Mb/iHHkYUgIEJJpVCUhiSSaF3IB5BpT/FYG4c1KQAKbKpq
SFAgBwswFqTg/h9wsAL30RFmEyzfHS+pcJQEMdgBRQQJp6Nzt7Lz7CCg4xzt
5iTkaisB4n+kA3JyHS4TV8fvqNfEWd/pSBA0IwCbTJrgkkd+bvv/7zwiGAcT
I/lFeXP62rm50Io74FldiKUhNkoTC5gvKEHstaA0zlNfJEeQxTq7+XaGfmpH
AV2SQeRZYEEEf3o6kUTmQo3IWYOyDIshQQGMJ26O+46d4DpOyKOuRKedLA9Z
JhSPNrrlLfrAMaJOvd2oMoor5HNdg9rsy+fWQ/yPCTKJBLRnyegkAYhDl9Oz
kSpKKBHGQ/CTnpxwXqQV7etoy/Km4xZuolUkBdYR4HmElWs82qN0PwhNbY4A
avWsETHIRye+j/CrojHBC0chwEMRKWk649tGNpECAWpZiiPOR2j99sirTwFM
zAXoNSRBgDezs4wjLwMm7hW1TyuoE9PRJp1WySvWjGBTbKon7eCBHOzwA0xI
eVRWqVX+W6MKEPSmGt7bgS9GWDPyl1jAUM/gH9QwrxALCARIJbqh+3gyeTmf
431QcQIEyPnrOUiE2czYBCQUCMWzNFDHQAFOkyGD/M1CfYS+nWNI5Ux9sL9R
b2r2nU2iQSxcrKkd5eY/ik68+Ho+p132G283ezH7/pv/dBjVs3CfG4S1nfkO
BYkcZqRPbIQ9haNaDpI7H0myUBWPK5tKw/+4RA9gIqIYUhayAQIBUUBONL0F
CXVSD5s6lobS2cTH6juU7edjWUCE0jyoMXcmaSIeaj5kh3cqKwf5MJplLxO5
+2i2vImH69ky2IExswNdpfcXQ0Ea8+tt+50tD7mA9w4wKYgYHoWdQTuEKxSR
MhEIpODJJdzGc+YI9LKAKhWeEsUyOOIlgyQ2uGE4ApwuRsEa22AdTWRgQ5pb
o0Fa/4ksINbdYkCQu2w90Oa7kk1ksv+noeu2mztxhdcrjUa3YSikdaHKqGHm
BX4yzBJSRLAsoLLaNXTvb6UD0VAc9SIf1NVHA9quhCmv9uB92mhJiHvemvYV
zC9fYsGzrk7aobnAdDi+YY5YHZRE2n7Fnt/IDkLMj123mkXDomEwgjjTuiXR
GPX8ozJKQ28rjiICw+En5yCPAAKG+oAkuEzwRFvysa2q0/6CQIH4Avvwb+HH
MU2Q4/44R3JRwv5xYBboWXTsA45ZHbpfDj0C1l+AXMCsSguVlXLbH31nMdSS
iQB3+2FA97ClAWkkBdY45sLRoTT0lGxvapXsQMCav23j4agpD90qBygAvZBt
lfuhcBS4gGVebbQSHVhjjfOTV4sZxaLP0T6AsrwqSJ9PpiEBJaUbKEB76vSh
tQk7X8AFHVH/tcMB3mrO6QPwlDCmWNuKZ9FHrInAG5+YoDM05/M309Vns+/+
8e+OwpRDoz38JR67xcSQGrDdDArSoIMfRZrAcpCvJw35HUvxojzIRCAyAlxR
wYDsEO6jNHQPTwVGnGI8Gbc3+1muv9VoH5NfXY6nPFSymAqinOtAe4qzPbeS
i+kzhIC7ORmBMQmCjfESCkRGEDMjUN+JcixAgEHGCgqbmhGM1nMcUR2yPjJd
OpvmhsuEvKeM1O35a0M6oE0EV89Khq4VEtLfYWznfv4iIvzgPpFHLUiuLBtZ
zP0/+hHSSQcqJc1Vp3S7HEO2JN9zTF74ds1BOXCc09JQvq6mGSoNGgK+Oqnm
sdu/W0qCoHDA7EAFRfoTwOBOUAyKCIUnAmDh0Z2RERHC6E9SAKLDvg4MLXeB
CA4BFScHIQuo4vp2npPo10JfUab7+f1SrlRQ+Ojkr928PChrG1gjO221G5UU
oB5az7BY7UdUN8jYKwcO4myy0ITt59CbZsHWp2NDVMlK+CEKIIyBOKqTTyoB
isRhF7X6RHTaUIeprj4a5OvQ50cWsJflLtop00oOSkPyh1AfRtGmsCCvXc+U
W8vXJlOgS0FBhaPEHXTheQ+ykW6HHvlZEWLPftqtoxYupcHivvww7bspkcev
cZjwAj6wuKFkSI4nWXkvr9hTrHqhXIeUsdfAykdF86DUyfVycppX6agyogDH
FvOhFov6yWOdLImFrjG2EnCW5bO2j2kpGv97exgDy0gTo6atMGHqIJ3P3qUE
wbP+jDHdi77jOMuoGvl5WBXZEBxI8ScvNC+YOgpMCBZkDYzVxTb+pVWENAug
fSirQIECNpiS84t5TBKHbxbgDhYCMZPXcw/7MBdiCiBwoI1jwSMrQHBQgtyG
HgRJXhZr/+PvfhNNBNYg4ALRZ90gKD07pGaYXMkuM6YJAgEPy1znl2EeAVFb
//voNAtVAEVi1lzg9oPWhI4JNcoRQPYgGQFbFJntRr8AC0GwG83pQXFYjQ/K
kRyJCHv5eBvsAPuIo3HMhEPZmGNoNP4XI+WRC0kHZP+/tFUub1cS+Zejm5gA
seGTi8kIUD5K7kB5BMhHYx4BM4Jb1Qq85s7ZVALyvMmu/qomCOduVFbwYZrw
VtXIT5KZBTHsMk+0o2AKOCtZPz2jLSq4jGp8CxMzCQR3MGENX3hk+h+t8ORD
bJeTIRewvEDwwuY1u9sGUYPk8lZlQLAhP3OnAwABFvPj4rZPiJDN/1amdMAe
xwkps2NAEK7UeyQLUNjnMbrJdlGmOHCvzrSS4xWkbvAmGuyJrEmZWiOJ8DsS
zc6Wg7wdeAACL/tUp5wF4F5AGvZp++B1IWscdrKAw7yCCAjThtPwF02k/rFM
LHS2NMQaDigD/dOgasg2/FUTRHZs14+K2PyXVlAtKLRmncdc5nzbz+Ed5eGQ
4xQBAezZ1w1/XUVqlsiQ1ByJCUXa/hx/rQpJbkPNP/MTVJNsm1cMKYOggGQE
sgQLJKQHEGhS0FpRKEBBHzY2rVI7vGArQY2oT7Hv0oxAY3U3FIXCO45hfNAI
WYtZFzWft8jlqP+zcKQtDDjX1bWp79BL+ktIzDcgmL2czweOGJ0CJvVkt9fg
MjRMKzZbOR80nxSO5raZd1rBzChm4XGte/7XGHxpw85cVmoYNJ8nytKpjjC4
8P1/+sVd2gd5wYfkCIK8QAAjv/MCaBzrIvifxYVG8gK5/36Z2/D6xrxnZcVY
OlcL018CDcWI9qfOIhEFeCfP2U0GuzmN//QX0oBfalHoSFKAbGm/WDluckUE
FRFlnFO5A7FoGEpsx8zi0qwnmA7slCuKBQIB5bKs3WYsoMC84K6kDAIZ8KBe
V5no0p1ihenA7fF5k5VWWUwoi/YB7tJvlsuytDpUpBBw7tLoHTniolWBwmIu
xQJCgwFEpvLRqxhkoHQzgCCSAp16AxSQdUeyAGCBRvUqizyFCiLGfBZ2GOcV
AmCmoeWvfMQsIERB3lY2pv+SDuuRkzrHUIZ8Q7b99dCvPahG85yLEZ4X5Qai
gFzR/wukbEQB3saTKBPtyv3VGQjQQOSBncZxsj/fy1V96hr+OlRDKUGAjACZ
gg617/bkV6vrIyOwnX/bpGlC1H/2qV6uyxDG6M7f/CLUcejI98lRSzlykjqq
MYj/NaKrVWAOvCd3yAXC/zORbrK/DBjhX8ALPkbUhomcJyb2honcWv5wqPO3
tKVoZEt/wI29/FR1kJPE+TJKr+HZkjIIAcr6czY1kY6CYkPEoQtW2QFNRRP/
nHWh4yAUpHqOjED2/w/r7jSrBAgwxUyLQo/rYWDlfR9ekM61edj0WlaiSXWl
YqGwm9OlNqS2ddeQDlc02Kl1VLA80yIPx++2qG9jukob81aa2OpTiWp9tYmh
hAKK88VPJ5NhlmViOsQhv/JBhgKzWahGrezvM2jYSkanOO7/CQSsCPl4esMF
EgevZ7LznwcQ4EQd88yAbnUhCcgr9Jqpr6kmApYj6PJKlNapkJW8WUxers7/
1+dfPO+rxx3q/OjgoyCKP6inIL41h+pad5PgzxNeE5P2qVqSWkNBOoMALlKD
ePgBrKR9/1+yZ1wW4MD6ZVKBGX9biAjHhelI+btNTyGBAMECOZ7UhaQDXDuj
83JlJx/tEQXcWYjLZha776j2F1BBmi/JkuCfriAL9FiOrbMYBAF95+ScPDKn
0kjsvZXbnjx6u3w2GSyGxib7IQUgKHB5/B0t/o/eIRCY6Rwf4hj0QZDFlx0j
GPwtF8hRHQI1cH28dJNyJrIVSFLwrWx6WsxTI9XrcDBmyqNTGMriTmYUwK3x
SpIprOiABpSGNhvHAn0TJYuVLwYQ6NCHsojWMMT83DSldiXf9WmhvIGRn+lA
cMewIW1AE1ehBd3JCwSiajevwBc3EpEklKFICD9MYAFJZIohCQTyPvoQ/WsE
oygBuTBV9tUmpAx04OYfc14G3SYqMGYf5yR1dZBohJwvKIOBhbaziDl68mV2
EIcZPA+yImkKG6YJu76o1qEAuIcOQsEFOzVcRkEGiQkBAnt+KoKKIkRE0Vaw
B/6dPyLG9sPatLvyt3NQIuPO8yj+n4K1j/8IHEtmCodVda9tKWeKvmZWdHXm
LEZVKhcgT+EGowtRMmJFiExBBP90/8/Nf1gSPcQLCQSP6p630VMoFrsJNHoP
4h+r/OvwgqGkM9CgFMO47sgcNW0actPH2JqQHg2JBrhjthsMLQlaFEJLAmgC
qkzJGrz0acIpFnAMDWec0YZUl1ZsFjbyXh5K4sCYj1D/gu1gjgIpfHDz/2o2
AMELEhCLWZhRx3Cc1wIBi/7VtH2+Nv3nf/gvz7ryaacOQo9aWW10B6S8uV1E
1xijPfniBw2th4ZXKWT0HbW+OpAaixYo9yDYw3nNfvmYRHliZLFtG06KHA+r
ezawuEFFyKRu2ITItiQ302k/7hZjTRMqNBRAPmpWEgCFzfEoEYgaEbCVcMSA
gGUN+/l58sW8YbNY0ZE0IItZFFoHCuCKJAXWUBDyIe7VUa5ZgunooO1hRiCJ
QAwpQ3g3TyHd8zt9TAgI7SibzsyAgmpSA4JzbCXTpEC+gKckJhkyytjm0dyy
ktFIwrjKR71TADnCmPUfKkjlqBjhKKAxn0UhH9yMeQ3WYmBAgAKR/sDN36/g
Jj+I412Ed3A3XjXycpADRBmgoNcLcAfQlPIiY7i2oRXsKZAIbzxyNG2RGg6r
6ij7y4m8w3HfU6p05HpRZgHc91ptn3MByoZVnVMII0+pW+ANBcrsVK4WBB2U
kowjrjkaiZMy4ORs0h2zxqIaNrUAYn7h7nBDD5qTEdE+RtXQ0VAgKqPvLNAE
jEAe0lDT1GkdqQ582UeRZxfAuo8k6EjSAdxp874LJAsuGeKdB9WAsPvV0NFD
FBhmiwML2GXAUTUStwlG92gxVxk7oJlCjLbkkJrWZKIGBD7LmNPKjDVo+sfN
RNajspH1uEJDmaOA3PMMAfxJ16dSz8cglzW2t4jtXRv+CcNcFQtiPe9UTVGP
ZrFhfsEkbKWZGgzaofCjnmqYjeAfEPAK44zl5QjvE51340ZDDOkx9ZiUgZWA
fO5w6IIsqg+5QGJhzTYEIAUSAeOpXxMaZpNvVxfsLzMnImCBNimvzf/9818/
bctnndWF5B/FPj7u/MNuOs6pxaLjKEeS8YawnkYTcfdkMg0seNhPZN3v+3td
J4v67XvunRJz6lkIcjdCGNBZSluH0bSr4AQFiiCLD8JfqMrNgBpAYLWgqhAI
YE/BNrRDXizS+n8sRn5W/vWpYWalaUfXPQWQ4+3xeTwkiayhlW0FDLzXRuc1
GufGF1PbQ685QQEkAgNfEBFemwiQCOCGc1QKkT5mOnARHWfsLNMZBFCK+vib
EYkAsxJyFGBPGYGAJ4EFkRTItp+IILFdZzEUtsNnyYtAkGIBswYihbWYFTrB
YdOTL9XlSsqGEpCWjPJSBxbDZUi7CVwmRKTYRVGINytqoJqky/efrPmQOABM
qDeRGlOXNfWiEJTqBpXi0rCni5oSnaj13Acf6G+Okwu2n3etfhRzjjhl2J3Z
2G5gFRh7YW0GF6U6v0VZniJn/HJWac0kxPwErMHnJ+YUVANTgOteILI6Tx1k
gUV+3MA0Qc0iME0gvOMsX8A3j5KU5gJ5kaiwTJrFZ+VnqKtygHCeJW4j+BrI
Dh091VE5pAMq/MBH3+MMgsTOjgyyTiRveqID7eliYCWxQOJwKEgfkg5AJBns
SSE3koxA0we1GEJfGO6XAI4G5CkhA/GcVX22ALA72MSf5jtn1pq2130iT02n
T3STr2/CnuJnzi/TleJZMsKSTHRUh6gaSq2H+PAl5DpsNHut7kPDbEpODVPi
wGbQ2749ugx4ZGEnsMCaDkgrY35NFHzUzg4VodcYefNmbfX16ip1qm5ANxsA
RTmCyfPVtX/77S8FBXROpYmFOvlXR50nykGWLgnyKnfTRMcfu7x5s5ICghES
9tsuptE96HoOoxcIeDBROBAUkBN5qMZf8TsDOOD/dTBK991fJfpWDt1fDjsr
xQXuXrgHEzjQolA+5q6GkZ8ZwS6O9JoO1gDx32ZW3s3VawI3jAwI8uUNYMTd
zIBAkCJEpACIFU0HxkbO3kI6EPvwm5oIsC60FI5DV7J3EOTPpzv/Kzmnz3Cd
4z3XCi8QwV/o0gjlIyca1GiOXnYYfBZipGuSC1gtSM0lBAi4OHFgoy5t5lox
vp0pEFA4JEtOtuoCdHB+Z6y+Qyz+BBxsVIYCHNNAsFjPrctMznebGhrdbNt1
RGExES1m7CCALkhLRlEdIiMQlLHGfGzsWdJR94my9KDdxigWFojYWRDTjSU4
y3X6f4boKLhgLYOgJL5XFsaWRpsYiv/H8Hk+cvFPiEKjDp+WR/aKKlWKpvWc
g+gjS+b8pu0GfFvldjney5uw2CNs2UEyHTLyAgOC6FmrDAsoJWLKYIwAi05J
C5hqPhHVdwEHmjp5v/ABu8nwLJumAa+WZO0afIQEtz4IBoHphrW5WV7Ak1Or
+jIdgJpI/YVML6SJQDUUkOOoQcMax7T5KGYcs33goVZvJooCNeYXoxP2sTYO
DPPLYoRZOuOYEiPFAtn5N423HlibwHPkDo/14eTpZPbYB6IBQRDtyT53KhCS
j0sb09ytyB6yFhQVIXIEz92Jjm4Sr1Dq4Qjj0AjF5l+XD6N/pYojM7VmJLce
5EnP6TPgkeVO3CzHtdU3a2uvFos3q4tXsylwQa4vXrp5hTHO8KkGLgj0rD2e
rj76yYtQh8YAmqj/eDrQaO9wVceQYlmPygECwglKfnqDKsAa3guJ5zqVWH3d
OwECNU7pdRQUQKGzWiJiPqcYDxwBYCJQgJzdYZ6TzNqH4IH+QsQCukwwHdjz
STTbZW5TaRDw6TVKx2lWhDRlAF6oB/V4JWxI9X7mBXqUp5buuhl1ggUCDdZi
LEnBjfGSVunzFToOUT56wx3hPPi/A3eg5SgNXck0TWD8x7PnmTgIEMi6OD7P
KcaXssFuIloSQnSU+s75TBw2Fw9AoBt4NMFFywBvMPkQNKJkmTXmAwKid+Ct
upCgBlMDdiJv+qwfNpHdzcb0nQsUsKpR0kHAFECzhsza/dD9Udj8yqreGo25
d9WUwesYDL8SkSTaGxzArTSyg52spBMFXxvb2iiJRyLA2BjbY+xyvbGrGPKC
VKt/7BKmeJ+I/6k9acjvj2ANit176u1GcyEHl0TDEwV/VaVmHMxq0EB04Fu5
+HMwFLXCEXkKieQqrrD3SQpNqh3d05+b9ui9VZ46SABCdbmGtuX2OBswFPcQ
TAUCmGtQceocREkgiDIR/wkwyoMnBlm/vIj4cM+oBJtEMxCLlbEGFJ3edwVp
uri991oE43/7WHHBxlmavtSjOjHiSd1G3/HQklyjT6Ht3Vx6hqr4hDM0cUW5
hqeIkNojljqXWmOyi0598SG7xowgsPnF1jsQkwiYEfAGxO3569W5fKLu6uEa
xA2/SX0QzKPXABUhJBGrq68k75C1WMh6PV+8RCODHNnUFgSE0g32BfTrvZmv
PZ2++/XPb0a/GFoAbDxNmEg8QcuwPPUgL4C8LRHhcVVzVBzAouX5aV5aM0jT
urUsplJiTvEp+vpZHcIcWD2PdOC0MXMtMkr3gA78FYq84LDIjsuCImdJY3fH
YzpLMPjH8cA9qH0kTU5Pie3cOgVMDoRzEAF6ZKZAjGDQY/SjbDJmWQpYrI+X
UvcJ6ohuZeo7YWUZbe8iQbBEpliJY7jDMc4PciDNDt6Bgkj2/+94XejcFV2a
Akj8/2p0jgYUV5Rc/k40o7H7gJUiooBDAItFShmYBzUif/gjhUZUEoF1FQuN
yQgQCKJjmktRADSxzevJLSkgd6xX1GVImwgoHxIUsHZjZAeRF4Cvr5wdsNLQ
PlxB0FCgpXv8Z5msVBeDj0uJDttWny01+B/oPMp2v0K9qIrytSzKRF01Kr88
kA8FLhinEHHY7ySI+AQZyVXbqNLbnh81EyuVoKnqJGYBgMbSWO1KIQbqg0Tq
fxitu2r1k1sTgU/+civREi5AZYgwtYmgTAmC+q35AkcuQ/WAD4k1egp0/48o
feK9Dwf452u0R2oQuQBRDHF+SLKowmXwJ0akqErt0FD+8tJQKmoKDyLtDC2V
77vv48li8081iFmSopIcZhQAgjZtKAjhEEGBwYfVCYwqw3h09Jc9wbDjp22a
C0yeJm3F7kfnTWed5RHPemsog6++qmWcFO7ZPhy2zDF3gKzBcxWRakaA8Dsz
aJDbpoPvqE8uhu+0lnR4BAo4uHADz2kF5kHnElCgwJwMMhSkvYV0+QhJAXQe
pWQBc0w9mCkuSMpwQdBhmErwNeK/15HmnEqjg5Xn33v6o8s2dqdrY05Zajpn
LWOCBY4CXJIR8If5pGndWaiNlkACgU2UUESoHrYJOwwreMb5B7AbOo2eHf29
baiUjl+naJYMuy29QhYMKEC1A3rNoEssdMPDKoTGmSrzloERJaPsKSYdrIWg
UlMD9g5oLQh5ASMe6WClA7IVJhSynClevj22IWUmJZLIPDYl57XxOzcSuyHC
ATfz6imnKHCOO38GfwOCHMfsnUty4gZ0JBEuZt+h1oiJQLQb3Ch1VGUwEQki
qOmoAMH1sWpKGdVN7IqKkKJAKcfldchKJbCnKQDPrdEsaSIgBDAj4NquK7qP
Uji07QZ0MblsK88dlzXOIwWowB2YxDRUQ4jzBugEgv2ySmVFTBYO6zbkphHe
fVkViIHr0H01w0tnPymVWJynTKiyee4SBtONfVL88bldrqhkiwENT8II/chs
3Kp00Pyh+/Zw2x9TXbjJ30eFn1260QVwUNiYmDCIs+xgaAHwmQKkiS09KcNx
hZv2+IakwiO284Z95Nf8UeAnJulYwxkQmP4JFEj+LyKx2vPus2i1OHQBqhqr
OgSwCSg6hji/LCYRhLGA3lAOWBBtR2E0kWqKCATcq4e/sTOVHInFsnaiKUWM
IilsUctFoWw9NgK0szmYIR+NJmIVBamnUPdcm8KMhjZbIWcHEP8VKV5ObHj9
23ajswnLO+pEF1diYOUUQlNs6V/O5+EUHTUin0TGihA0RfMzhkWvwS/L2wZ2
qGTImWLzqY7RZjP9LGYEL+fvPfvZffv5tLbPf9paHxmOpeULdfWkqp9J3M4L
gQBZT2qaTlfpPIKB5alrtR5FywBVqegawB4Ae/4HLiXi4sVIIUNNFJ3Fsd8Y
tHPoJpNf5u1svO/N8nt5TiDYNZkijoAAOTIvgB9pbhajCP4BAVwsIqlm3qri
er6OmpJigRsQcU5NOE7Qj46tBCzR3CyXPSN4h1hgbQKyn/cUgFmAHC+N/kRB
IX/ncnFOUIBh3xyqIR8icQDgODd4WWfLl0c6reatdIBMMThiWxSOcrHxwZvL
VqyJIEkBrBxU657/9ngZ5qsjwqJxBCgQKblcZhxJsJ4kAlsAAnqZ7lQw+ogm
DsUCLeZsF9p0nFaKsAwC5Kidxajnh77IphWwtuO9aUwfXAxfkVZgicMaoBLn
ur2kEm6RLdkY6+DLHIEuD8F/JUlrEt7PEMoReMMalyFXdjJ+fSgT8d30No6D
TKpALPUf5CUNQnlzjK1ks/CgC/Jvm7QYVFECCon12S6AAR1CZBWj/TgimdKg
KLixLoR+jVYLrYVhAX+wBz4Mev8MpNoPQd1gvAmUWBBjaN6aYpnONQ4soPkY
SOH2rZp/PGSESeI/S9MlfZI9Tei8xWBIAaIcFFXuxHHC+GI9cafrGLllRaRg
FqLXbDIJakC7BtTI2huNE+tpPfqV8CZlggAZ5wwZhxEKVkrCfEnbya+aaiiR
GOnQ+SCReU5hEm1LZcXsGx715SgoveLUA0k90ODwZr76bL72T//1Dsc6x0AH
68VGpcjgoK4elwoETwVJJR0AELBS9KCsfAwBxgkVpSx56n6pHtSneS4XddyM
e42GD21YD8UmgUAQvyGsDiWVRhtJEH2L9KCOhoK9bLTnpaHIEXZVtbKyCSsh
dpBp70A+Nh0RrwhMVCvaUOZAwG2/ZARbJVWjKxQIaeV8kAzpSIKNeszZBDGk
4JY7DmFI5VmvoTF7BL7D4B9VoKtOEAsEXCnPy/pq/CeywpLO1aTfca4ZHAEG
E7DjmCOSw24CQDAKphjOcuo1enO8FHJQQ4TcxFES7UkNW5dBfSbU8yfg55Ya
MCnYKMbw7sjMuVRbjImYSrXQj07b+vIsOgiULK5KSROCUIa41FoM0ozgqG3A
HZxpN+M5T/ZrG0V0UFdy8wHd6lwSz9LQwdl+5DR92LOQ61WgEoPak/4s1WfW
jTmU2nbX54INOs+SkjaN/Mhb087cKOYP/p+5KXwCTcJf9wBYs4cC/oFPPQsD
H1SfEuc3H155NHDWdWiTkA40JqsYvCOC+E7TgQEINNTzR+21IOXgzONRfnpG
LqRFtiBKeI91paHZIVZkAfjDt5llkSaEECgKRIwPD53/1XTA95McXuOI0HNg
WcxDCdE7AKLzjGCAgHSZDXXNcQZdaObjBi19eJmId4aCNDqOn6oPtrUYv/Cu
Md1s97YJj5EEcKLuI1y/TupFKObMzYNudZXnL6cTZhCxzC805ZTPPvsG5tVW
O0LqYQZ0jhSUG8Xb8iKIicW///YfBQiIBfyXGincNc9bXYICT5EpsBykPzd5
WFasFD2Cv5xPjoCUCC9XRMBFE4LmeUT4Y6SKp2XxqGtpTA2ZkE6i0QFk6jhX
hBPpcZ7xOv/KuNOwSlFpNtQ0ncPA+lyyA8YQhYBsxGEEcrQSkASx0Yr2F0iA
Go8IEFv5kqDAndF3NvLzm0CNoAm26izlAtYlkI4HM9JoLiME3ByfkyXn1k0A
4vgt37mBAvB0gOcXR39iVaDsOzGkJmWEmREEEDAXMMcJwAGxgNajqh3KR9dG
SwoE7DLz/T++7UrkBetF0N+WC4RjRtzG+o+OMCszwkF0nwVHoAoiZAQhytqt
yx14k5oTnVV+rH1gmFPgg8y2kb7RfXQPGrDoLGDkp8TUR5g11mvgGMG+sz20
MOxjOJENqsNvQswXSPqhknK3u/pA7dOeAYJEEcR+YaOM8yIK9WHsIL+W4f9p
Yx9r2soVSUGJeKHiT8ZkfHqYv2k4jVaIfZchHZbRfdwybTlAX8BJwmKn1Da/
v4VrdA2kVIV8n70sY0VoyIYcIgma9rOiGGMwnfDIH9oh8A78xJhuRu4vrQ7F
377CAboGTos69KJEAZoOabOYd5DZIBufaxnYQeMa5gisF4XpfVLYUZ436kIp
KfBcQ7falqbCyP9T1tU1R5Ulxx9hL0gtdd97z/3ob7ET/gV+t/dlww9+WIfD
9ti7A7MMIxgEklB3S2JAAkmIZfbFLxNh/09XZVbVPY0jbnS0WpdGEqjyVGVl
phf8uS6X8uS/vTNpFnPRSkz6PoL2RIYFjKfEpenDIGQDDuj/cA+DCLtQh8OS
lEMhLp3G7uiXg0fBMrDaw6p6GcU8Hw2FodznOfTInAvNF7/89pu4M+LSLBBh
Nr9ZLH/95z8ACFRqzemQASjcpG+6lmX/g2NBzhSw4L/D+tBV28aL14iqZGwB
HMXbn5smzEbkkn9KQoCfE2p4TVi6fcRWXgIdGGSvYWSplHukk5UP11W1CaM5
dZkTFCjVnQaNgItiVD6sBAHc5HSaXfukooa+DJTBq3Kg4uJ632Rl0RGU8KNm
MFm5lwdWRmYZ50IRUsAs+0P3/5QK/AyNQADB03I3BwI+eVwqOjyu7MNQHEcv
8P+XhWhAoQn1iK30qHqPSC4GlJX9gMbE9MVpjzFqglYxzmIEG54UhhSklcse
F0IuobOyQIG68k3UXlCgMyK4uSoWVCWBgExx6MuIAjqX850ij7AxAzpzoqut
BZCaz0XT+CzHR9wyCuKAYgSCSHjZQfeq6LBBDBmbgjMnTEN3zGX+VXYItxl4
qmMj6BLiWS7JfDUgcl+glrPxnsbCqVjPLaZWa4JZoMND2HjyOA0VMA7qNZoX
n//YHzdNWXveU8z2d63KRF747WQa9ME6X/IhKGj9l1NTbd6h/hMgNZB/42a+
1DbGDlTVm5Ty98zx9I2jzLqPRatjLhS5aWEpRjUZk9RiHBSW1FANu6ZY90Ut
ucwhgEPmLsZE5ILRNSDXrCN3MGa6DeRmWG6x1fcxOeUbL/IhmMrtpk0/2/Uo
kEfP4PmCCoU8iUaef5o7d8wDv2eQ4QbTjgXF/GkmXYOUZT2TEwI4F9ISrUIw
UsaCC4/k8fPiEYs8OoJZHnkZp3oQ0POABnQBcKU+8BaDC0VzQ6LAEZDFj379
t3+xY787y+WWTVRPBDp8dQU0XLsB+FWTyC+8b2sCAbmbtym9Tc3l9rRwU1Y+
EuzoRKePhAD2BY3W/MuukccLedLoi5tUIr/MUAB2Q+lMOeIiNPIwo5ZXtCM4
hYnoce27LqF7MrKgeF2p6VyEEXA1CGyycQdHSWr+XmTT5MqyF9IRCASALMDi
0MA0BZnCFwV59yngQEBBr6CG8wYh5UukW9k0j4e7cuZ/YkxBlk3gTYHKiqEp
y9wt9vkiLUm5y4TSPWTbQuTigtBLHPtfVAphYTQnT2zXFBBw3NV9F5DMcS6S
CygrUxLZLf50a9c9SPOmgJ/FoqkHxll3UEdykB7p/cxPcjnKO12kiAKECW0o
mj7v2AEiMddAYaK2pZcYYsRwI1zU9JiNEkcPonxhkpI0d3Ju86N1Ns+nuQQZ
XupqEbFqYq7gkZuwkottUhR8i1vdqLdzCSywE3jPRyf7OjOH6sa6j5T6g33W
y5xhOyjC3VRtV1n7w2mYDX/ardVQ+66deQkUM4e62qZG1CAg0R7pzO6Vpz/e
URkGdJGV0wOBe46dl7VxvpMplWXRF1y53ZAUjbCshO7YRkNmNMRq3/UNwjUk
A1SWsSNQWZnbTcTgKOb/MREiU+zqA4UMUgZb7QA87lxcoMVcbtAl0mxl1Io8
LOw+ZVwAL+4X4UC+vJsuFAtm6gJ9R3ZAiz9UYKoLPgAW/FZQQMBCgOBTBNkg
ngCOQ94OOBEsN9B9lK+bmwS2SQUFPj/6Ri55Q/27+G62fSR/+8H/fPsfarjk
FqPaNGkMqG0NyfMPetS3joDQECd/qgmuMCbi4OhdKiO/DO5zTK60wZH+s7bj
WB648GALjoaYVqxBpW5GLcWfNf+8KRlexq6Bw6JVUgNqJBEkzoV4gNH6nwpT
GWNfiBWeBVzggJEENBqi+1zGFOt26MtKyx3/yGs9Eg/kitbgcLS7JSXw0RAT
Cn4s9nj94Be7g2gN3INu5/HwgVPA+5QSQDvwAPHEPRZ877GVT0xlPCCJHD3C
s2ZkOoVi4CT1KLhjTSLwhOKfmuJFvf+83udXy0bgCERAWEyrRJo7RZX3CJQV
wHfOtmoFCIoRKn8PBIgn6HdKX8lp39VkPimqAQoFIYCtGf8tOEdihfcN0sak
xz5TypuFs6aOz6o2oet3iggQsYlkr0ObvPINIt+WN0IZJdSyV7A/2SvXVk3n
x+kqtoP0hFxWeR7B2tVhYfhAzRfteoJQXmc09LahEFZuFD4KaXtjOy7mQpEU
ll/ZOtCWHICCgk2eMqbH/oaeGKdF34zk0/444XOGdobMuNNUhdkvp1v9Tq+n
6tB5idfJqGDqTRjokchYQzgQLKGxxlnKTACBXr4galICHwdxC1EbBLYJjfkb
B30cEOD5BXCNcFeEfAsIooNxfOi9wMwVCrpN+nG8RRxcTya97wSuXFxs06Hp
NOyGtLrisz4mmvGyDSJNsTQsYFNwL4f2mbG6925Yeg8U8NsWnBHZiGlhicOW
d8/VozmjzQ4wETKd8r1BjB77/VrGihF9Le6Wi1///V91EZTxxJ5NRpo4D7LP
CReDABz+9X7rBdosvN6IA2YWX1aVXMysdOeQmjMi+fciHAgKnFdlDIXIDggQ
nOPidEhe0RdTJb8v5/hFiF9PbgpBXKbtwHE5FCwQRIC5qMbQoCOwyYbl0Zj1
aHFU7BECaLDJoqcUqrQDtSLISz0V70fxj91RXlL8/do3P+pizzxIwRQwxV6e
wG7CXUM9qiyyKYMRdgOKHXYE30WiseHCDrFABcvJyj6Vyyz+QRnzU5pfCXNs
88f2PE0NWa5MEx0UMPIrK4gLyhf4kImW/LGQIzB5RVk8Hw2NI2a6WbZTxBti
LpTJyiwYQhOizY9CMSLqPIJEq96AIjvkhyqEn+JtWuS79qSp87Kfrxj1W6lN
p69n20QhlTJdLdjS0COclHIe7s5AGZz56IbUahTnTbaSGpOcTU+etvm6DiUG
2aG990s5d8c28l/SFLihUE1AYZzBuafk4Ksls6D1mYf8eE6dgncNIClMCwCn
vtScpdiD7UVkcdSHKMOdPXT/ll8/VMkgl2O8po1ADVNrPFGJtJov1XRADR8k
pipfZgtCNvNvOsqOGFliUWV1974ZZ8uH44i2t81S7pGi/luz4OKCfLOIM3zv
BbrYLII0YM4UA/gRudzYRWeuOyPRAC0tTDU/zhdmVaR9gXUWtzEa+spTyLdG
4XotkDHXSj5dcl/ok9y2WN7OpFk4YFNgs/2FbhZFjiRq9SPNEZv78AdZZnnx
D8sIy53R2q7cBFVjQQoHKXA7X3IM5eSyCY0/Lef/++0fGElDNRkDBT5COBBJ
BCEiuEq11Pyfy0qaCEsf4JgIUg7SAYQALhEZQVBbij3HPjjw23ToEmJD6RSQ
TKS3KXw4ZUCCwCKMfUZEvoDZBLbzgNPLum3oPsdhkQCB7QjptEcgQM6rrGYF
lAJ7bBZIDds4CEVMq5nU8+EuR0NHribOTYeCJuCYnb3AYSYxDlNomA4NzIOo
tECZP6PmI3S+z6nhJR0BmoJdbpOa7qDY/ePwoU+KgmWADanbUPcEQaYvPkRI
TQSW/ZgsWFkufNmjnA5+WX+VR0DFGQxInRfudXao8/GocOB7RCDZ0xFWhkJc
HJGgnBpl9uB6yH9dFhYznfoh0kkWOWoMcqpySbJiAejm42070yj43CByojmj
BrIRStTt0I5RXKaa5VoP0gzKjKoOVXvbT/hrU5kxVTNby+l3OGO0EgP8Vfa/
V320ijLiNugmF3sRsRe6goDLv/g67IPybyHKO9yHKtTtlJtjZGYRaE9CmE+A
a1p+s+b417dLegkYxTaU/QTKZhPktc6Ieol0uGEQBQIR2Cb83E1iLMARgaID
o42bcSiLWdU908pWTw0RWPDRX4TiOAxICQRX7iOhdQwroNg4HV/7yZ9ToLBH
IBy4AM18Nelc6vEEhAx9cxb5PAq596DWk3kfhYzHhV+zmO3fZZulwQtH8L0t
AqGb+Bzhwsu5Zh+7lRCffHZbIQKBypbj3WYTrf/wkYDkbf7JPbGRXLaE9/X8
y/TgZjE///tfYk2Ilf9uMr7p9FG5gwipFFCu0ge5szESWYOJEUypn8LwJ7h7
TIF0d1Sw4z2wg6CQRRJjbaxuSRyo5Fyf6JnflMiCBaQG2lrqP5linRRhKLTW
rVFrWuX3qN82xEIpDUjlcTNtsSxawkqo4ElVtyLpMuerpLrlCA+il6od2wtz
IfiRDp8Xg8PRbiwOBUdA6zlCgAXBS/0v5Jg9fAbTuaejQYjLeMmhXVGgGMiT
74veXDTPrAzugPQBc+0Zbf+dosAgkx70bUWOBYwqk+swC1M2o2ymp+HSvoAH
fpRu6ubAFKgGTZoCuZ4N94wUpkO1/wChqih4BRDEKpGPjxQIcllxcAd0orA9
UmgHuMfFRDmEyjWMreQVQ6GAAFMWOAocx1ZqZmcaVmn4Ux09S2FP1EQXEHP1
KLbrXjPVvXEgsPB615GtnETONkibfK1Uambcf1oUhIzTyihdMstuBNHEltHa
nZ971UA2COJi/9pHW7HzmYNanMZti9UWWetAqL68g0PXsNfJOCcCpKGwJVLg
xXF0IqGMNvUBsMA7AsJBri+jRUY2HcKjIwKtk2hPtyUoqHv3OfMX8t0hRpYE
X2CHfyqRm84KOA75XBnVMp4xmx9NF9B7U6juGLZy8aJSwO3E3epovNwh0X4a
fpuIOZ7npnO53VyIBbgp6nTAAtSADoKCLzC5Gf3onDvIt0D7Y7zTwRSsQXFG
K7mDe5cb30fiDPIuYV40D4bClGhIq+FwyRznYE9xPxsr6TBb3vzDxUdBAUoJ
pOA3NfZFG0EBeX7dWrWXek4UkKYAW6MqIpAXrVMwiV/HFV9wQB1VGBZS40CA
ZVGd/GiYddJewM4GFX2na8KBPFlVhfxq2OIB2WE5IKWKz7XglyP+B45NcjWX
gLJg1aaTSmPrVUpWlR5PX/iJtJ8LvcZ2EOMs6SwUpV6tJ+qCqgGuDCkcYIM0
lxJoXfViS3YAAyKlYq0UVwNlipUg0Hbg+9Fuvg4UGTRZQtkO9WXcFH1S7fzn
/t/8STqFavDH0W98idT8JfjIqBpBAXlz2tCRI47FUbeM2KcJElFAoEFbgHJ0
WAy5NRQdAcMIBAsECOQJZQVGK1T75kTnxDFRINcd6K5pKmMpSEXHlJ7BwYPH
/tdl+aooOPk59fwIbpCCaK7ZEay6NmCC8x8uCIVhqYkRMCk6ruTdbMs0N0yT
diCwwIYhdYrBiM89kkFDw3voaNSfqK3wlmn9lVI4syqNsU+uOD4ZFWdRfkEu
CDpgEUgO1aNNor6Muvh+UXOTzazWmMOsuKLTWIR3fJYTp7jTUMb1YmuXfRlq
tJ21S/h9eVPbKmkQ1vAgtTERfzh5asM6eysV3+kTmwsZBDgQsOYzvNis8+CV
6kGW40vPJiAi8NivZHHbfQUBxi+7Dan6G/N4HyQy8yulngML3qctBlNqte69
+5A/zzV7n20oEQ74PgEE7rrM4DNeWxAQrtT8ELHFU9ZwGwQ5HGhG/HSWU8bU
i1n9X2ypzPInoQKwPVKPm4npUKTSq1KMqQQuJfiyjGZhniUXC3CMARkTAYK/
zGZ387/7+Ltvb1sVDt8grfhm3F4TC8bymG4mtgh0DQggFrCDoMUElMhjEgHx
r0mVh66VYrNUegdpEBQI5EVMfkj7UlMA9+kUjQBbAOsF2t7bfIO0gnN0BIEF
K3VNt43xk6p0RAB37CJijIYKd5kz01HXC+y/hgEpAUKFxlbwB0f1cMtuFPIB
daXGEwMLmwgNwBdDSuY0ATeIpOSqvgAncAoKpFDrxTx6eMqxIyAQfDd8KJeJ
y4qHcfL/rnz4uNr5r+HfyiOahZ3cay5GTBZVBsrgWbX3orVsGqKSkdqtNgXP
G30umOU7or2smEAQKODEcbZuakuz5rzB5Mp4Hr4TLy3IuOwvdAT8UbOeCxZE
UxCKM1sQ7ZrTun8dj1retaGw5aJqqy8wyqBzhXLqTXJcmBy0wlnmNRfTDymG
rM9n234Uq2x2FDUwd5+wQ3hvVZppx1xTRkg6KatYE3JTIG5Bk4AuA4/OSvrr
6snc9G7ZXlDGVqSYEakMzfJu7KIV9hv/7kJrrCMjTIS4ZbfuWr7PG3k9mZdv
ZkO61UcEGXFWKjadN5NwNApM1C8YBIGm2MNlOnyHLNS+HeujK0lJIjOgKgII
sCOqNTk8KOhUI9fVZByTZ0WErg0bZAqdYvOThsmhLN6SDOBT1J3lbqU3tB6F
N04oi290wjP30Jk59WXcHb3to+3HzItBeLGNjMjt3iCkJm8QuLETJhJ95VdE
6EUB0Saw1wgqmUrk+/wd4F/qiWYMslzyYkcQVAKwYPaXxTTiDARl7ubf3P3j
2V3T3HXSFLSXxZCJwzSXuOkUCz60CXRAUqZYjSYUDjjtkdfl5ne4kE1pVlHa
Xknlryo1rxvLH68uq4K3CV4QFHR2hNq+KQuSAjb/0frfvR23YWz783gCvFA2
+UI3iPSSO7kydN61YS7EVQc3oB6d1EOqyY59QK0cQWm2EnSci1Qa2k28THtH
NR8VEY6Ssgn6utR/eaz1w1eV8wX1HoBg53m1q4N3nRHt8ZEY8cPwIcUFPxa7
PxQ7UoGfDB88LY0UeFxY6ACP8Vk25cOsI9BLgOD7Gloz+E7AaEKB4yn6At0a
4kIpp0NUMSTbWVWCuBy4Ld7gsNoL1QAxy3ZEa026V6Z7pFtDOh2qFQ7UjA4e
RLlWQr73H7FGte1NSurEsOCncqQuE7W5fNvPH3Ac5R2mQ3QfKjggIl+8Uv43
GUHgUnHWf3YHzJ4+Tf18KZ8LGV/g83CbclQVd4eMRK7ScVHma/B+Ku63Rml/
usom/9COufIr1WH7KQeVEBTnVToGmLGl400EDZxL7AhV1Bq8nUxQz0uPGLbB
jpZZ6Lb4Neh76rpOpWSZcw3nzm6sQ7lWcVgKqGq3koh7h6664S8OqQHaetCz
UUk3w7ImENMthtSLg5S6Gr2W/dIUf0ROFuuXR144fpEFApD4phgRymLzF2V2
Vd2g+NueCYcJOl7wraHr6eQdKn8IAYgC4XWjvnPZUii3gN636BGy17OwxW6L
KZ5M5a/4OJ+FqbLBAVLPbj3sxvZFHQsgB9OCf+dqYnsd0TNMt1eMoNzMN/nD
+SGcJWxrNJsgkSPAo6ZVZsK0eVyo6noxsFJujnSzPvJmzpWkCW6b/HKQx1wu
BAj++59O79vRbV3cdolNwbUG97S3U8GCdNUUH7qEq2Gg23WddDrUtnKz3AkI
sB1R2/WSTrBMV7Uall616aqr3jfF+7rgfIn0AUlh3SNqyf+Wl13a1MVFW/F/
OHmBi1YnqNJCXpS6LETIWKfiwqUEGARVPOHwV14l8DxStnIJCoxcLDA8rmwu
gaI0/Gk0gO/o8ARag9cQl/2k9W2PcHBYDV6hI3hNWsFzangd6RLm4GWjjy/K
XT0wQ1agjcAoK7z64QNBhGelToegKcMu0GjnT8OHKh8uByQOlDsodtyA+oFA
hiqOh7/RDyv1oHuSsGuqbcVD1Hx5q0FuNMfk4j8Pd6FoNiJAz/+qF1BDVC6R
snmxI7182CiP/ELgAEEGEEFYlo0hQkmVsXzKUO9FtUs0jA7oVWNpnibEi74g
FUeGAtqXsdqjEYD7UKMagVcgcaIdgCsIWGA52FdVmA6pZhx88RvXDPKf2wIO
yq2MA26Q9uigQKAN4xmSceh0x9dtgpTiWF6dd2NgR+usce1NARRSOFdL73AO
z6tNZsW/UR8kqbTpjWveVzqrNDVBGDXQO3eFiZD+H1aPFNZzOJriYEzK4FyL
cIpdTRvXlwof5/b+pXwlG5x/Yk91DQ7Czvw2OFXKTDvoqjgrRzRs1F8TJnjy
MN92JhxwUfbawost3Ic/rg3MXREANA2fUuZBU5RtiElPGAWCBgHlFjjFXIYL
dRvWmo8dUTx6ajm2Q5sPLk2iZQ320usQDjMV/V0qpcKoNMx95/yGBoN9QYdE
6zmO/RlAdqNbRkhjnMjNYDYn4wAC5Q4Qp/JhpnCg8MHtoPmSDLIOl+azmwWi
Z/zYb3bTB/Pr+eRmoWE3enrPuOO7WScVWJFiOu2BAG5COp93tRdSDOZUFt9N
uWsUGuT+AG+JlgwdBjr89dHil0ez+3n3ZSm1fWYJBbOZXH9dLL5I5Z+NQQpM
pRfAPdNP0w6pBMi1FCBYfvP594f/B2EPwj8=
    "], {{0, 386}, {515, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{515, 386},
  PlotRange->{{0, 515}, {0, 386}}]], "Output",
 ImageSize->{519, 386},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[28]=",
 CellID->1540617267]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDownloadAllFiles", "[", "\"\</tmp/\>\"", "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->885347940],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPR5085.JPG\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{"\"/tmp/GOPR5086.JPG\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 ImageSize->{445, 26},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->142059951]
}, Open  ]],

Cell["Example of deleting files on camera", "MathCaption",
 CellID->225972517],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->1751402591],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5087.MP4\"\>", ",", "\<\"GOPR5091.JPG\"\>", 
   ",", "\<\"GOPR5092.JPG\"\>", ",", "\<\"GOPR5093.JPG\"\>"}], 
  "}"}]], "Output",
 ImageSize->{451, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->593826678]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDeleteLast", "[", "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->914623406],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->501837580]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1967417371],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5087.MP4\"\>", ",", "\<\"GOPR5091.JPG\"\>", 
   ",", "\<\"GOPR5092.JPG\"\>"}], "}"}]], "Output",
 ImageSize->{340, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->1626424671]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDeleteAll", "[", "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->21305103],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> None]], 
                  36, 13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}, "ContentType" -> 
                    "application/octet-stream"], CharacterEncoding -> 
                    None]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}, "ContentType" -> 
                 "application/octet-stream"], CharacterEncoding -> None], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}, "ContentType" -> 
    "application/octet-stream"], CharacterEncoding -> None],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->1792314746]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->889608403],

Cell[BoxData[
 TemplateBox[{
  "FetchURL","httperr",
   "\"The request to URL \
\\!\\(\\*RowBox[{\\\"\\\\\\\"http://10.5.5.9:8080/DCIM/100GOPRO/\\\\\\\"\\\"}]\
\\) was not successful. The server returned the HTTP status code \
\\!\\(\\*RowBox[{\\\"\\\\\\\"404 (\\\\\\\\\\\\\\\"Not \
Found\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"",2,16,1,31795694382005216739,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[16]:=",
 CellID->1140804751],

Cell[BoxData[
 TemplateBox[{
  "goProGetFileList","empty","\"No files on GoPro camera.\"",2,16,2,
   31795694382005216739,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[16]:=",
 CellID->1921746236]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 ButtonBox["Downloading and deleting files from GoPro",
  BaseStyle->"Link",
  ButtonData->"paclet:GoProController/tutorial/goProDownload"],
 "\[LongDash] Tutorial for GoPro HERO2.\n",
 ButtonBox["HERO2",
  BaseStyle->"Link",
  ButtonData->"paclet:GoProController/tutorial/HERO2"],
 "  \[LongDash] Tutorial for GoPro HERO2.\n",
 ButtonBox["HERO3 & HERO3+",
  BaseStyle->"Link",
  ButtonData->"paclet:GoProController/tutorial/HERO3"],
 " \[LongDash]  Tutorial for GoPro HERO3 and HERO3+.\n",
 ButtonBox["HERO4",
  BaseStyle->"Link",
  ButtonData->"paclet:GoProController/tutorial/HERO4"],
 "  \[LongDash] Tutorial for GoProHero4.\n",
 ButtonBox["goProSetup",
  BaseStyle->"Link",
  ButtonData->"paclet:GoProController/tutorial/goProSetup"],
 " \[LongDash] setting GoPro camera."
}], "RelatedTutorials",
 CellID->806871991]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"HERO3 & HERO3+",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "GoProController Package", ButtonData -> 
         "paclet:GoProController/guide/GoProController", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 5, 1, 22, 24, 10.422556}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "GoProController`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Go Pro Controller Tutorial", "language" -> "en", "paclet" -> 
    "GoProController", "status" -> "None", "summary" -> 
    "This tutorial will help you to understand controlling of GoPro HERO3 or \
HERO3+ cameras. It is highly recommended to read the manual for this camera \
model, it can be found on GoPro website. Before controlling camera you need \
to set the package first. You have to do that because package need to know \
which files have to be loaded and it is impossible to control goProCamera \
without WiFi password. Package setup functions.", "synonyms" -> {}, 
    "tabletags" -> DocumentationBuild`Make`Private`tabletaggingrules$14879, 
    "title" -> "HERO3 & HERO3+", "titlemodifier" -> "", "windowtitle" -> 
    "HERO3 & HERO3+", "type" -> "Tutorial", "uri" -> 
    "GoProController/tutorial/HERO3"}, "SearchTextTranslated" -> ""},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Linux x86 (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[180973, 4650, 363030, 5959, 407, "Output",
   CellTags->"RasterizedOutput",
   CellID->1540617267]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 578813, 11510}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 3178, 76, 52, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[3789, 101, 51, 1, 52, "Title",
 CellID->509267359],
Cell[3843, 104, 26866, 471, 66, "TutorialJumpBox"],
Cell[30712, 577, 236, 5, 52, "Text",
 CellID->591812887],
Cell[CellGroupData[{
Cell[30973, 586, 53, 1, 65, "Section",
 CellID->1147065604],
Cell[31029, 589, 255, 5, 72, "Text",
 CellID->1127271971],
Cell[31287, 596, 948, 23, 223, "DefinitionBox",
 CellID->932885528],
Cell[32238, 621, 63, 1, 33, "Caption",
 CellID->492680226],
Cell[32304, 624, 137, 4, 70, "MathCaption",
 CellID->1825449234],
Cell[CellGroupData[{
Cell[32466, 632, 196, 4, 70, "Input",
 CellID->1373894796],
Cell[32665, 638, 278, 8, 39, "Output",
 CellID->1150631099]
}, Open  ]],
Cell[CellGroupData[{
Cell[32980, 651, 123, 3, 70, "Input",
 CellID->222653374],
Cell[33106, 656, 112, 2, 70, "Print",
 CellID->916688877]
}, Open  ]],
Cell[33233, 661, 137, 4, 70, "Text",
 CellID->479826094],
Cell[CellGroupData[{
Cell[33395, 669, 116, 3, 70, "Input",
 CellID->289713918],
Cell[33514, 674, 295, 7, 70, "Message",
 CellID->1154940287]
}, Open  ]],
Cell[33824, 684, 58, 1, 70, "Text",
 CellID->451072549],
Cell[CellGroupData[{
Cell[33907, 689, 120, 3, 70, "Input",
 CellID->1453594133],
Cell[34030, 694, 255, 8, 39, "Output",
 CellID->254642332]
}, Open  ]],
Cell[34300, 705, 95, 1, 70, "Text",
 CellID->490632353],
Cell[CellGroupData[{
Cell[34420, 710, 124, 3, 70, "Input",
 CellID->342547117],
Cell[34547, 715, 114, 2, 70, "Print",
 CellID->1988807061]
}, Open  ]],
Cell[CellGroupData[{
Cell[34698, 722, 120, 3, 70, "Input",
 CellID->1604500669],
Cell[34821, 727, 231, 7, 39, "Output",
 CellID->1559618771]
}, Open  ]],
Cell[35067, 737, 95, 1, 70, "Text",
 CellID->1377125043],
Cell[CellGroupData[{
Cell[35187, 742, 129, 3, 70, "Input",
 CellID->1537297477],
Cell[35319, 747, 171, 5, 37, "Output",
 CellID->729303512]
}, Open  ]],
Cell[35505, 755, 238, 5, 70, "MathCaption",
 CellID->147134958],
Cell[35746, 762, 258, 7, 70, "Input",
 CellID->1582738395]
}, Open  ]],
Cell[CellGroupData[{
Cell[36041, 774, 65, 1, 70, "Section",
 CellID->1610906309],
Cell[36109, 777, 286, 6, 70, "Text",
 CellID->287586024],
Cell[36398, 785, 675, 16, 70, "Text",
 CellID->1758738144],
Cell[37076, 803, 1301, 22, 70, "DefinitionBox",
 CellID->565688341],
Cell[38380, 827, 76, 1, 70, "Caption",
 CellID->1466032346],
Cell[38459, 830, 1531, 26, 70, "DefinitionBox",
 CellID->188903013],
Cell[39993, 858, 76, 1, 70, "Caption",
 CellID->923594839],
Cell[40072, 861, 74, 1, 70, "MathCaption",
 CellID->441051913],
Cell[CellGroupData[{
Cell[40171, 866, 708, 19, 70, "Input",
 CellID->1211772279],
Cell[40882, 887, 114, 2, 70, "Print",
 CellID->1199642347],
Cell[40999, 891, 172, 5, 37, "Output",
 CellID->1045176390]
}, Open  ]],
Cell[41186, 899, 167, 4, 70, "MathCaption",
 CellID->2011084192],
Cell[CellGroupData[{
Cell[41378, 907, 103, 3, 70, "Input",
 CellID->1341113980],
Cell[41484, 912, 13681, 332, 70, "Output",
 CellID->1586005692]
}, Open  ]],
Cell[55180, 1247, 84, 1, 70, "MathCaption",
 CellID->1353514701],
Cell[CellGroupData[{
Cell[55289, 1252, 358, 11, 70, "Input",
 CellID->1387146263],
Cell[55650, 1265, 265, 8, 39, "Output",
 CellID->43751577]
}, Open  ]],
Cell[CellGroupData[{
Cell[55952, 1278, 116, 3, 70, "Input",
 CellID->915282352],
Cell[56071, 1283, 282, 8, 39, "Output",
 CellID->1439268646]
}, Open  ]],
Cell[CellGroupData[{
Cell[56390, 1296, 120, 3, 70, "Input",
 CellID->199735315],
Cell[56513, 1301, 269, 8, 39, "Output",
 CellID->2024954867]
}, Open  ]],
Cell[56797, 1312, 84, 1, 70, "MathCaption",
 CellID->1245402537],
Cell[CellGroupData[{
Cell[56906, 1317, 358, 11, 70, "Input",
 CellID->1664779243],
Cell[57267, 1330, 266, 8, 39, "Output",
 CellID->433984472]
}, Open  ]],
Cell[CellGroupData[{
Cell[57570, 1343, 116, 3, 70, "Input",
 CellID->257847417],
Cell[57689, 1348, 281, 8, 39, "Output",
 CellID->547561335]
}, Open  ]],
Cell[CellGroupData[{
Cell[58007, 1361, 121, 3, 70, "Input",
 CellID->1468055911],
Cell[58131, 1366, 269, 8, 39, "Output",
 CellID->1947882005]
}, Open  ]],
Cell[CellGroupData[{
Cell[58437, 1379, 117, 3, 70, "Input",
 CellID->1702277935],
Cell[58557, 1384, 444, 10, 58, "Output",
 CellID->1588924759]
}, Open  ]],
Cell[59016, 1397, 80, 1, 70, "MathCaption",
 CellID->388558967],
Cell[CellGroupData[{
Cell[59121, 1402, 135, 4, 70, "Input",
 CellID->940580666],
Cell[59259, 1408, 615, 13, 96, "Output",
 CellID->1684890504]
}, Open  ]],
Cell[59889, 1424, 221, 6, 70, "Input",
 CellID->251470906],
Cell[CellGroupData[{
Cell[60135, 1434, 376, 10, 70, "Input",
 CellID->274056890],
Cell[60514, 1446, 265, 8, 39, "Output",
 CellID->21669456],
Cell[60782, 1456, 334, 10, 39, "Output",
 CellID->210415814]
}, Open  ]],
Cell[61131, 1469, 124, 3, 70, "MathCaption",
 CellID->1445740488],
Cell[CellGroupData[{
Cell[61280, 1476, 226, 7, 70, "Input",
 CellID->1967973851],
Cell[61509, 1485, 466, 12, 58, "Output",
 CellID->1487701802]
}, Open  ]],
Cell[CellGroupData[{
Cell[62012, 1502, 294, 9, 70, "Input",
 CellID->103095197],
Cell[62309, 1513, 1702, 31, 134, "Output",
 CellID->399318827]
}, Open  ]],
Cell[CellGroupData[{
Cell[64048, 1549, 105, 3, 70, "Input",
 CellID->1524235264],
Cell[64156, 1554, 23257, 668, 70, "Print",
 CellID->1026690036]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87462, 2228, 62, 1, 70, "Section",
 CellID->2020261348],
Cell[87527, 2231, 122, 3, 70, "Text",
 CellID->933781132],
Cell[87652, 2236, 1104, 29, 70, "DefinitionBox",
 CellID->1458783392],
Cell[88759, 2267, 62, 1, 70, "Caption",
 CellID->521916346],
Cell[88824, 2270, 118, 3, 70, "MathCaption",
 CellID->210530946],
Cell[CellGroupData[{
Cell[88967, 2277, 188, 5, 70, "Input",
 CellID->799893120],
Cell[89158, 2284, 235, 7, 37, "Output",
 CellID->1009206690]
}, Open  ]],
Cell[CellGroupData[{
Cell[89430, 2296, 109, 3, 70, "Input",
 CellID->1221517305],
Cell[89542, 2301, 474, 11, 70, "Message",
 CellID->891684298],
Cell[90019, 2314, 238, 6, 70, "Message",
 CellID->1614285412]
}, Open  ]],
Cell[90272, 2323, 122, 4, 70, "Input",
 CellID->925523387],
Cell[CellGroupData[{
Cell[90419, 2331, 108, 3, 70, "Input",
 CellID->881838120],
Cell[90530, 2336, 202, 6, 37, "Output",
 CellID->1294965508]
}, Open  ]],
Cell[90747, 2345, 59, 1, 70, "MathCaption",
 CellID->1728828580],
Cell[CellGroupData[{
Cell[90831, 2350, 118, 3, 70, "Input",
 CellID->195503368],
Cell[90952, 2355, 13753, 334, 70, "Output",
 CellID->1809788781]
}, Open  ]],
Cell[CellGroupData[{
Cell[104742, 2694, 108, 3, 70, "Input",
 CellID->130790836],
Cell[104853, 2699, 202, 6, 37, "Output",
 CellID->1176852258]
}, Open  ]],
Cell[CellGroupData[{
Cell[105092, 2710, 104, 3, 70, "Input",
 CellID->836854765],
Cell[105199, 2715, 13702, 332, 70, "Output",
 CellID->885345438]
}, Open  ]],
Cell[CellGroupData[{
Cell[118938, 3052, 108, 3, 70, "Input",
 CellID->693477158],
Cell[119049, 3057, 307, 9, 39, "Output",
 CellID->32104324]
}, Open  ]],
Cell[CellGroupData[{
Cell[119393, 3071, 106, 3, 70, "Input",
 CellID->983308975],
Cell[119502, 3076, 13703, 332, 70, "Output",
 CellID->1194694328]
}, Open  ]],
Cell[CellGroupData[{
Cell[133242, 3413, 104, 3, 70, "Input",
 CellID->703823027],
Cell[133349, 3418, 13702, 332, 70, "Output",
 CellID->848968121]
}, Open  ]],
Cell[CellGroupData[{
Cell[147088, 3755, 101, 3, 70, "Input",
 CellID->465212027],
Cell[147192, 3760, 13703, 332, 70, "Output",
 CellID->1479156966]
}, Open  ]],
Cell[CellGroupData[{
Cell[160932, 4097, 109, 3, 70, "Input",
 CellID->1474418717],
Cell[161044, 4102, 339, 9, 39, "Output",
 CellID->1774491508]
}, Open  ]],
Cell[CellGroupData[{
Cell[161420, 4116, 106, 3, 70, "Input",
 CellID->553190623],
Cell[161529, 4121, 13703, 332, 70, "Output",
 CellID->1302060245]
}, Open  ]],
Cell[CellGroupData[{
Cell[175269, 4458, 109, 3, 70, "Input",
 CellID->1863964437],
Cell[175381, 4463, 476, 11, 70, "Message",
 CellID->1578550671],
Cell[175860, 4476, 239, 6, 70, "Message",
 CellID->1485434089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176148, 4488, 81, 1, 70, "Section",
 CellID->889545618],
Cell[176232, 4491, 210, 5, 70, "Text",
 CellID->377864662],
Cell[176445, 4498, 297, 6, 70, "Text",
 CellID->419917810],
Cell[176745, 4506, 210, 5, 70, "Text",
 CellID->127719993],
Cell[176958, 4513, 376, 7, 70, "Text",
 CellID->443817208],
Cell[177337, 4522, 1159, 31, 70, "DefinitionBox",
 CellID->1978788228],
Cell[178499, 4555, 83, 1, 70, "Caption",
 CellID->110642876],
Cell[178585, 4558, 174, 4, 70, "Text",
 CellID->438773335],
Cell[178762, 4564, 289, 8, 70, "DefinitionBox",
 CellID->1287667594],
Cell[179054, 4574, 59, 1, 70, "Caption",
 CellID->1083167274],
Cell[179116, 4577, 73, 1, 70, "MathCaption",
 CellID->1771579100],
Cell[CellGroupData[{
Cell[179214, 4582, 593, 16, 70, "Input",
 CellID->210546345],
Cell[179810, 4600, 112, 2, 70, "Print",
 CellID->1027641970]
}, Open  ]],
Cell[CellGroupData[{
Cell[179959, 4607, 109, 3, 70, "Input",
 CellID->1761096403],
Cell[180071, 4612, 247, 8, 39, "Output",
 CellID->2117699633]
}, Open  ]],
Cell[CellGroupData[{
Cell[180355, 4625, 251, 7, 70, "Input",
 CellID->608573309],
Cell[180609, 4634, 217, 6, 37, "Output",
 CellID->2059838879]
}, Open  ]],
Cell[CellGroupData[{
Cell[180863, 4645, 107, 3, 28, "Input",
 CellID->1308078202],
Cell[180973, 4650, 363030, 5959, 407, "Output",
 CellTags->"RasterizedOutput",
 CellID->1540617267]
}, Open  ]],
Cell[CellGroupData[{
Cell[544040, 10614, 130, 3, 70, "Input",
 CellID->885347940],
Cell[544173, 10619, 391, 13, 70, "Output",
 CellID->142059951]
}, Open  ]],
Cell[544579, 10635, 78, 1, 70, "MathCaption",
 CellID->225972517],
Cell[CellGroupData[{
Cell[544682, 10640, 109, 3, 70, "Input",
 CellID->1751402591],
Cell[544794, 10645, 308, 9, 39, "Output",
 CellID->593826678]
}, Open  ]],
Cell[CellGroupData[{
Cell[545139, 10659, 107, 3, 70, "Input",
 CellID->914623406],
Cell[545249, 10664, 14149, 341, 70, "Output",
 CellID->501837580]
}, Open  ]],
Cell[CellGroupData[{
Cell[559435, 11010, 109, 3, 70, "Input",
 CellID->1967417371],
Cell[559547, 11015, 277, 8, 39, "Output",
 CellID->1626424671]
}, Open  ]],
Cell[CellGroupData[{
Cell[559861, 11028, 105, 3, 70, "Input",
 CellID->21305103],
Cell[559969, 11033, 14150, 341, 70, "Output",
 CellID->1792314746]
}, Open  ]],
Cell[CellGroupData[{
Cell[574156, 11379, 108, 3, 70, "Input",
 CellID->889608403],
Cell[574267, 11384, 475, 11, 70, "Message",
 CellID->1140804751],
Cell[574745, 11397, 238, 6, 70, "Message",
 CellID->1921746236]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[575032, 11409, 287, 12, 70, "RelatedTutorialsSection",
 CellID->415694126],
Cell[575322, 11423, 31, 0, 70, "SectionHeaderSpacer"],
Cell[575356, 11425, 837, 22, 70, "RelatedTutorials",
 CellID->806871991]
}, Open  ]]
}, Open  ]],
Cell[576220, 11451, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

