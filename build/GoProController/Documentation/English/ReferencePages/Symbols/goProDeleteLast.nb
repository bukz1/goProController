(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     27407,        787]
NotebookOptionsPosition[     23780,        678]
NotebookOutlinePosition[     25937,        735]
CellTagsIndexPosition[     25852,        730]
WindowTitle->goProDeleteLast
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["GO PRO CONTROLLER SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Downloading and deleting files from GoProHERO2HERO3 & \
HERO3+HERO4goProSetupgoProControl\"\>":>Documentation`HelpLookup[
       "paclet:GoProController/tutorial/goProDownload"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"GoProController Package\"\>":>
       Documentation`HelpLookup[
       "paclet:GoProController/guide/GoProController"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"GoProController/ref/goProDeleteLast\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["GoProController/ref/goProDeleteLast"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/GoProController/ref/\
goProDeleteLast.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$4179], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "GoProController/ref/goProDeleteLast", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["goProDeleteLast", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"goProDeleteLast", "[", "]"}]], "InlineFormula"],
     " \[LineSeparator]Delete last file captured by camera. If it is burst \
sequence it will be deleted whole."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1534792645],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1429903121],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<GoProController`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"goProSetCamera", "[", "\"\<HERO3+\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetCameraModel", "[", "\"\<Black\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goProSetPassword", "[", "\"\<12345678\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"if", " ", "the", " ", "password", " ", "is", " ", "12345678"}], 
   "*)"}], ";"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->556374637],

Cell[BoxData["\<\"camera: HERO3+\"\>"], "Print",
 CellLabel->"During evaluation of In[120]:=",
 CellID->1387346706]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->108981817],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GOPR5104.JPG\"\>", ",", "\<\"GOPR5105.JPG\"\>"}], 
  "}"}]], "Output",
 ImageSize->{230, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->736312749]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProDeleteLast", "[", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1320173721],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         ButtonBox[
          PaneSelectorBox[{False->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->GrayLevel[1],
               $CellContext`LineColor -> GrayLevel[1],
               $CellContext`FrontFaceColor -> GrayLevel[1],
               $CellContext`BackFaceColor -> GrayLevel[1],
               $CellContext`GraphicsColor -> GrayLevel[1]], 
              Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]], True->
           GraphicsBox[
            {RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0], DiskBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"200\"\>",
               StripOnInput->False,
               FontSize->10,
               FontWeight->Bold,
               FontColor->RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`LineColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`FrontFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`BackFaceColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]],
               $CellContext`GraphicsColor -> RGBColor[
                 Rational[2, 3], 
                 Rational[2, 3], 
                 Rational[2, 3]]], Scaled[{0.53, 0.48}]]},
            Background->None,
            
            ImageSize->
             Dynamic[{
              Automatic, (3 CurrentValue["FontCapHeight"])/
               AbsoluteCurrentValue[Magnification]}]]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic],
          Appearance->"Frameless",
          
          ButtonFunction:>
           With[{CloudObject`Private`file$ = 
             FileNameJoin[{$TemporaryDirectory, 
                StringJoin["HTTPResponse", 
                 IntegerString[
                  Hash[
                   HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]], 36, 
                  13], ".", 
                 First[
                  StringCases[
                   First[
                    CloudObject`Private`toContentTypeWithEncoding[
                    HTTPResponse[
                    ByteArray[{0, 0}], 
                    Association[
                    "Headers" -> {{"Allow", "GET "}, {
                    "Accept-Ranges", "bytes"}, {
                    "Cache-Control", "no-cache"}, {
                    "Cache-Control", "no-store"}, {
                    "Connection", "Keep-Alive"}, {
                    "Server", "GoPro Web Server v1.0"}, {
                    "Content-Type", "application/octet-stream"}, {
                    "Content-Length", "2"}}, "StatusCode" -> 200, 
                    "Cookies" -> {}], CharacterEncoding -> Automatic]]], {
                   StringExpression[StartOfString, "text/plain"] :> "txt", 
                    StringExpression[
                    Repeated[
                    Except["/"]], "/", 
                    Pattern[CloudObject`Private`a, 
                    Repeated[WordCharacter]], 
                    BlankNullSequence[]] :> CloudObject`Private`a}], 
                  "txt"]]}]}, BinaryWrite[CloudObject`Private`file$, 
              CloudObject`Private`HTTPProperty[
               HTTPResponse[
                ByteArray[{0, 0}], 
                Association[
                "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
                   "Cache-Control", "no-cache"}, {
                   "Cache-Control", "no-store"}, {
                   "Connection", "Keep-Alive"}, {
                   "Server", "GoPro Web Server v1.0"}, {
                   "Content-Type", "application/octet-stream"}, {
                   "Content-Length", "2"}}, "StatusCode" -> 200, 
                 "Cookies" -> {}], CharacterEncoding -> Automatic], 
               "BodyBytes"]]; Close[CloudObject`Private`file$]; 
            SystemOpen[CloudObject`Private`file$]],
          Evaluator->Automatic,
          Method->"Preemptive"], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"OK\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Content type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"application/octet-stream\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[{0, 0}], 
   Association[
   "Headers" -> {{"Allow", "GET "}, {"Accept-Ranges", "bytes"}, {
      "Cache-Control", "no-cache"}, {"Cache-Control", "no-store"}, {
      "Connection", "Keep-Alive"}, {"Server", "GoPro Web Server v1.0"}, {
      "Content-Type", "application/octet-stream"}, {"Content-Length", "2"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{406, 46},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->1006040924]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goProGetFileList", "[", "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1956823434],

Cell[BoxData[
 RowBox[{"{", "\<\"GOPR5104.JPG\"\>", "}"}]], "Output",
 ImageSize->{119, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->1510764384]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[{
 TemplateBox[{Cell[
    TextData["Downloading and deleting files from GoPro"]],
   "paclet:GoProController/tutorial/goProDownload"},
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{"\[LongDash]", " ", 
  RowBox[{"Tutorial", " ", "for", " ", "GoPro", " ", 
   RowBox[{"HERO2", ".", "\n"}]}]}], "\n", 
 TemplateBox[{Cell[
    TextData["HERO2"]],"paclet:GoProController/tutorial/HERO2"},
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{"  ", 
  RowBox[{"\[LongDash]", " ", 
   RowBox[{"Tutorial", " ", "for", " ", "GoPro", " ", 
    RowBox[{"HERO2", ".", "\n"}]}]}]}], "\n", 
 TemplateBox[{Cell[
    TextData["HERO3 & HERO3+"]],"paclet:GoProController/tutorial/HERO3"},
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{" ", 
  RowBox[{"\[LongDash]", "  ", 
   RowBox[{
    RowBox[{
    "Tutorial", " ", "for", " ", "GoPro", " ", "HERO3", " ", "and", " ", 
     "HERO3"}], "+", 
    RowBox[{".", "\n"}]}]}]}], "\n", 
 TemplateBox[{Cell[
    TextData["HERO4"]],"paclet:GoProController/tutorial/HERO4"},
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{"  ", 
  RowBox[{"\[LongDash]", " ", 
   RowBox[{"Tutorial", " ", "for", " ", 
    RowBox[{"GoProHero4", ".", "\n"}]}]}]}], "\n", 
 TemplateBox[{Cell[
    TextData["goProSetup"]],"paclet:GoProController/tutorial/goProSetup"},
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{" ", 
  RowBox[{"\[LongDash]", " ", 
   RowBox[{"setting", " ", "GoPro", " ", 
    RowBox[{"camera", ".", "\n"}]}]}]}], "\n", 
 TemplateBox[{Cell[
    TextData["goProControl"]],"paclet:GoProController/tutorial/goProControl"},
  
  "RefLink",
  BaseStyle->"Tutorials"], "\n", 
 RowBox[{" ", 
  RowBox[{"\[LongDash]", "  ", 
   RowBox[{
   "how", " ", "to", " ", "control", " ", "GoProCamera"}]}]}]}], "Tutorials",
 CellID->341631938],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["GoProController Package"]],
   "paclet:GoProController/guide/GoProController"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->2103060160]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"goProDeleteLast",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "GoProController Package", ButtonData -> 
         "paclet:GoProController/guide/GoProController", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 5, 14, 19, 17, 59.715148}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "GoProController`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Go Pro Controller Symbol", "language" -> "en", "paclet" -> 
    "GoProController", "status" -> "None", "summary" -> 
    "goProDeleteLast[] Delete last file captured by camera. If it is burst \
sequence it will be deleted whole.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "goProDeleteLast", "titlemodifier" -> "", "windowtitle" -> 
    "goProDeleteLast", "type" -> "Symbol", "uri" -> 
    "GoProController/ref/goProDeleteLast"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Linux x86 (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5072, 144, 388, 15, 33, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->1534792645]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 25708, 723}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 3738, 92, 52, "AnchorBarGrid",
 CellID->1],
Cell[4328, 115, 292, 11, 48, "ObjectNameGrid"],
Cell[4623, 128, 424, 12, 84, "Usage",
 CellID->982511436],
Cell[CellGroupData[{
Cell[5072, 144, 388, 15, 33, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->1534792645],
Cell[CellGroupData[{
Cell[5485, 163, 196, 6, 28, "ExampleSection",
 CellID->1429903121],
Cell[CellGroupData[{
Cell[5706, 173, 528, 13, 85, "Input",
 CellID->556374637],
Cell[6237, 188, 115, 2, 24, "Print",
 CellID->1387346706]
}, Open  ]],
Cell[CellGroupData[{
Cell[6389, 195, 107, 3, 28, "Input",
 CellID->108981817],
Cell[6499, 200, 245, 8, 39, "Output",
 CellID->736312749]
}, Open  ]],
Cell[CellGroupData[{
Cell[6781, 213, 107, 3, 28, "Input",
 CellID->1320173721],
Cell[6891, 218, 13702, 332, 67, "Output",
 CellID->1006040924]
}, Open  ]],
Cell[CellGroupData[{
Cell[20630, 555, 108, 3, 28, "Input",
 CellID->1956823434],
Cell[20741, 560, 201, 6, 37, "Output",
 CellID->1510764384]
}, Open  ]]
}, Open  ]],
Cell[20969, 570, 31, 0, 29, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21037, 575, 272, 12, 33, "TutorialsSection",
 CellID->250839057],
Cell[21312, 589, 31, 0, 70, "SectionHeaderSpacer"],
Cell[21346, 591, 1806, 53, 70, "Tutorials",
 CellID->341631938],
Cell[23155, 646, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23223, 651, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[23502, 665, 31, 0, 70, "SectionHeaderSpacer"],
Cell[23536, 667, 202, 6, 70, "MoreAbout",
 CellID->2103060160]
}, Open  ]],
Cell[23753, 676, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

